2023-05-05 10:15:35,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 10:15:35,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 10:15:35,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 10:15:35,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 10:15:36,615:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-05 10:15:38,814:INFO:PyCaret ClassificationExperiment
2023-05-05 10:15:38,815:INFO:Logging name: clf-default-name
2023-05-05 10:15:38,815:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-05 10:15:38,815:INFO:version 3.0.0
2023-05-05 10:15:38,815:INFO:Initializing setup()
2023-05-05 10:15:38,815:INFO:self.USI: cf37
2023-05-05 10:15:38,815:INFO:self._variable_keys: {'_ml_usecase', 'memory', 'html_param', 'fold_groups_param', 'fix_imbalance', 'y', 'seed', 'y_test', 'X', 'fold_generator', 'fold_shuffle_param', 'log_plots_param', 'is_multiclass', 'gpu_param', 'n_jobs_param', 'pipeline', 'X_train', 'exp_name_log', '_available_plots', 'exp_id', 'y_train', 'USI', 'logging_param', 'data', 'idx', 'target_param', 'X_test', 'gpu_n_jobs_param'}
2023-05-05 10:15:38,815:INFO:Checking environment
2023-05-05 10:15:38,815:INFO:python_version: 3.9.13
2023-05-05 10:15:38,815:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-05 10:15:38,815:INFO:machine: AMD64
2023-05-05 10:15:38,815:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-05 10:15:38,815:INFO:Memory: svmem(total=16456249344, available=5078126592, percent=69.1, used=11378122752, free=5078126592)
2023-05-05 10:15:38,815:INFO:Physical Core: 6
2023-05-05 10:15:38,815:INFO:Logical Core: 12
2023-05-05 10:15:38,815:INFO:Checking libraries
2023-05-05 10:15:38,815:INFO:System:
2023-05-05 10:15:38,816:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-05 10:15:38,816:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-05-05 10:15:38,816:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-05 10:15:38,816:INFO:PyCaret required dependencies:
2023-05-05 10:15:38,816:INFO:                 pip: 22.2.2
2023-05-05 10:15:38,816:INFO:          setuptools: 63.4.1
2023-05-05 10:15:38,816:INFO:             pycaret: 3.0.0
2023-05-05 10:15:38,816:INFO:             IPython: 7.31.1
2023-05-05 10:15:38,816:INFO:          ipywidgets: 7.6.5
2023-05-05 10:15:38,816:INFO:                tqdm: 4.64.1
2023-05-05 10:15:38,816:INFO:               numpy: 1.21.5
2023-05-05 10:15:38,816:INFO:              pandas: 1.4.4
2023-05-05 10:15:38,816:INFO:              jinja2: 3.1.2
2023-05-05 10:15:38,816:INFO:               scipy: 1.9.1
2023-05-05 10:15:38,816:INFO:              joblib: 1.2.0
2023-05-05 10:15:38,816:INFO:             sklearn: 1.0.2
2023-05-05 10:15:38,816:INFO:                pyod: 1.0.9
2023-05-05 10:15:38,816:INFO:            imblearn: 0.10.1
2023-05-05 10:15:38,816:INFO:   category_encoders: 2.6.0
2023-05-05 10:15:38,816:INFO:            lightgbm: 3.3.5
2023-05-05 10:15:38,816:INFO:               numba: 0.55.1
2023-05-05 10:15:38,816:INFO:            requests: 2.28.1
2023-05-05 10:15:38,816:INFO:          matplotlib: 3.5.2
2023-05-05 10:15:38,816:INFO:          scikitplot: 0.3.7
2023-05-05 10:15:38,817:INFO:         yellowbrick: 1.5
2023-05-05 10:15:38,817:INFO:              plotly: 5.9.0
2023-05-05 10:15:38,817:INFO:             kaleido: 0.2.1
2023-05-05 10:15:38,817:INFO:         statsmodels: 0.13.2
2023-05-05 10:15:38,817:INFO:              sktime: 0.16.1
2023-05-05 10:15:38,817:INFO:               tbats: 1.1.2
2023-05-05 10:15:38,817:INFO:            pmdarima: 2.0.3
2023-05-05 10:15:38,817:INFO:              psutil: 5.9.0
2023-05-05 10:15:38,817:INFO:PyCaret optional dependencies:
2023-05-05 10:15:40,743:INFO:                shap: 0.41.0
2023-05-05 10:15:40,743:INFO:           interpret: Not installed
2023-05-05 10:15:40,743:INFO:                umap: Not installed
2023-05-05 10:15:40,743:INFO:    pandas_profiling: Not installed
2023-05-05 10:15:40,743:INFO:  explainerdashboard: Not installed
2023-05-05 10:15:40,743:INFO:             autoviz: Not installed
2023-05-05 10:15:40,743:INFO:           fairlearn: Not installed
2023-05-05 10:15:40,743:INFO:             xgboost: Not installed
2023-05-05 10:15:40,743:INFO:            catboost: Not installed
2023-05-05 10:15:40,744:INFO:              kmodes: Not installed
2023-05-05 10:15:40,744:INFO:             mlxtend: Not installed
2023-05-05 10:15:40,744:INFO:       statsforecast: Not installed
2023-05-05 10:15:40,744:INFO:        tune_sklearn: 0.4.5
2023-05-05 10:15:40,744:INFO:                 ray: 2.3.1
2023-05-05 10:15:40,744:INFO:            hyperopt: Not installed
2023-05-05 10:15:40,744:INFO:              optuna: 3.1.0
2023-05-05 10:15:40,744:INFO:               skopt: Not installed
2023-05-05 10:15:40,744:INFO:              mlflow: 2.2.2
2023-05-05 10:15:40,744:INFO:              gradio: 3.23.0
2023-05-05 10:15:40,744:INFO:             fastapi: 0.95.0
2023-05-05 10:15:40,744:INFO:             uvicorn: 0.21.1
2023-05-05 10:15:40,744:INFO:              m2cgen: Not installed
2023-05-05 10:15:40,744:INFO:           evidently: Not installed
2023-05-05 10:15:40,744:INFO:               fugue: Not installed
2023-05-05 10:15:40,744:INFO:           streamlit: 1.20.0
2023-05-05 10:15:40,744:INFO:             prophet: Not installed
2023-05-05 10:15:40,744:INFO:None
2023-05-05 10:15:40,744:INFO:Set up data.
2023-05-05 10:15:40,748:INFO:Set up train/test split.
2023-05-05 10:15:40,755:INFO:Set up index.
2023-05-05 10:15:40,755:INFO:Set up folding strategy.
2023-05-05 10:15:40,755:INFO:Assigning column types.
2023-05-05 10:15:40,758:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-05 10:15:40,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-05 10:15:40,809:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-05 10:15:40,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:40,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-05 10:15:41,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-05 10:15:41,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,059:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-05 10:15:41,107:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-05 10:15:41,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-05 10:15:41,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,214:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-05 10:15:41,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,370:INFO:Preparing preprocessing pipeline...
2023-05-05 10:15:41,371:INFO:Set up simple imputation.
2023-05-05 10:15:41,371:INFO:Set up feature normalization.
2023-05-05 10:15:41,396:INFO:Finished creating preprocessing pipeline.
2023-05-05 10:15:41,401:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-05-05 10:15:41,402:INFO:Creating final display dataframe.
2023-05-05 10:15:41,470:INFO:Setup _display_container:                     Description             Value
0                    Session id              2654
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 7)
4        Transformed data shape          (768, 7)
5   Transformed train set shape          (614, 7)
6    Transformed test set shape          (154, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              cf37
2023-05-05 10:15:41,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-05 10:15:41,635:INFO:setup() successfully completed in 3.93s...............
2023-05-05 10:15:41,655:INFO:Initializing compare_models()
2023-05-05 10:15:41,656:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-05 10:15:41,656:INFO:Checking exceptions
2023-05-05 10:15:41,660:INFO:Preparing display monitor
2023-05-05 10:15:41,694:INFO:Initializing Logistic Regression
2023-05-05 10:15:41,694:INFO:Total runtime is 0.0 minutes
2023-05-05 10:15:41,698:INFO:SubProcess create_model() called ==================================
2023-05-05 10:15:41,698:INFO:Initializing create_model()
2023-05-05 10:15:41,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:15:41,699:INFO:Checking exceptions
2023-05-05 10:15:41,699:INFO:Importing libraries
2023-05-05 10:15:41,699:INFO:Copying training dataset
2023-05-05 10:15:41,702:INFO:Defining folds
2023-05-05 10:15:41,702:INFO:Declaring metric variables
2023-05-05 10:15:41,706:INFO:Importing untrained model
2023-05-05 10:15:41,709:INFO:Logistic Regression Imported successfully
2023-05-05 10:15:41,717:INFO:Starting cross validation
2023-05-05 10:15:41,718:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:11,568:INFO:Calculating mean and std
2023-05-05 10:16:11,571:INFO:Creating metrics dataframe
2023-05-05 10:16:12,523:INFO:Uploading results into container
2023-05-05 10:16:12,524:INFO:Uploading model into container now
2023-05-05 10:16:12,525:INFO:_master_model_container: 1
2023-05-05 10:16:12,525:INFO:_display_container: 2
2023-05-05 10:16:12,526:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-05 10:16:12,526:INFO:create_model() successfully completed......................................
2023-05-05 10:16:12,643:INFO:SubProcess create_model() end ==================================
2023-05-05 10:16:12,643:INFO:Creating metrics dataframe
2023-05-05 10:16:12,652:INFO:Initializing K Neighbors Classifier
2023-05-05 10:16:12,653:INFO:Total runtime is 0.5159886360168457 minutes
2023-05-05 10:16:12,656:INFO:SubProcess create_model() called ==================================
2023-05-05 10:16:12,657:INFO:Initializing create_model()
2023-05-05 10:16:12,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:16:12,657:INFO:Checking exceptions
2023-05-05 10:16:12,657:INFO:Importing libraries
2023-05-05 10:16:12,657:INFO:Copying training dataset
2023-05-05 10:16:12,662:INFO:Defining folds
2023-05-05 10:16:12,662:INFO:Declaring metric variables
2023-05-05 10:16:12,667:INFO:Importing untrained model
2023-05-05 10:16:12,672:INFO:K Neighbors Classifier Imported successfully
2023-05-05 10:16:12,682:INFO:Starting cross validation
2023-05-05 10:16:12,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:12,809:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:12,811:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:12,818:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:12,827:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:12,834:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:12,846:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:12,856:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:12,872:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:16,148:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:16,149:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-05 10:16:18,436:INFO:Calculating mean and std
2023-05-05 10:16:18,437:INFO:Creating metrics dataframe
2023-05-05 10:16:19,413:INFO:Uploading results into container
2023-05-05 10:16:19,414:INFO:Uploading model into container now
2023-05-05 10:16:19,414:INFO:_master_model_container: 2
2023-05-05 10:16:19,414:INFO:_display_container: 2
2023-05-05 10:16:19,414:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-05 10:16:19,415:INFO:create_model() successfully completed......................................
2023-05-05 10:16:19,530:INFO:SubProcess create_model() end ==================================
2023-05-05 10:16:19,530:INFO:Creating metrics dataframe
2023-05-05 10:16:19,538:INFO:Initializing Naive Bayes
2023-05-05 10:16:19,538:INFO:Total runtime is 0.630727485815684 minutes
2023-05-05 10:16:19,541:INFO:SubProcess create_model() called ==================================
2023-05-05 10:16:19,542:INFO:Initializing create_model()
2023-05-05 10:16:19,542:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:16:19,542:INFO:Checking exceptions
2023-05-05 10:16:19,542:INFO:Importing libraries
2023-05-05 10:16:19,542:INFO:Copying training dataset
2023-05-05 10:16:19,547:INFO:Defining folds
2023-05-05 10:16:19,547:INFO:Declaring metric variables
2023-05-05 10:16:19,551:INFO:Importing untrained model
2023-05-05 10:16:19,556:INFO:Naive Bayes Imported successfully
2023-05-05 10:16:19,565:INFO:Starting cross validation
2023-05-05 10:16:19,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:25,227:INFO:Calculating mean and std
2023-05-05 10:16:25,229:INFO:Creating metrics dataframe
2023-05-05 10:16:26,183:INFO:Uploading results into container
2023-05-05 10:16:26,184:INFO:Uploading model into container now
2023-05-05 10:16:26,184:INFO:_master_model_container: 3
2023-05-05 10:16:26,185:INFO:_display_container: 2
2023-05-05 10:16:26,185:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-05 10:16:26,186:INFO:create_model() successfully completed......................................
2023-05-05 10:16:26,303:INFO:SubProcess create_model() end ==================================
2023-05-05 10:16:26,303:INFO:Creating metrics dataframe
2023-05-05 10:16:26,313:INFO:Initializing Decision Tree Classifier
2023-05-05 10:16:26,313:INFO:Total runtime is 0.7436472694079082 minutes
2023-05-05 10:16:26,317:INFO:SubProcess create_model() called ==================================
2023-05-05 10:16:26,318:INFO:Initializing create_model()
2023-05-05 10:16:26,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:16:26,318:INFO:Checking exceptions
2023-05-05 10:16:26,318:INFO:Importing libraries
2023-05-05 10:16:26,318:INFO:Copying training dataset
2023-05-05 10:16:26,323:INFO:Defining folds
2023-05-05 10:16:26,323:INFO:Declaring metric variables
2023-05-05 10:16:26,330:INFO:Importing untrained model
2023-05-05 10:16:26,335:INFO:Decision Tree Classifier Imported successfully
2023-05-05 10:16:26,343:INFO:Starting cross validation
2023-05-05 10:16:26,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:31,833:INFO:Calculating mean and std
2023-05-05 10:16:31,835:INFO:Creating metrics dataframe
2023-05-05 10:16:32,771:INFO:Uploading results into container
2023-05-05 10:16:32,772:INFO:Uploading model into container now
2023-05-05 10:16:32,773:INFO:_master_model_container: 4
2023-05-05 10:16:32,773:INFO:_display_container: 2
2023-05-05 10:16:32,773:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2654, splitter='best')
2023-05-05 10:16:32,773:INFO:create_model() successfully completed......................................
2023-05-05 10:16:32,927:INFO:SubProcess create_model() end ==================================
2023-05-05 10:16:32,927:INFO:Creating metrics dataframe
2023-05-05 10:16:32,936:INFO:Initializing SVM - Linear Kernel
2023-05-05 10:16:32,936:INFO:Total runtime is 0.8540292263031006 minutes
2023-05-05 10:16:32,940:INFO:SubProcess create_model() called ==================================
2023-05-05 10:16:32,940:INFO:Initializing create_model()
2023-05-05 10:16:32,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:16:32,940:INFO:Checking exceptions
2023-05-05 10:16:32,940:INFO:Importing libraries
2023-05-05 10:16:32,940:INFO:Copying training dataset
2023-05-05 10:16:32,945:INFO:Defining folds
2023-05-05 10:16:32,946:INFO:Declaring metric variables
2023-05-05 10:16:32,950:INFO:Importing untrained model
2023-05-05 10:16:32,955:INFO:SVM - Linear Kernel Imported successfully
2023-05-05 10:16:32,965:INFO:Starting cross validation
2023-05-05 10:16:32,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:33,051:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,052:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,070:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,075:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,087:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,100:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,109:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,117:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,131:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:33,135:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-05 10:16:38,612:INFO:Calculating mean and std
2023-05-05 10:16:38,614:INFO:Creating metrics dataframe
2023-05-05 10:16:39,627:INFO:Uploading results into container
2023-05-05 10:16:39,628:INFO:Uploading model into container now
2023-05-05 10:16:39,628:INFO:_master_model_container: 5
2023-05-05 10:16:39,628:INFO:_display_container: 2
2023-05-05 10:16:39,629:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2654, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-05 10:16:39,629:INFO:create_model() successfully completed......................................
2023-05-05 10:16:39,770:INFO:SubProcess create_model() end ==================================
2023-05-05 10:16:39,770:INFO:Creating metrics dataframe
2023-05-05 10:16:39,781:INFO:Initializing Ridge Classifier
2023-05-05 10:16:39,781:INFO:Total runtime is 0.9681233406066895 minutes
2023-05-05 10:16:39,786:INFO:SubProcess create_model() called ==================================
2023-05-05 10:16:39,786:INFO:Initializing create_model()
2023-05-05 10:16:39,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:16:39,786:INFO:Checking exceptions
2023-05-05 10:16:39,787:INFO:Importing libraries
2023-05-05 10:16:39,787:INFO:Copying training dataset
2023-05-05 10:16:39,793:INFO:Defining folds
2023-05-05 10:16:39,794:INFO:Declaring metric variables
2023-05-05 10:16:39,801:INFO:Importing untrained model
2023-05-05 10:16:39,806:INFO:Ridge Classifier Imported successfully
2023-05-05 10:16:39,815:INFO:Starting cross validation
2023-05-05 10:16:39,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:39,957:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,958:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,960:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,960:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,964:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,966:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,967:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,968:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,973:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:39,987:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-05 10:16:45,391:INFO:Calculating mean and std
2023-05-05 10:16:45,393:INFO:Creating metrics dataframe
2023-05-05 10:16:46,347:INFO:Uploading results into container
2023-05-05 10:16:46,347:INFO:Uploading model into container now
2023-05-05 10:16:46,348:INFO:_master_model_container: 6
2023-05-05 10:16:46,348:INFO:_display_container: 2
2023-05-05 10:16:46,349:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2654, solver='auto', tol=0.001)
2023-05-05 10:16:46,349:INFO:create_model() successfully completed......................................
2023-05-05 10:16:46,463:INFO:SubProcess create_model() end ==================================
2023-05-05 10:16:46,464:INFO:Creating metrics dataframe
2023-05-05 10:16:46,473:INFO:Initializing Random Forest Classifier
2023-05-05 10:16:46,473:INFO:Total runtime is 1.0796440919240315 minutes
2023-05-05 10:16:46,476:INFO:SubProcess create_model() called ==================================
2023-05-05 10:16:46,476:INFO:Initializing create_model()
2023-05-05 10:16:46,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:16:46,477:INFO:Checking exceptions
2023-05-05 10:16:46,477:INFO:Importing libraries
2023-05-05 10:16:46,477:INFO:Copying training dataset
2023-05-05 10:16:46,482:INFO:Defining folds
2023-05-05 10:16:46,482:INFO:Declaring metric variables
2023-05-05 10:16:46,486:INFO:Importing untrained model
2023-05-05 10:16:46,490:INFO:Random Forest Classifier Imported successfully
2023-05-05 10:16:46,498:INFO:Starting cross validation
2023-05-05 10:16:46,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:52,825:INFO:Calculating mean and std
2023-05-05 10:16:52,827:INFO:Creating metrics dataframe
2023-05-05 10:16:53,855:INFO:Uploading results into container
2023-05-05 10:16:53,856:INFO:Uploading model into container now
2023-05-05 10:16:53,856:INFO:_master_model_container: 7
2023-05-05 10:16:53,856:INFO:_display_container: 2
2023-05-05 10:16:53,857:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2654, verbose=0, warm_start=False)
2023-05-05 10:16:53,857:INFO:create_model() successfully completed......................................
2023-05-05 10:16:53,981:INFO:SubProcess create_model() end ==================================
2023-05-05 10:16:53,981:INFO:Creating metrics dataframe
2023-05-05 10:16:53,996:INFO:Initializing Quadratic Discriminant Analysis
2023-05-05 10:16:53,997:INFO:Total runtime is 1.2050477504730224 minutes
2023-05-05 10:16:54,001:INFO:SubProcess create_model() called ==================================
2023-05-05 10:16:54,001:INFO:Initializing create_model()
2023-05-05 10:16:54,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:16:54,002:INFO:Checking exceptions
2023-05-05 10:16:54,002:INFO:Importing libraries
2023-05-05 10:16:54,002:INFO:Copying training dataset
2023-05-05 10:16:54,007:INFO:Defining folds
2023-05-05 10:16:54,007:INFO:Declaring metric variables
2023-05-05 10:16:54,011:INFO:Importing untrained model
2023-05-05 10:16:54,016:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-05 10:16:54,025:INFO:Starting cross validation
2023-05-05 10:16:54,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:16:59,856:INFO:Calculating mean and std
2023-05-05 10:16:59,858:INFO:Creating metrics dataframe
2023-05-05 10:17:00,831:INFO:Uploading results into container
2023-05-05 10:17:00,832:INFO:Uploading model into container now
2023-05-05 10:17:00,833:INFO:_master_model_container: 8
2023-05-05 10:17:00,833:INFO:_display_container: 2
2023-05-05 10:17:00,833:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-05 10:17:00,834:INFO:create_model() successfully completed......................................
2023-05-05 10:17:00,950:INFO:SubProcess create_model() end ==================================
2023-05-05 10:17:00,950:INFO:Creating metrics dataframe
2023-05-05 10:17:00,962:INFO:Initializing Ada Boost Classifier
2023-05-05 10:17:00,962:INFO:Total runtime is 1.3211369554201762 minutes
2023-05-05 10:17:00,966:INFO:SubProcess create_model() called ==================================
2023-05-05 10:17:00,967:INFO:Initializing create_model()
2023-05-05 10:17:00,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:00,967:INFO:Checking exceptions
2023-05-05 10:17:00,967:INFO:Importing libraries
2023-05-05 10:17:00,967:INFO:Copying training dataset
2023-05-05 10:17:00,972:INFO:Defining folds
2023-05-05 10:17:00,972:INFO:Declaring metric variables
2023-05-05 10:17:00,977:INFO:Importing untrained model
2023-05-05 10:17:00,982:INFO:Ada Boost Classifier Imported successfully
2023-05-05 10:17:00,991:INFO:Starting cross validation
2023-05-05 10:17:00,993:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:17:07,217:INFO:Calculating mean and std
2023-05-05 10:17:07,219:INFO:Creating metrics dataframe
2023-05-05 10:17:08,190:INFO:Uploading results into container
2023-05-05 10:17:08,191:INFO:Uploading model into container now
2023-05-05 10:17:08,192:INFO:_master_model_container: 9
2023-05-05 10:17:08,192:INFO:_display_container: 2
2023-05-05 10:17:08,193:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2654)
2023-05-05 10:17:08,193:INFO:create_model() successfully completed......................................
2023-05-05 10:17:08,308:INFO:SubProcess create_model() end ==================================
2023-05-05 10:17:08,308:INFO:Creating metrics dataframe
2023-05-05 10:17:08,318:INFO:Initializing Gradient Boosting Classifier
2023-05-05 10:17:08,319:INFO:Total runtime is 1.4437501390775045 minutes
2023-05-05 10:17:08,323:INFO:SubProcess create_model() called ==================================
2023-05-05 10:17:08,323:INFO:Initializing create_model()
2023-05-05 10:17:08,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:08,323:INFO:Checking exceptions
2023-05-05 10:17:08,323:INFO:Importing libraries
2023-05-05 10:17:08,324:INFO:Copying training dataset
2023-05-05 10:17:08,329:INFO:Defining folds
2023-05-05 10:17:08,330:INFO:Declaring metric variables
2023-05-05 10:17:08,333:INFO:Importing untrained model
2023-05-05 10:17:08,338:INFO:Gradient Boosting Classifier Imported successfully
2023-05-05 10:17:08,346:INFO:Starting cross validation
2023-05-05 10:17:08,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:17:14,742:INFO:Calculating mean and std
2023-05-05 10:17:14,745:INFO:Creating metrics dataframe
2023-05-05 10:17:15,718:INFO:Uploading results into container
2023-05-05 10:17:15,719:INFO:Uploading model into container now
2023-05-05 10:17:15,720:INFO:_master_model_container: 10
2023-05-05 10:17:15,720:INFO:_display_container: 2
2023-05-05 10:17:15,720:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2654, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-05 10:17:15,721:INFO:create_model() successfully completed......................................
2023-05-05 10:17:15,834:INFO:SubProcess create_model() end ==================================
2023-05-05 10:17:15,835:INFO:Creating metrics dataframe
2023-05-05 10:17:15,845:INFO:Initializing Linear Discriminant Analysis
2023-05-05 10:17:15,845:INFO:Total runtime is 1.5691822648048401 minutes
2023-05-05 10:17:15,848:INFO:SubProcess create_model() called ==================================
2023-05-05 10:17:15,849:INFO:Initializing create_model()
2023-05-05 10:17:15,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:15,849:INFO:Checking exceptions
2023-05-05 10:17:15,849:INFO:Importing libraries
2023-05-05 10:17:15,849:INFO:Copying training dataset
2023-05-05 10:17:15,853:INFO:Defining folds
2023-05-05 10:17:15,853:INFO:Declaring metric variables
2023-05-05 10:17:15,857:INFO:Importing untrained model
2023-05-05 10:17:15,862:INFO:Linear Discriminant Analysis Imported successfully
2023-05-05 10:17:15,871:INFO:Starting cross validation
2023-05-05 10:17:15,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:17:21,526:INFO:Calculating mean and std
2023-05-05 10:17:21,528:INFO:Creating metrics dataframe
2023-05-05 10:17:22,483:INFO:Uploading results into container
2023-05-05 10:17:22,484:INFO:Uploading model into container now
2023-05-05 10:17:22,484:INFO:_master_model_container: 11
2023-05-05 10:17:22,484:INFO:_display_container: 2
2023-05-05 10:17:22,485:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-05 10:17:22,485:INFO:create_model() successfully completed......................................
2023-05-05 10:17:22,599:INFO:SubProcess create_model() end ==================================
2023-05-05 10:17:22,599:INFO:Creating metrics dataframe
2023-05-05 10:17:22,609:INFO:Initializing Extra Trees Classifier
2023-05-05 10:17:22,609:INFO:Total runtime is 1.6819174806276957 minutes
2023-05-05 10:17:22,613:INFO:SubProcess create_model() called ==================================
2023-05-05 10:17:22,613:INFO:Initializing create_model()
2023-05-05 10:17:22,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:22,614:INFO:Checking exceptions
2023-05-05 10:17:22,614:INFO:Importing libraries
2023-05-05 10:17:22,614:INFO:Copying training dataset
2023-05-05 10:17:22,618:INFO:Defining folds
2023-05-05 10:17:22,619:INFO:Declaring metric variables
2023-05-05 10:17:22,623:INFO:Importing untrained model
2023-05-05 10:17:22,635:INFO:Extra Trees Classifier Imported successfully
2023-05-05 10:17:22,646:INFO:Starting cross validation
2023-05-05 10:17:22,647:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:17:29,395:INFO:Calculating mean and std
2023-05-05 10:17:29,397:INFO:Creating metrics dataframe
2023-05-05 10:17:30,397:INFO:Uploading results into container
2023-05-05 10:17:30,398:INFO:Uploading model into container now
2023-05-05 10:17:30,398:INFO:_master_model_container: 12
2023-05-05 10:17:30,398:INFO:_display_container: 2
2023-05-05 10:17:30,399:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2654, verbose=0, warm_start=False)
2023-05-05 10:17:30,399:INFO:create_model() successfully completed......................................
2023-05-05 10:17:30,515:INFO:SubProcess create_model() end ==================================
2023-05-05 10:17:30,515:INFO:Creating metrics dataframe
2023-05-05 10:17:30,526:INFO:Initializing Light Gradient Boosting Machine
2023-05-05 10:17:30,526:INFO:Total runtime is 1.8138696114222208 minutes
2023-05-05 10:17:30,529:INFO:SubProcess create_model() called ==================================
2023-05-05 10:17:30,530:INFO:Initializing create_model()
2023-05-05 10:17:30,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:30,530:INFO:Checking exceptions
2023-05-05 10:17:30,530:INFO:Importing libraries
2023-05-05 10:17:30,530:INFO:Copying training dataset
2023-05-05 10:17:30,535:INFO:Defining folds
2023-05-05 10:17:30,535:INFO:Declaring metric variables
2023-05-05 10:17:30,540:INFO:Importing untrained model
2023-05-05 10:17:30,545:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-05 10:17:30,555:INFO:Starting cross validation
2023-05-05 10:17:30,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:17:38,113:INFO:Calculating mean and std
2023-05-05 10:17:38,115:INFO:Creating metrics dataframe
2023-05-05 10:17:39,089:INFO:Uploading results into container
2023-05-05 10:17:39,090:INFO:Uploading model into container now
2023-05-05 10:17:39,091:INFO:_master_model_container: 13
2023-05-05 10:17:39,092:INFO:_display_container: 2
2023-05-05 10:17:39,092:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2654, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-05 10:17:39,093:INFO:create_model() successfully completed......................................
2023-05-05 10:17:39,207:INFO:SubProcess create_model() end ==================================
2023-05-05 10:17:39,207:INFO:Creating metrics dataframe
2023-05-05 10:17:39,219:INFO:Initializing Dummy Classifier
2023-05-05 10:17:39,219:INFO:Total runtime is 1.9587410489718118 minutes
2023-05-05 10:17:39,223:INFO:SubProcess create_model() called ==================================
2023-05-05 10:17:39,223:INFO:Initializing create_model()
2023-05-05 10:17:39,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026AD834A4C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:39,223:INFO:Checking exceptions
2023-05-05 10:17:39,224:INFO:Importing libraries
2023-05-05 10:17:39,224:INFO:Copying training dataset
2023-05-05 10:17:39,229:INFO:Defining folds
2023-05-05 10:17:39,229:INFO:Declaring metric variables
2023-05-05 10:17:39,233:INFO:Importing untrained model
2023-05-05 10:17:39,238:INFO:Dummy Classifier Imported successfully
2023-05-05 10:17:39,248:INFO:Starting cross validation
2023-05-05 10:17:39,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:17:39,346:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,362:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,378:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,391:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,391:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,398:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,416:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,427:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,440:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:39,443:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-05 10:17:45,330:INFO:Calculating mean and std
2023-05-05 10:17:45,332:INFO:Creating metrics dataframe
2023-05-05 10:17:46,439:INFO:Uploading results into container
2023-05-05 10:17:46,440:INFO:Uploading model into container now
2023-05-05 10:17:46,441:INFO:_master_model_container: 14
2023-05-05 10:17:46,441:INFO:_display_container: 2
2023-05-05 10:17:46,441:INFO:DummyClassifier(constant=None, random_state=2654, strategy='prior')
2023-05-05 10:17:46,441:INFO:create_model() successfully completed......................................
2023-05-05 10:17:46,567:INFO:SubProcess create_model() end ==================================
2023-05-05 10:17:46,568:INFO:Creating metrics dataframe
2023-05-05 10:17:46,593:INFO:Initializing create_model()
2023-05-05 10:17:46,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2654, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:46,594:INFO:Checking exceptions
2023-05-05 10:17:46,596:INFO:Importing libraries
2023-05-05 10:17:46,596:INFO:Copying training dataset
2023-05-05 10:17:46,601:INFO:Defining folds
2023-05-05 10:17:46,602:INFO:Declaring metric variables
2023-05-05 10:17:46,602:INFO:Importing untrained model
2023-05-05 10:17:46,602:INFO:Declaring custom model
2023-05-05 10:17:46,603:INFO:SVM - Linear Kernel Imported successfully
2023-05-05 10:17:46,604:INFO:Cross validation set to False
2023-05-05 10:17:46,604:INFO:Fitting Model
2023-05-05 10:17:47,167:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2654, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-05 10:17:47,167:INFO:create_model() successfully completed......................................
2023-05-05 10:17:47,319:INFO:_master_model_container: 14
2023-05-05 10:17:47,319:INFO:_display_container: 2
2023-05-05 10:17:47,320:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2654, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-05 10:17:47,320:INFO:compare_models() successfully completed......................................
2023-05-05 10:17:47,335:INFO:Initializing create_model()
2023-05-05 10:17:47,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:17:47,336:INFO:Checking exceptions
2023-05-05 10:17:47,374:INFO:Importing libraries
2023-05-05 10:17:47,375:INFO:Copying training dataset
2023-05-05 10:17:47,381:INFO:Defining folds
2023-05-05 10:17:47,381:INFO:Declaring metric variables
2023-05-05 10:17:47,387:INFO:Importing untrained model
2023-05-05 10:17:47,395:INFO:Logistic Regression Imported successfully
2023-05-05 10:17:47,403:INFO:Starting cross validation
2023-05-05 10:17:47,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:17:53,252:INFO:Calculating mean and std
2023-05-05 10:17:53,254:INFO:Creating metrics dataframe
2023-05-05 10:17:53,260:INFO:Finalizing model
2023-05-05 10:17:54,246:INFO:Uploading results into container
2023-05-05 10:17:54,247:INFO:Uploading model into container now
2023-05-05 10:17:54,257:INFO:_master_model_container: 15
2023-05-05 10:17:54,257:INFO:_display_container: 3
2023-05-05 10:17:54,258:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-05 10:17:54,258:INFO:create_model() successfully completed......................................
2023-05-05 10:17:54,406:INFO:Initializing tune_model()
2023-05-05 10:17:54,408:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>)
2023-05-05 10:17:54,408:INFO:Checking exceptions
2023-05-05 10:17:54,434:INFO:Copying training dataset
2023-05-05 10:17:54,436:INFO:Checking base model
2023-05-05 10:17:54,436:INFO:Base model : Logistic Regression
2023-05-05 10:17:54,439:INFO:Declaring metric variables
2023-05-05 10:17:54,443:INFO:Defining Hyperparameters
2023-05-05 10:17:54,560:INFO:Tuning with n_jobs=-1
2023-05-05 10:17:54,560:INFO:Initializing RandomizedSearchCV
2023-05-05 10:18:56,917:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 6.390000000000001}
2023-05-05 10:18:56,918:INFO:Hyperparameter search completed
2023-05-05 10:18:56,919:INFO:SubProcess create_model() called ==================================
2023-05-05 10:18:56,919:INFO:Initializing create_model()
2023-05-05 10:18:56,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026ACC9A46A0>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 6.390000000000001})
2023-05-05 10:18:56,920:INFO:Checking exceptions
2023-05-05 10:18:56,920:INFO:Importing libraries
2023-05-05 10:18:56,920:INFO:Copying training dataset
2023-05-05 10:18:56,923:INFO:Defining folds
2023-05-05 10:18:56,923:INFO:Declaring metric variables
2023-05-05 10:18:56,928:INFO:Importing untrained model
2023-05-05 10:18:56,928:INFO:Declaring custom model
2023-05-05 10:18:56,932:INFO:Logistic Regression Imported successfully
2023-05-05 10:18:56,939:INFO:Starting cross validation
2023-05-05 10:18:56,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:19:02,823:INFO:Calculating mean and std
2023-05-05 10:19:02,825:INFO:Creating metrics dataframe
2023-05-05 10:19:02,830:INFO:Finalizing model
2023-05-05 10:19:03,859:INFO:Uploading results into container
2023-05-05 10:19:03,860:INFO:Uploading model into container now
2023-05-05 10:19:03,861:INFO:_master_model_container: 16
2023-05-05 10:19:03,861:INFO:_display_container: 4
2023-05-05 10:19:03,861:INFO:LogisticRegression(C=6.390000000000001, class_weight={}, dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-05 10:19:03,861:INFO:create_model() successfully completed......................................
2023-05-05 10:19:03,975:INFO:SubProcess create_model() end ==================================
2023-05-05 10:19:03,975:INFO:choose_better activated
2023-05-05 10:19:03,978:INFO:SubProcess create_model() called ==================================
2023-05-05 10:19:03,979:INFO:Initializing create_model()
2023-05-05 10:19:03,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-05 10:19:03,979:INFO:Checking exceptions
2023-05-05 10:19:03,981:INFO:Importing libraries
2023-05-05 10:19:03,981:INFO:Copying training dataset
2023-05-05 10:19:03,984:INFO:Defining folds
2023-05-05 10:19:03,984:INFO:Declaring metric variables
2023-05-05 10:19:03,985:INFO:Importing untrained model
2023-05-05 10:19:03,985:INFO:Declaring custom model
2023-05-05 10:19:03,985:INFO:Logistic Regression Imported successfully
2023-05-05 10:19:03,985:INFO:Starting cross validation
2023-05-05 10:19:03,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-05 10:19:09,670:INFO:Calculating mean and std
2023-05-05 10:19:09,671:INFO:Creating metrics dataframe
2023-05-05 10:19:09,673:INFO:Finalizing model
2023-05-05 10:19:10,639:INFO:Uploading results into container
2023-05-05 10:19:10,639:INFO:Uploading model into container now
2023-05-05 10:19:10,640:INFO:_master_model_container: 17
2023-05-05 10:19:10,640:INFO:_display_container: 5
2023-05-05 10:19:10,640:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-05 10:19:10,641:INFO:create_model() successfully completed......................................
2023-05-05 10:19:10,751:INFO:SubProcess create_model() end ==================================
2023-05-05 10:19:10,752:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7623
2023-05-05 10:19:10,752:INFO:LogisticRegression(C=6.390000000000001, class_weight={}, dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7623
2023-05-05 10:19:10,753:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-05-05 10:19:10,753:INFO:choose_better completed
2023-05-05 10:19:10,753:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-05-05 10:19:10,762:INFO:_master_model_container: 17
2023-05-05 10:19:10,762:INFO:_display_container: 4
2023-05-05 10:19:10,763:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-05 10:19:10,763:INFO:tune_model() successfully completed......................................
2023-05-05 10:19:11,422:INFO:Initializing plot_model()
2023-05-05 10:19:11,422:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, system=True)
2023-05-05 10:19:11,422:INFO:Checking exceptions
2023-05-05 10:19:11,427:INFO:Preloading libraries
2023-05-05 10:19:11,427:INFO:Copying training dataset
2023-05-05 10:19:11,427:INFO:Plot type: manifold
2023-05-05 10:19:11,586:INFO:Fitting & Transforming Model
2023-05-05 10:19:11,588:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-05-05 10:19:11,647:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-05-05 10:19:13,804:INFO:Visual Rendered Successfully
2023-05-05 10:19:13,924:INFO:plot_model() successfully completed......................................
2023-05-05 10:19:13,961:INFO:Initializing plot_model()
2023-05-05 10:19:13,961:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, system=True)
2023-05-05 10:19:13,961:INFO:Checking exceptions
2023-05-05 10:19:13,965:INFO:Preloading libraries
2023-05-05 10:19:13,966:INFO:Copying training dataset
2023-05-05 10:19:13,966:INFO:Plot type: feature
2023-05-05 10:19:14,100:INFO:Visual Rendered Successfully
2023-05-05 10:19:14,218:INFO:plot_model() successfully completed......................................
2023-05-05 10:19:14,228:INFO:Initializing plot_model()
2023-05-05 10:19:14,228:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, system=True)
2023-05-05 10:19:14,228:INFO:Checking exceptions
2023-05-05 10:19:14,232:INFO:Preloading libraries
2023-05-05 10:19:14,233:INFO:Copying training dataset
2023-05-05 10:19:14,233:INFO:Plot type: confusion_matrix
2023-05-05 10:19:14,305:INFO:Fitting Model
2023-05-05 10:19:14,308:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-05-05 10:19:14,308:INFO:Scoring test/hold-out set
2023-05-05 10:19:14,419:INFO:Visual Rendered Successfully
2023-05-05 10:19:14,534:INFO:plot_model() successfully completed......................................
2023-05-05 10:19:14,543:INFO:Initializing plot_model()
2023-05-05 10:19:14,544:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, system=True)
2023-05-05 10:19:14,545:INFO:Checking exceptions
2023-05-05 10:19:14,548:INFO:Preloading libraries
2023-05-05 10:19:14,549:INFO:Copying training dataset
2023-05-05 10:19:14,549:INFO:Plot type: auc
2023-05-05 10:19:14,613:INFO:Fitting Model
2023-05-05 10:19:14,613:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-05-05 10:19:14,614:INFO:Scoring test/hold-out set
2023-05-05 10:19:14,763:INFO:Visual Rendered Successfully
2023-05-05 10:19:14,876:INFO:plot_model() successfully completed......................................
2023-05-05 10:19:14,888:INFO:Initializing plot_model()
2023-05-05 10:19:14,888:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, system=True)
2023-05-05 10:19:14,888:INFO:Checking exceptions
2023-05-05 10:19:14,893:INFO:Preloading libraries
2023-05-05 10:19:14,893:INFO:Copying training dataset
2023-05-05 10:19:14,894:INFO:Plot type: pr
2023-05-05 10:19:14,963:INFO:Fitting Model
2023-05-05 10:19:14,964:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-05-05 10:19:14,964:INFO:Scoring test/hold-out set
2023-05-05 10:19:15,100:INFO:Visual Rendered Successfully
2023-05-05 10:19:15,215:INFO:plot_model() successfully completed......................................
2023-05-05 10:19:15,234:INFO:Initializing predict_model()
2023-05-05 10:19:15,234:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026ADA9F18B0>)
2023-05-05 10:19:15,234:INFO:Checking exceptions
2023-05-05 10:19:15,234:INFO:Preloading libraries
2023-05-05 10:19:15,420:INFO:Initializing finalize_model()
2023-05-05 10:19:15,421:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-05 10:19:15,421:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-05 10:19:15,424:INFO:Initializing create_model()
2023-05-05 10:19:15,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026AD834A0D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-05 10:19:15,424:INFO:Checking exceptions
2023-05-05 10:19:15,427:INFO:Importing libraries
2023-05-05 10:19:15,427:INFO:Copying training dataset
2023-05-05 10:19:15,427:INFO:Defining folds
2023-05-05 10:19:15,427:INFO:Declaring metric variables
2023-05-05 10:19:15,427:INFO:Importing untrained model
2023-05-05 10:19:15,427:INFO:Declaring custom model
2023-05-05 10:19:15,428:INFO:Logistic Regression Imported successfully
2023-05-05 10:19:15,429:INFO:Cross validation set to False
2023-05-05 10:19:15,429:INFO:Fitting Model
2023-05-05 10:19:15,458:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2654,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-05-05 10:19:15,459:INFO:create_model() successfully completed......................................
2023-05-05 10:19:15,570:INFO:_master_model_container: 17
2023-05-05 10:19:15,570:INFO:_display_container: 5
2023-05-05 10:19:15,574:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2654,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-05-05 10:19:15,574:INFO:finalize_model() successfully completed......................................
2023-05-05 10:19:15,706:INFO:Initializing save_model()
2023-05-05 10:19:15,706:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2654, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=Final_diabetes_model_4Avril2022, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-05-05 10:19:15,706:INFO:Adding model into prep_pipe
2023-05-05 10:19:15,710:INFO:Final_diabetes_model_4Avril2022.pkl saved in current working directory
2023-05-05 10:19:15,715:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2654,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-05-05 10:19:15,715:INFO:save_model() successfully completed......................................
2023-05-05 10:19:15,856:INFO:Soft dependency imported: gradio: 3.23.0
2023-05-05 10:19:15,869:WARNING:C:\Users\nanji\AppData\Roaming\Python\Python39\site-packages\gradio\inputs.py:27: UserWarning: Usage of gradio.inputs is deprecated, and will not be supported in the future, please import your component from gradio.components
  warnings.warn(

2023-05-05 10:19:15,878:WARNING:C:\Users\nanji\AppData\Roaming\Python\Python39\site-packages\gradio\deprecation.py:40: UserWarning: `optional` parameter is deprecated, and it has no effect
  warnings.warn(value)

2023-05-05 10:19:15,878:WARNING:C:\Users\nanji\AppData\Roaming\Python\Python39\site-packages\gradio\deprecation.py:40: UserWarning: `numeric` parameter is deprecated, and it has no effect
  warnings.warn(value)

2023-05-05 10:22:40,467:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:32:14,651:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:34:28,809:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:34:53,375:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:34:57,379:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:34:59,412:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:35:18,228:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:36:23,785:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:36:51,477:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:38:34,128:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:38:37,464:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:38:43,306:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 10:38:44,793:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 18:09:48,319:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-05-05 18:09:52,109:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-28 23:40:48,302:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-28 23:40:51,430:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-28 23:40:56,949:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-29 12:00:14,213:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-29 12:00:19,673:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-29 12:00:52,566:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-29 12:00:59,301:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-29 12:01:03,324:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-29 12:01:31,211:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-06-29 12:01:33,958:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 09:43:47,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 09:43:47,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 09:43:47,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 09:43:47,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 09:43:49,448:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-07-02 09:43:54,317:INFO:PyCaret ClassificationExperiment
2023-07-02 09:43:54,317:INFO:Logging name: clf-default-name
2023-07-02 09:43:54,317:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 09:43:54,317:INFO:version 3.0.0
2023-07-02 09:43:54,317:INFO:Initializing setup()
2023-07-02 09:43:54,317:INFO:self.USI: a294
2023-07-02 09:43:54,317:INFO:self._variable_keys: {'html_param', 'fix_imbalance', 'y_test', 'exp_name_log', 'logging_param', 'is_multiclass', 'pipeline', 'gpu_n_jobs_param', 'idx', 'target_param', 'data', '_available_plots', 'fold_groups_param', 'y_train', 'gpu_param', 'y', 'log_plots_param', 'memory', 'seed', 'fold_shuffle_param', 'X', 'fold_generator', 'USI', 'n_jobs_param', 'X_train', 'exp_id', 'X_test', '_ml_usecase'}
2023-07-02 09:43:54,317:INFO:Checking environment
2023-07-02 09:43:54,317:INFO:python_version: 3.9.13
2023-07-02 09:43:54,317:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 09:43:54,317:INFO:machine: AMD64
2023-07-02 09:43:54,321:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 09:43:54,321:INFO:Memory: svmem(total=16456249344, available=1807097856, percent=89.0, used=14649151488, free=1807097856)
2023-07-02 09:43:54,321:INFO:Physical Core: 6
2023-07-02 09:43:54,321:INFO:Logical Core: 12
2023-07-02 09:43:54,321:INFO:Checking libraries
2023-07-02 09:43:54,321:INFO:System:
2023-07-02 09:43:54,321:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 09:43:54,321:INFO:executable: c:\ProgramData\Anaconda3\python.exe
2023-07-02 09:43:54,321:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 09:43:54,321:INFO:PyCaret required dependencies:
2023-07-02 09:43:54,321:INFO:                 pip: 22.2.2
2023-07-02 09:43:54,321:INFO:          setuptools: 63.4.1
2023-07-02 09:43:54,321:INFO:             pycaret: 3.0.0
2023-07-02 09:43:54,321:INFO:             IPython: 7.31.1
2023-07-02 09:43:54,321:INFO:          ipywidgets: 7.6.5
2023-07-02 09:43:54,321:INFO:                tqdm: 4.64.1
2023-07-02 09:43:54,321:INFO:               numpy: 1.21.5
2023-07-02 09:43:54,321:INFO:              pandas: 1.4.4
2023-07-02 09:43:54,321:INFO:              jinja2: 3.1.2
2023-07-02 09:43:54,321:INFO:               scipy: 1.9.1
2023-07-02 09:43:54,321:INFO:              joblib: 1.2.0
2023-07-02 09:43:54,321:INFO:             sklearn: 1.0.2
2023-07-02 09:43:54,321:INFO:                pyod: 1.0.9
2023-07-02 09:43:54,321:INFO:            imblearn: 0.10.1
2023-07-02 09:43:54,321:INFO:   category_encoders: 2.6.0
2023-07-02 09:43:54,321:INFO:            lightgbm: 3.3.5
2023-07-02 09:43:54,321:INFO:               numba: 0.55.1
2023-07-02 09:43:54,321:INFO:            requests: 2.28.1
2023-07-02 09:43:54,321:INFO:          matplotlib: 3.5.2
2023-07-02 09:43:54,321:INFO:          scikitplot: 0.3.7
2023-07-02 09:43:54,321:INFO:         yellowbrick: 1.5
2023-07-02 09:43:54,321:INFO:              plotly: 5.9.0
2023-07-02 09:43:54,321:INFO:             kaleido: 0.2.1
2023-07-02 09:43:54,321:INFO:         statsmodels: 0.13.2
2023-07-02 09:43:54,321:INFO:              sktime: 0.16.1
2023-07-02 09:43:54,321:INFO:               tbats: 1.1.2
2023-07-02 09:43:54,321:INFO:            pmdarima: 2.0.3
2023-07-02 09:43:54,321:INFO:              psutil: 5.9.0
2023-07-02 09:43:54,321:INFO:PyCaret optional dependencies:
2023-07-02 09:43:57,305:INFO:                shap: 0.41.0
2023-07-02 09:43:57,305:INFO:           interpret: Not installed
2023-07-02 09:43:57,305:INFO:                umap: Not installed
2023-07-02 09:43:57,305:INFO:    pandas_profiling: Not installed
2023-07-02 09:43:57,305:INFO:  explainerdashboard: Not installed
2023-07-02 09:43:57,305:INFO:             autoviz: Not installed
2023-07-02 09:43:57,305:INFO:           fairlearn: Not installed
2023-07-02 09:43:57,305:INFO:             xgboost: Not installed
2023-07-02 09:43:57,305:INFO:            catboost: Not installed
2023-07-02 09:43:57,305:INFO:              kmodes: Not installed
2023-07-02 09:43:57,305:INFO:             mlxtend: Not installed
2023-07-02 09:43:57,305:INFO:       statsforecast: Not installed
2023-07-02 09:43:57,305:INFO:        tune_sklearn: 0.4.5
2023-07-02 09:43:57,305:INFO:                 ray: 2.3.1
2023-07-02 09:43:57,305:INFO:            hyperopt: Not installed
2023-07-02 09:43:57,305:INFO:              optuna: 3.1.0
2023-07-02 09:43:57,305:INFO:               skopt: Not installed
2023-07-02 09:43:57,305:INFO:              mlflow: 2.2.2
2023-07-02 09:43:57,305:INFO:              gradio: 3.23.0
2023-07-02 09:43:57,305:INFO:             fastapi: 0.95.0
2023-07-02 09:43:57,305:INFO:             uvicorn: 0.21.1
2023-07-02 09:43:57,305:INFO:              m2cgen: Not installed
2023-07-02 09:43:57,305:INFO:           evidently: Not installed
2023-07-02 09:43:57,305:INFO:               fugue: Not installed
2023-07-02 09:43:57,305:INFO:           streamlit: 1.20.0
2023-07-02 09:43:57,305:INFO:             prophet: Not installed
2023-07-02 09:43:57,305:INFO:None
2023-07-02 09:43:57,305:INFO:Set up data.
2023-07-02 09:43:57,313:INFO:Set up train/test split.
2023-07-02 09:43:57,321:INFO:Set up index.
2023-07-02 09:43:57,321:INFO:Set up folding strategy.
2023-07-02 09:43:57,321:INFO:Assigning column types.
2023-07-02 09:43:57,329:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 09:43:57,385:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 09:43:57,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 09:43:57,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 09:43:57,541:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 09:43:57,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,581:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 09:43:57,646:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 09:43:57,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 09:43:57,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,778:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 09:43:57,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:57,966:INFO:Preparing preprocessing pipeline...
2023-07-02 09:43:57,989:INFO:Set up simple imputation.
2023-07-02 09:43:57,989:INFO:Set up feature normalization.
2023-07-02 09:43:58,038:INFO:Finished creating preprocessing pipeline.
2023-07-02 09:43:58,046:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 09:43:58,046:INFO:Creating final display dataframe.
2023-07-02 09:43:58,147:INFO:Setup _display_container:                     Description             Value
0                    Session id              4091
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 7)
4        Transformed data shape          (768, 7)
5   Transformed train set shape          (614, 7)
6    Transformed test set shape          (154, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a294
2023-07-02 09:43:58,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:58,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:58,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:58,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 09:43:58,359:INFO:setup() successfully completed in 6.6s...............
2023-07-02 09:43:58,371:INFO:Initializing compare_models()
2023-07-02 09:43:58,371:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 09:43:58,371:INFO:Checking exceptions
2023-07-02 09:43:58,396:INFO:Preparing display monitor
2023-07-02 09:43:58,453:INFO:Initializing Logistic Regression
2023-07-02 09:43:58,457:INFO:Total runtime is 6.656249364217122e-05 minutes
2023-07-02 09:43:58,464:INFO:SubProcess create_model() called ==================================
2023-07-02 09:43:58,464:INFO:Initializing create_model()
2023-07-02 09:43:58,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:43:58,464:INFO:Checking exceptions
2023-07-02 09:43:58,464:INFO:Importing libraries
2023-07-02 09:43:58,464:INFO:Copying training dataset
2023-07-02 09:43:58,473:INFO:Defining folds
2023-07-02 09:43:58,473:INFO:Declaring metric variables
2023-07-02 09:43:58,477:INFO:Importing untrained model
2023-07-02 09:43:58,481:INFO:Logistic Regression Imported successfully
2023-07-02 09:43:58,493:INFO:Starting cross validation
2023-07-02 09:43:58,497:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:44:16,159:INFO:Calculating mean and std
2023-07-02 09:44:16,159:INFO:Creating metrics dataframe
2023-07-02 09:44:17,362:INFO:Uploading results into container
2023-07-02 09:44:17,366:INFO:Uploading model into container now
2023-07-02 09:44:17,388:INFO:_master_model_container: 1
2023-07-02 09:44:17,388:INFO:_display_container: 2
2023-07-02 09:44:17,388:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 09:44:17,392:INFO:create_model() successfully completed......................................
2023-07-02 09:44:17,536:INFO:SubProcess create_model() end ==================================
2023-07-02 09:44:17,536:INFO:Creating metrics dataframe
2023-07-02 09:44:17,548:INFO:Initializing K Neighbors Classifier
2023-07-02 09:44:17,548:INFO:Total runtime is 0.3182533939679464 minutes
2023-07-02 09:44:17,552:INFO:SubProcess create_model() called ==================================
2023-07-02 09:44:17,552:INFO:Initializing create_model()
2023-07-02 09:44:17,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:44:17,556:INFO:Checking exceptions
2023-07-02 09:44:17,556:INFO:Importing libraries
2023-07-02 09:44:17,556:INFO:Copying training dataset
2023-07-02 09:44:17,560:INFO:Defining folds
2023-07-02 09:44:17,560:INFO:Declaring metric variables
2023-07-02 09:44:17,564:INFO:Importing untrained model
2023-07-02 09:44:17,576:INFO:K Neighbors Classifier Imported successfully
2023-07-02 09:44:17,588:INFO:Starting cross validation
2023-07-02 09:44:17,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:44:17,772:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:17,784:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:17,788:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:17,792:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:17,796:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:17,812:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:17,840:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:21,939:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:21,987:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:44:26,608:INFO:Calculating mean and std
2023-07-02 09:44:26,612:INFO:Creating metrics dataframe
2023-07-02 09:44:27,979:INFO:Uploading results into container
2023-07-02 09:44:27,979:INFO:Uploading model into container now
2023-07-02 09:44:27,979:INFO:_master_model_container: 2
2023-07-02 09:44:27,983:INFO:_display_container: 2
2023-07-02 09:44:27,983:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 09:44:27,983:INFO:create_model() successfully completed......................................
2023-07-02 09:44:28,115:INFO:SubProcess create_model() end ==================================
2023-07-02 09:44:28,115:INFO:Creating metrics dataframe
2023-07-02 09:44:28,131:INFO:Initializing Naive Bayes
2023-07-02 09:44:28,135:INFO:Total runtime is 0.4947046796480815 minutes
2023-07-02 09:44:28,139:INFO:SubProcess create_model() called ==================================
2023-07-02 09:44:28,139:INFO:Initializing create_model()
2023-07-02 09:44:28,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:44:28,143:INFO:Checking exceptions
2023-07-02 09:44:28,143:INFO:Importing libraries
2023-07-02 09:44:28,143:INFO:Copying training dataset
2023-07-02 09:44:28,151:INFO:Defining folds
2023-07-02 09:44:28,151:INFO:Declaring metric variables
2023-07-02 09:44:28,159:INFO:Importing untrained model
2023-07-02 09:44:28,167:INFO:Naive Bayes Imported successfully
2023-07-02 09:44:28,179:INFO:Starting cross validation
2023-07-02 09:44:28,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:44:36,120:INFO:Calculating mean and std
2023-07-02 09:44:36,124:INFO:Creating metrics dataframe
2023-07-02 09:44:37,321:INFO:Uploading results into container
2023-07-02 09:44:37,325:INFO:Uploading model into container now
2023-07-02 09:44:37,325:INFO:_master_model_container: 3
2023-07-02 09:44:37,325:INFO:_display_container: 2
2023-07-02 09:44:37,325:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 09:44:37,325:INFO:create_model() successfully completed......................................
2023-07-02 09:44:37,469:INFO:SubProcess create_model() end ==================================
2023-07-02 09:44:37,469:INFO:Creating metrics dataframe
2023-07-02 09:44:37,481:INFO:Initializing Decision Tree Classifier
2023-07-02 09:44:37,481:INFO:Total runtime is 0.6504800597826641 minutes
2023-07-02 09:44:37,486:INFO:SubProcess create_model() called ==================================
2023-07-02 09:44:37,486:INFO:Initializing create_model()
2023-07-02 09:44:37,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:44:37,486:INFO:Checking exceptions
2023-07-02 09:44:37,486:INFO:Importing libraries
2023-07-02 09:44:37,486:INFO:Copying training dataset
2023-07-02 09:44:37,493:INFO:Defining folds
2023-07-02 09:44:37,493:INFO:Declaring metric variables
2023-07-02 09:44:37,497:INFO:Importing untrained model
2023-07-02 09:44:37,505:INFO:Decision Tree Classifier Imported successfully
2023-07-02 09:44:37,513:INFO:Starting cross validation
2023-07-02 09:44:37,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:44:45,984:INFO:Calculating mean and std
2023-07-02 09:44:45,988:INFO:Creating metrics dataframe
2023-07-02 09:44:47,180:INFO:Uploading results into container
2023-07-02 09:44:47,183:INFO:Uploading model into container now
2023-07-02 09:44:47,183:INFO:_master_model_container: 4
2023-07-02 09:44:47,184:INFO:_display_container: 2
2023-07-02 09:44:47,184:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4091, splitter='best')
2023-07-02 09:44:47,184:INFO:create_model() successfully completed......................................
2023-07-02 09:44:47,312:INFO:SubProcess create_model() end ==================================
2023-07-02 09:44:47,312:INFO:Creating metrics dataframe
2023-07-02 09:44:47,324:INFO:Initializing SVM - Linear Kernel
2023-07-02 09:44:47,324:INFO:Total runtime is 0.81452454328537 minutes
2023-07-02 09:44:47,328:INFO:SubProcess create_model() called ==================================
2023-07-02 09:44:47,328:INFO:Initializing create_model()
2023-07-02 09:44:47,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:44:47,328:INFO:Checking exceptions
2023-07-02 09:44:47,328:INFO:Importing libraries
2023-07-02 09:44:47,328:INFO:Copying training dataset
2023-07-02 09:44:47,332:INFO:Defining folds
2023-07-02 09:44:47,332:INFO:Declaring metric variables
2023-07-02 09:44:47,336:INFO:Importing untrained model
2023-07-02 09:44:47,344:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 09:44:47,356:INFO:Starting cross validation
2023-07-02 09:44:47,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:44:47,526:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,537:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,537:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,542:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,542:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,542:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,546:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,546:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,546:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:47,557:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:44:55,333:INFO:Calculating mean and std
2023-07-02 09:44:55,333:INFO:Creating metrics dataframe
2023-07-02 09:44:56,635:INFO:Uploading results into container
2023-07-02 09:44:56,639:INFO:Uploading model into container now
2023-07-02 09:44:56,639:INFO:_master_model_container: 5
2023-07-02 09:44:56,639:INFO:_display_container: 2
2023-07-02 09:44:56,639:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4091, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 09:44:56,639:INFO:create_model() successfully completed......................................
2023-07-02 09:44:56,779:INFO:SubProcess create_model() end ==================================
2023-07-02 09:44:56,779:INFO:Creating metrics dataframe
2023-07-02 09:44:56,795:INFO:Initializing Ridge Classifier
2023-07-02 09:44:56,795:INFO:Total runtime is 0.9723760366439821 minutes
2023-07-02 09:44:56,799:INFO:SubProcess create_model() called ==================================
2023-07-02 09:44:56,799:INFO:Initializing create_model()
2023-07-02 09:44:56,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:44:56,803:INFO:Checking exceptions
2023-07-02 09:44:56,803:INFO:Importing libraries
2023-07-02 09:44:56,803:INFO:Copying training dataset
2023-07-02 09:44:56,807:INFO:Defining folds
2023-07-02 09:44:56,807:INFO:Declaring metric variables
2023-07-02 09:44:56,815:INFO:Importing untrained model
2023-07-02 09:44:56,819:INFO:Ridge Classifier Imported successfully
2023-07-02 09:44:56,831:INFO:Starting cross validation
2023-07-02 09:44:56,831:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:44:57,023:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,023:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,027:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,027:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,027:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,031:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,035:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,039:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,039:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:44:57,039:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:45:05,294:INFO:Calculating mean and std
2023-07-02 09:45:05,294:INFO:Creating metrics dataframe
2023-07-02 09:45:06,497:INFO:Uploading results into container
2023-07-02 09:45:06,497:INFO:Uploading model into container now
2023-07-02 09:45:06,497:INFO:_master_model_container: 6
2023-07-02 09:45:06,497:INFO:_display_container: 2
2023-07-02 09:45:06,497:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001)
2023-07-02 09:45:06,501:INFO:create_model() successfully completed......................................
2023-07-02 09:45:06,647:INFO:SubProcess create_model() end ==================================
2023-07-02 09:45:06,647:INFO:Creating metrics dataframe
2023-07-02 09:45:06,663:INFO:Initializing Random Forest Classifier
2023-07-02 09:45:06,663:INFO:Total runtime is 1.136836353937785 minutes
2023-07-02 09:45:06,667:INFO:SubProcess create_model() called ==================================
2023-07-02 09:45:06,667:INFO:Initializing create_model()
2023-07-02 09:45:06,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:45:06,667:INFO:Checking exceptions
2023-07-02 09:45:06,667:INFO:Importing libraries
2023-07-02 09:45:06,671:INFO:Copying training dataset
2023-07-02 09:45:06,679:INFO:Defining folds
2023-07-02 09:45:06,679:INFO:Declaring metric variables
2023-07-02 09:45:06,683:INFO:Importing untrained model
2023-07-02 09:45:06,691:INFO:Random Forest Classifier Imported successfully
2023-07-02 09:45:06,703:INFO:Starting cross validation
2023-07-02 09:45:06,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:45:16,240:INFO:Calculating mean and std
2023-07-02 09:45:16,244:INFO:Creating metrics dataframe
2023-07-02 09:45:17,563:INFO:Uploading results into container
2023-07-02 09:45:17,563:INFO:Uploading model into container now
2023-07-02 09:45:17,563:INFO:_master_model_container: 7
2023-07-02 09:45:17,563:INFO:_display_container: 2
2023-07-02 09:45:17,567:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4091, verbose=0, warm_start=False)
2023-07-02 09:45:17,567:INFO:create_model() successfully completed......................................
2023-07-02 09:45:17,695:INFO:SubProcess create_model() end ==================================
2023-07-02 09:45:17,695:INFO:Creating metrics dataframe
2023-07-02 09:45:17,710:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 09:45:17,710:INFO:Total runtime is 1.3209597468376162 minutes
2023-07-02 09:45:17,711:INFO:SubProcess create_model() called ==================================
2023-07-02 09:45:17,711:INFO:Initializing create_model()
2023-07-02 09:45:17,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:45:17,715:INFO:Checking exceptions
2023-07-02 09:45:17,715:INFO:Importing libraries
2023-07-02 09:45:17,715:INFO:Copying training dataset
2023-07-02 09:45:17,723:INFO:Defining folds
2023-07-02 09:45:17,723:INFO:Declaring metric variables
2023-07-02 09:45:17,727:INFO:Importing untrained model
2023-07-02 09:45:17,731:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 09:45:17,743:INFO:Starting cross validation
2023-07-02 09:45:17,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:45:25,693:INFO:Calculating mean and std
2023-07-02 09:45:25,697:INFO:Creating metrics dataframe
2023-07-02 09:45:27,037:INFO:Uploading results into container
2023-07-02 09:45:27,041:INFO:Uploading model into container now
2023-07-02 09:45:27,041:INFO:_master_model_container: 8
2023-07-02 09:45:27,041:INFO:_display_container: 2
2023-07-02 09:45:27,041:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 09:45:27,041:INFO:create_model() successfully completed......................................
2023-07-02 09:45:27,185:INFO:SubProcess create_model() end ==================================
2023-07-02 09:45:27,185:INFO:Creating metrics dataframe
2023-07-02 09:45:27,201:INFO:Initializing Ada Boost Classifier
2023-07-02 09:45:27,201:INFO:Total runtime is 1.4791478554407758 minutes
2023-07-02 09:45:27,209:INFO:SubProcess create_model() called ==================================
2023-07-02 09:45:27,209:INFO:Initializing create_model()
2023-07-02 09:45:27,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:45:27,209:INFO:Checking exceptions
2023-07-02 09:45:27,209:INFO:Importing libraries
2023-07-02 09:45:27,209:INFO:Copying training dataset
2023-07-02 09:45:27,217:INFO:Defining folds
2023-07-02 09:45:27,217:INFO:Declaring metric variables
2023-07-02 09:45:27,226:INFO:Importing untrained model
2023-07-02 09:45:27,234:INFO:Ada Boost Classifier Imported successfully
2023-07-02 09:45:27,254:INFO:Starting cross validation
2023-07-02 09:45:27,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:45:36,347:INFO:Calculating mean and std
2023-07-02 09:45:36,347:INFO:Creating metrics dataframe
2023-07-02 09:45:37,572:INFO:Uploading results into container
2023-07-02 09:45:37,576:INFO:Uploading model into container now
2023-07-02 09:45:37,576:INFO:_master_model_container: 9
2023-07-02 09:45:37,576:INFO:_display_container: 2
2023-07-02 09:45:37,576:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4091)
2023-07-02 09:45:37,576:INFO:create_model() successfully completed......................................
2023-07-02 09:45:37,704:INFO:SubProcess create_model() end ==================================
2023-07-02 09:45:37,704:INFO:Creating metrics dataframe
2023-07-02 09:45:37,720:INFO:Initializing Gradient Boosting Classifier
2023-07-02 09:45:37,720:INFO:Total runtime is 1.6544638554255169 minutes
2023-07-02 09:45:37,724:INFO:SubProcess create_model() called ==================================
2023-07-02 09:45:37,724:INFO:Initializing create_model()
2023-07-02 09:45:37,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:45:37,724:INFO:Checking exceptions
2023-07-02 09:45:37,724:INFO:Importing libraries
2023-07-02 09:45:37,724:INFO:Copying training dataset
2023-07-02 09:45:37,732:INFO:Defining folds
2023-07-02 09:45:37,732:INFO:Declaring metric variables
2023-07-02 09:45:37,740:INFO:Importing untrained model
2023-07-02 09:45:37,748:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 09:45:37,760:INFO:Starting cross validation
2023-07-02 09:45:37,764:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:45:46,710:INFO:Calculating mean and std
2023-07-02 09:45:46,714:INFO:Creating metrics dataframe
2023-07-02 09:45:47,930:INFO:Uploading results into container
2023-07-02 09:45:47,932:INFO:Uploading model into container now
2023-07-02 09:45:47,933:INFO:_master_model_container: 10
2023-07-02 09:45:47,933:INFO:_display_container: 2
2023-07-02 09:45:47,933:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4091, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 09:45:47,934:INFO:create_model() successfully completed......................................
2023-07-02 09:45:48,062:INFO:SubProcess create_model() end ==================================
2023-07-02 09:45:48,062:INFO:Creating metrics dataframe
2023-07-02 09:45:48,074:INFO:Initializing Linear Discriminant Analysis
2023-07-02 09:45:48,074:INFO:Total runtime is 1.82703066666921 minutes
2023-07-02 09:45:48,078:INFO:SubProcess create_model() called ==================================
2023-07-02 09:45:48,082:INFO:Initializing create_model()
2023-07-02 09:45:48,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:45:48,082:INFO:Checking exceptions
2023-07-02 09:45:48,082:INFO:Importing libraries
2023-07-02 09:45:48,082:INFO:Copying training dataset
2023-07-02 09:45:48,086:INFO:Defining folds
2023-07-02 09:45:48,086:INFO:Declaring metric variables
2023-07-02 09:45:48,090:INFO:Importing untrained model
2023-07-02 09:45:48,098:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 09:45:48,106:INFO:Starting cross validation
2023-07-02 09:45:48,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:45:56,184:INFO:Calculating mean and std
2023-07-02 09:45:56,188:INFO:Creating metrics dataframe
2023-07-02 09:45:57,415:INFO:Uploading results into container
2023-07-02 09:45:57,415:INFO:Uploading model into container now
2023-07-02 09:45:57,415:INFO:_master_model_container: 11
2023-07-02 09:45:57,415:INFO:_display_container: 2
2023-07-02 09:45:57,419:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 09:45:57,419:INFO:create_model() successfully completed......................................
2023-07-02 09:45:57,551:INFO:SubProcess create_model() end ==================================
2023-07-02 09:45:57,551:INFO:Creating metrics dataframe
2023-07-02 09:45:57,568:INFO:Initializing Extra Trees Classifier
2023-07-02 09:45:57,568:INFO:Total runtime is 1.985249980290731 minutes
2023-07-02 09:45:57,575:INFO:SubProcess create_model() called ==================================
2023-07-02 09:45:57,575:INFO:Initializing create_model()
2023-07-02 09:45:57,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:45:57,575:INFO:Checking exceptions
2023-07-02 09:45:57,575:INFO:Importing libraries
2023-07-02 09:45:57,575:INFO:Copying training dataset
2023-07-02 09:45:57,580:INFO:Defining folds
2023-07-02 09:45:57,580:INFO:Declaring metric variables
2023-07-02 09:45:57,588:INFO:Importing untrained model
2023-07-02 09:45:57,596:INFO:Extra Trees Classifier Imported successfully
2023-07-02 09:45:57,608:INFO:Starting cross validation
2023-07-02 09:45:57,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:46:07,193:INFO:Calculating mean and std
2023-07-02 09:46:07,193:INFO:Creating metrics dataframe
2023-07-02 09:46:08,556:INFO:Uploading results into container
2023-07-02 09:46:08,560:INFO:Uploading model into container now
2023-07-02 09:46:08,560:INFO:_master_model_container: 12
2023-07-02 09:46:08,560:INFO:_display_container: 2
2023-07-02 09:46:08,560:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4091, verbose=0, warm_start=False)
2023-07-02 09:46:08,560:INFO:create_model() successfully completed......................................
2023-07-02 09:46:08,693:INFO:SubProcess create_model() end ==================================
2023-07-02 09:46:08,693:INFO:Creating metrics dataframe
2023-07-02 09:46:08,705:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 09:46:08,705:INFO:Total runtime is 2.1708737254142765 minutes
2023-07-02 09:46:08,709:INFO:SubProcess create_model() called ==================================
2023-07-02 09:46:08,709:INFO:Initializing create_model()
2023-07-02 09:46:08,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:46:08,709:INFO:Checking exceptions
2023-07-02 09:46:08,709:INFO:Importing libraries
2023-07-02 09:46:08,709:INFO:Copying training dataset
2023-07-02 09:46:08,717:INFO:Defining folds
2023-07-02 09:46:08,717:INFO:Declaring metric variables
2023-07-02 09:46:08,725:INFO:Importing untrained model
2023-07-02 09:46:08,729:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 09:46:08,745:INFO:Starting cross validation
2023-07-02 09:46:08,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:46:19,828:INFO:Calculating mean and std
2023-07-02 09:46:19,832:INFO:Creating metrics dataframe
2023-07-02 09:46:21,142:INFO:Uploading results into container
2023-07-02 09:46:21,146:INFO:Uploading model into container now
2023-07-02 09:46:21,146:INFO:_master_model_container: 13
2023-07-02 09:46:21,146:INFO:_display_container: 2
2023-07-02 09:46:21,146:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4091, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 09:46:21,146:INFO:create_model() successfully completed......................................
2023-07-02 09:46:21,282:INFO:SubProcess create_model() end ==================================
2023-07-02 09:46:21,282:INFO:Creating metrics dataframe
2023-07-02 09:46:21,298:INFO:Initializing Dummy Classifier
2023-07-02 09:46:21,298:INFO:Total runtime is 2.3807533780733747 minutes
2023-07-02 09:46:21,302:INFO:SubProcess create_model() called ==================================
2023-07-02 09:46:21,306:INFO:Initializing create_model()
2023-07-02 09:46:21,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002395AA8E430>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:46:21,306:INFO:Checking exceptions
2023-07-02 09:46:21,306:INFO:Importing libraries
2023-07-02 09:46:21,306:INFO:Copying training dataset
2023-07-02 09:46:21,310:INFO:Defining folds
2023-07-02 09:46:21,310:INFO:Declaring metric variables
2023-07-02 09:46:21,314:INFO:Importing untrained model
2023-07-02 09:46:21,322:INFO:Dummy Classifier Imported successfully
2023-07-02 09:46:21,330:INFO:Starting cross validation
2023-07-02 09:46:21,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:46:21,535:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,535:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,535:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,543:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,551:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,559:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,559:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,559:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:21,563:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:46:30,092:INFO:Calculating mean and std
2023-07-02 09:46:30,092:INFO:Creating metrics dataframe
2023-07-02 09:46:31,452:INFO:Uploading results into container
2023-07-02 09:46:31,452:INFO:Uploading model into container now
2023-07-02 09:46:31,452:INFO:_master_model_container: 14
2023-07-02 09:46:31,452:INFO:_display_container: 2
2023-07-02 09:46:31,456:INFO:DummyClassifier(constant=None, random_state=4091, strategy='prior')
2023-07-02 09:46:31,456:INFO:create_model() successfully completed......................................
2023-07-02 09:46:31,588:INFO:SubProcess create_model() end ==================================
2023-07-02 09:46:31,588:INFO:Creating metrics dataframe
2023-07-02 09:46:31,628:INFO:Initializing create_model()
2023-07-02 09:46:31,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:46:31,632:INFO:Checking exceptions
2023-07-02 09:46:31,636:INFO:Importing libraries
2023-07-02 09:46:31,636:INFO:Copying training dataset
2023-07-02 09:46:31,644:INFO:Defining folds
2023-07-02 09:46:31,644:INFO:Declaring metric variables
2023-07-02 09:46:31,644:INFO:Importing untrained model
2023-07-02 09:46:31,644:INFO:Declaring custom model
2023-07-02 09:46:31,648:INFO:Ridge Classifier Imported successfully
2023-07-02 09:46:31,648:INFO:Cross validation set to False
2023-07-02 09:46:31,648:INFO:Fitting Model
2023-07-02 09:46:32,621:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001)
2023-07-02 09:46:32,621:INFO:create_model() successfully completed......................................
2023-07-02 09:46:32,810:INFO:_master_model_container: 14
2023-07-02 09:46:32,810:INFO:_display_container: 2
2023-07-02 09:46:32,814:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001)
2023-07-02 09:46:32,814:INFO:compare_models() successfully completed......................................
2023-07-02 09:46:32,894:INFO:Initializing create_model()
2023-07-02 09:46:32,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:46:32,894:INFO:Checking exceptions
2023-07-02 09:46:32,946:INFO:Importing libraries
2023-07-02 09:46:32,946:INFO:Copying training dataset
2023-07-02 09:46:32,950:INFO:Defining folds
2023-07-02 09:46:32,950:INFO:Declaring metric variables
2023-07-02 09:46:32,958:INFO:Importing untrained model
2023-07-02 09:46:32,962:INFO:Logistic Regression Imported successfully
2023-07-02 09:46:32,974:INFO:Starting cross validation
2023-07-02 09:46:32,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:46:42,212:INFO:Calculating mean and std
2023-07-02 09:46:42,216:INFO:Creating metrics dataframe
2023-07-02 09:46:42,224:INFO:Finalizing model
2023-07-02 09:46:43,722:INFO:Uploading results into container
2023-07-02 09:46:43,722:INFO:Uploading model into container now
2023-07-02 09:46:43,738:INFO:_master_model_container: 15
2023-07-02 09:46:43,738:INFO:_display_container: 3
2023-07-02 09:46:43,742:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 09:46:43,742:INFO:create_model() successfully completed......................................
2023-07-02 09:46:44,007:INFO:Initializing tune_model()
2023-07-02 09:46:44,007:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>)
2023-07-02 09:46:44,007:INFO:Checking exceptions
2023-07-02 09:46:44,039:INFO:Copying training dataset
2023-07-02 09:46:44,043:INFO:Checking base model
2023-07-02 09:46:44,043:INFO:Base model : Logistic Regression
2023-07-02 09:46:44,047:INFO:Declaring metric variables
2023-07-02 09:46:44,055:INFO:Defining Hyperparameters
2023-07-02 09:46:44,207:INFO:Tuning with n_jobs=-1
2023-07-02 09:46:44,207:INFO:Initializing RandomizedSearchCV
2023-07-02 09:48:20,767:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 2.6}
2023-07-02 09:48:20,767:INFO:Hyperparameter search completed
2023-07-02 09:48:20,767:INFO:SubProcess create_model() called ==================================
2023-07-02 09:48:20,771:INFO:Initializing create_model()
2023-07-02 09:48:20,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002396973CA90>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 2.6})
2023-07-02 09:48:20,771:INFO:Checking exceptions
2023-07-02 09:48:20,771:INFO:Importing libraries
2023-07-02 09:48:20,771:INFO:Copying training dataset
2023-07-02 09:48:20,779:INFO:Defining folds
2023-07-02 09:48:20,779:INFO:Declaring metric variables
2023-07-02 09:48:20,783:INFO:Importing untrained model
2023-07-02 09:48:20,787:INFO:Declaring custom model
2023-07-02 09:48:20,795:INFO:Logistic Regression Imported successfully
2023-07-02 09:48:20,808:INFO:Starting cross validation
2023-07-02 09:48:20,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:48:29,942:INFO:Calculating mean and std
2023-07-02 09:48:29,942:INFO:Creating metrics dataframe
2023-07-02 09:48:29,950:INFO:Finalizing model
2023-07-02 09:48:31,273:INFO:Uploading results into container
2023-07-02 09:48:31,277:INFO:Uploading model into container now
2023-07-02 09:48:31,277:INFO:_master_model_container: 16
2023-07-02 09:48:31,277:INFO:_display_container: 4
2023-07-02 09:48:31,277:INFO:LogisticRegression(C=2.6, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 09:48:31,277:INFO:create_model() successfully completed......................................
2023-07-02 09:48:31,425:INFO:SubProcess create_model() end ==================================
2023-07-02 09:48:31,425:INFO:choose_better activated
2023-07-02 09:48:31,429:INFO:SubProcess create_model() called ==================================
2023-07-02 09:48:31,429:INFO:Initializing create_model()
2023-07-02 09:48:31,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:48:31,429:INFO:Checking exceptions
2023-07-02 09:48:31,433:INFO:Importing libraries
2023-07-02 09:48:31,433:INFO:Copying training dataset
2023-07-02 09:48:31,441:INFO:Defining folds
2023-07-02 09:48:31,441:INFO:Declaring metric variables
2023-07-02 09:48:31,441:INFO:Importing untrained model
2023-07-02 09:48:31,441:INFO:Declaring custom model
2023-07-02 09:48:31,441:INFO:Logistic Regression Imported successfully
2023-07-02 09:48:31,441:INFO:Starting cross validation
2023-07-02 09:48:31,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:48:39,822:INFO:Calculating mean and std
2023-07-02 09:48:39,822:INFO:Creating metrics dataframe
2023-07-02 09:48:39,827:INFO:Finalizing model
2023-07-02 09:48:41,319:INFO:Uploading results into container
2023-07-02 09:48:41,319:INFO:Uploading model into container now
2023-07-02 09:48:41,319:INFO:_master_model_container: 17
2023-07-02 09:48:41,319:INFO:_display_container: 5
2023-07-02 09:48:41,319:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 09:48:41,323:INFO:create_model() successfully completed......................................
2023-07-02 09:48:41,455:INFO:SubProcess create_model() end ==================================
2023-07-02 09:48:41,455:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7672
2023-07-02 09:48:41,455:INFO:LogisticRegression(C=2.6, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7688
2023-07-02 09:48:41,455:INFO:LogisticRegression(C=2.6, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-07-02 09:48:41,455:INFO:choose_better completed
2023-07-02 09:48:41,467:INFO:_master_model_container: 17
2023-07-02 09:48:41,467:INFO:_display_container: 4
2023-07-02 09:48:41,467:INFO:LogisticRegression(C=2.6, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 09:48:41,467:INFO:tune_model() successfully completed......................................
2023-07-02 09:48:42,665:INFO:Initializing plot_model()
2023-07-02 09:48:42,665:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, system=True)
2023-07-02 09:48:42,665:INFO:Checking exceptions
2023-07-02 09:48:42,669:INFO:Preloading libraries
2023-07-02 09:48:42,669:INFO:Copying training dataset
2023-07-02 09:48:42,669:INFO:Plot type: manifold
2023-07-02 09:48:42,902:INFO:Fitting & Transforming Model
2023-07-02 09:48:42,902:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 09:48:42,970:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 09:48:45,090:INFO:Visual Rendered Successfully
2023-07-02 09:48:45,259:INFO:plot_model() successfully completed......................................
2023-07-02 09:48:45,355:INFO:Initializing plot_model()
2023-07-02 09:48:45,355:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, system=True)
2023-07-02 09:48:45,355:INFO:Checking exceptions
2023-07-02 09:48:45,359:INFO:Preloading libraries
2023-07-02 09:48:45,359:INFO:Copying training dataset
2023-07-02 09:48:45,359:INFO:Plot type: feature
2023-07-02 09:48:45,507:INFO:Visual Rendered Successfully
2023-07-02 09:48:45,639:INFO:plot_model() successfully completed......................................
2023-07-02 09:48:45,687:INFO:Initializing plot_model()
2023-07-02 09:48:45,687:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, system=True)
2023-07-02 09:48:45,687:INFO:Checking exceptions
2023-07-02 09:48:45,695:INFO:Preloading libraries
2023-07-02 09:48:45,695:INFO:Copying training dataset
2023-07-02 09:48:45,695:INFO:Plot type: confusion_matrix
2023-07-02 09:48:45,839:INFO:Fitting Model
2023-07-02 09:48:45,843:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 09:48:45,843:INFO:Scoring test/hold-out set
2023-07-02 09:48:45,963:INFO:Visual Rendered Successfully
2023-07-02 09:48:46,104:INFO:plot_model() successfully completed......................................
2023-07-02 09:48:46,148:INFO:Initializing plot_model()
2023-07-02 09:48:46,148:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, system=True)
2023-07-02 09:48:46,148:INFO:Checking exceptions
2023-07-02 09:48:46,152:INFO:Preloading libraries
2023-07-02 09:48:46,152:INFO:Copying training dataset
2023-07-02 09:48:46,156:INFO:Plot type: auc
2023-07-02 09:48:46,252:INFO:Fitting Model
2023-07-02 09:48:46,252:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 09:48:46,256:INFO:Scoring test/hold-out set
2023-07-02 09:48:46,468:INFO:Visual Rendered Successfully
2023-07-02 09:48:46,600:INFO:plot_model() successfully completed......................................
2023-07-02 09:48:46,628:INFO:Initializing plot_model()
2023-07-02 09:48:46,628:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, system=True)
2023-07-02 09:48:46,632:INFO:Checking exceptions
2023-07-02 09:48:46,637:INFO:Preloading libraries
2023-07-02 09:48:46,637:INFO:Copying training dataset
2023-07-02 09:48:46,637:INFO:Plot type: pr
2023-07-02 09:48:46,752:INFO:Fitting Model
2023-07-02 09:48:46,756:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 09:48:46,756:INFO:Scoring test/hold-out set
2023-07-02 09:48:46,901:INFO:Visual Rendered Successfully
2023-07-02 09:48:47,021:INFO:plot_model() successfully completed......................................
2023-07-02 09:48:47,061:INFO:Initializing predict_model()
2023-07-02 09:48:47,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000239697BDCA0>)
2023-07-02 09:48:47,061:INFO:Checking exceptions
2023-07-02 09:48:47,061:INFO:Preloading libraries
2023-07-02 09:48:47,369:INFO:Initializing finalize_model()
2023-07-02 09:48:47,369:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 09:48:47,369:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 09:48:47,377:INFO:Initializing create_model()
2023-07-02 09:48:47,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 09:48:47,377:INFO:Checking exceptions
2023-07-02 09:48:47,381:INFO:Importing libraries
2023-07-02 09:48:47,381:INFO:Copying training dataset
2023-07-02 09:48:47,381:INFO:Defining folds
2023-07-02 09:48:47,381:INFO:Declaring metric variables
2023-07-02 09:48:47,385:INFO:Importing untrained model
2023-07-02 09:48:47,385:INFO:Declaring custom model
2023-07-02 09:48:47,385:INFO:Logistic Regression Imported successfully
2023-07-02 09:48:47,385:INFO:Cross validation set to False
2023-07-02 09:48:47,385:INFO:Fitting Model
2023-07-02 09:48:47,434:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4091,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 09:48:47,434:INFO:create_model() successfully completed......................................
2023-07-02 09:48:47,574:INFO:_master_model_container: 17
2023-07-02 09:48:47,574:INFO:_display_container: 5
2023-07-02 09:48:47,578:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4091,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 09:48:47,578:INFO:finalize_model() successfully completed......................................
2023-07-02 09:48:47,742:INFO:Initializing save_model()
2023-07-02 09:48:47,742:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=Final_diabetes_model_4Avril2022, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-02 09:48:47,742:INFO:Adding model into prep_pipe
2023-07-02 09:48:47,753:INFO:Final_diabetes_model_4Avril2022.pkl saved in current working directory
2023-07-02 09:48:47,761:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4091,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 09:48:47,761:INFO:save_model() successfully completed......................................
2023-07-02 09:51:51,285:INFO:Initializing compare_models()
2023-07-02 09:51:51,285:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 09:51:51,285:INFO:Checking exceptions
2023-07-02 09:51:51,293:INFO:Preparing display monitor
2023-07-02 09:51:51,365:INFO:Initializing Logistic Regression
2023-07-02 09:51:51,365:INFO:Total runtime is 0.0 minutes
2023-07-02 09:51:51,373:INFO:SubProcess create_model() called ==================================
2023-07-02 09:51:51,373:INFO:Initializing create_model()
2023-07-02 09:51:51,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:51:51,373:INFO:Checking exceptions
2023-07-02 09:51:51,373:INFO:Importing libraries
2023-07-02 09:51:51,373:INFO:Copying training dataset
2023-07-02 09:51:51,381:INFO:Defining folds
2023-07-02 09:51:51,381:INFO:Declaring metric variables
2023-07-02 09:51:51,389:INFO:Importing untrained model
2023-07-02 09:51:51,401:INFO:Logistic Regression Imported successfully
2023-07-02 09:51:51,417:INFO:Starting cross validation
2023-07-02 09:51:51,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:52:03,230:INFO:Calculating mean and std
2023-07-02 09:52:03,230:INFO:Creating metrics dataframe
2023-07-02 09:52:04,605:INFO:Uploading results into container
2023-07-02 09:52:04,605:INFO:Uploading model into container now
2023-07-02 09:52:04,605:INFO:_master_model_container: 18
2023-07-02 09:52:04,605:INFO:_display_container: 6
2023-07-02 09:52:04,605:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 09:52:04,609:INFO:create_model() successfully completed......................................
2023-07-02 09:52:04,757:INFO:SubProcess create_model() end ==================================
2023-07-02 09:52:04,761:INFO:Creating metrics dataframe
2023-07-02 09:52:04,777:INFO:Initializing K Neighbors Classifier
2023-07-02 09:52:04,777:INFO:Total runtime is 0.2235324462254842 minutes
2023-07-02 09:52:04,785:INFO:SubProcess create_model() called ==================================
2023-07-02 09:52:04,785:INFO:Initializing create_model()
2023-07-02 09:52:04,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:52:04,785:INFO:Checking exceptions
2023-07-02 09:52:04,785:INFO:Importing libraries
2023-07-02 09:52:04,785:INFO:Copying training dataset
2023-07-02 09:52:04,797:INFO:Defining folds
2023-07-02 09:52:04,797:INFO:Declaring metric variables
2023-07-02 09:52:04,805:INFO:Importing untrained model
2023-07-02 09:52:04,809:INFO:K Neighbors Classifier Imported successfully
2023-07-02 09:52:04,817:INFO:Starting cross validation
2023-07-02 09:52:04,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:52:04,981:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:04,985:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,010:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,014:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,015:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,019:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,027:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,035:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,043:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:05,055:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 09:52:14,238:INFO:Calculating mean and std
2023-07-02 09:52:14,242:INFO:Creating metrics dataframe
2023-07-02 09:52:15,771:INFO:Uploading results into container
2023-07-02 09:52:15,775:INFO:Uploading model into container now
2023-07-02 09:52:15,775:INFO:_master_model_container: 19
2023-07-02 09:52:15,775:INFO:_display_container: 6
2023-07-02 09:52:15,775:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 09:52:15,775:INFO:create_model() successfully completed......................................
2023-07-02 09:52:15,915:INFO:SubProcess create_model() end ==================================
2023-07-02 09:52:15,915:INFO:Creating metrics dataframe
2023-07-02 09:52:15,927:INFO:Initializing Naive Bayes
2023-07-02 09:52:15,927:INFO:Total runtime is 0.4093608538309733 minutes
2023-07-02 09:52:15,935:INFO:SubProcess create_model() called ==================================
2023-07-02 09:52:15,935:INFO:Initializing create_model()
2023-07-02 09:52:15,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:52:15,935:INFO:Checking exceptions
2023-07-02 09:52:15,935:INFO:Importing libraries
2023-07-02 09:52:15,935:INFO:Copying training dataset
2023-07-02 09:52:15,939:INFO:Defining folds
2023-07-02 09:52:15,939:INFO:Declaring metric variables
2023-07-02 09:52:15,947:INFO:Importing untrained model
2023-07-02 09:52:15,951:INFO:Naive Bayes Imported successfully
2023-07-02 09:52:15,963:INFO:Starting cross validation
2023-07-02 09:52:15,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:52:25,111:INFO:Calculating mean and std
2023-07-02 09:52:25,115:INFO:Creating metrics dataframe
2023-07-02 09:52:26,642:INFO:Uploading results into container
2023-07-02 09:52:26,642:INFO:Uploading model into container now
2023-07-02 09:52:26,642:INFO:_master_model_container: 20
2023-07-02 09:52:26,642:INFO:_display_container: 6
2023-07-02 09:52:26,642:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 09:52:26,642:INFO:create_model() successfully completed......................................
2023-07-02 09:52:26,786:INFO:SubProcess create_model() end ==================================
2023-07-02 09:52:26,786:INFO:Creating metrics dataframe
2023-07-02 09:52:26,802:INFO:Initializing Decision Tree Classifier
2023-07-02 09:52:26,802:INFO:Total runtime is 0.5906092683474222 minutes
2023-07-02 09:52:26,806:INFO:SubProcess create_model() called ==================================
2023-07-02 09:52:26,810:INFO:Initializing create_model()
2023-07-02 09:52:26,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:52:26,810:INFO:Checking exceptions
2023-07-02 09:52:26,810:INFO:Importing libraries
2023-07-02 09:52:26,810:INFO:Copying training dataset
2023-07-02 09:52:26,814:INFO:Defining folds
2023-07-02 09:52:26,814:INFO:Declaring metric variables
2023-07-02 09:52:26,822:INFO:Importing untrained model
2023-07-02 09:52:26,826:INFO:Decision Tree Classifier Imported successfully
2023-07-02 09:52:26,834:INFO:Starting cross validation
2023-07-02 09:52:26,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:52:35,616:INFO:Calculating mean and std
2023-07-02 09:52:35,616:INFO:Creating metrics dataframe
2023-07-02 09:52:36,861:INFO:Uploading results into container
2023-07-02 09:52:36,861:INFO:Uploading model into container now
2023-07-02 09:52:36,861:INFO:_master_model_container: 21
2023-07-02 09:52:36,861:INFO:_display_container: 6
2023-07-02 09:52:36,861:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4091, splitter='best')
2023-07-02 09:52:36,861:INFO:create_model() successfully completed......................................
2023-07-02 09:52:36,994:INFO:SubProcess create_model() end ==================================
2023-07-02 09:52:36,994:INFO:Creating metrics dataframe
2023-07-02 09:52:37,006:INFO:Initializing SVM - Linear Kernel
2023-07-02 09:52:37,006:INFO:Total runtime is 0.760670777161916 minutes
2023-07-02 09:52:37,014:INFO:SubProcess create_model() called ==================================
2023-07-02 09:52:37,014:INFO:Initializing create_model()
2023-07-02 09:52:37,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:52:37,014:INFO:Checking exceptions
2023-07-02 09:52:37,014:INFO:Importing libraries
2023-07-02 09:52:37,014:INFO:Copying training dataset
2023-07-02 09:52:37,022:INFO:Defining folds
2023-07-02 09:52:37,022:INFO:Declaring metric variables
2023-07-02 09:52:37,026:INFO:Importing untrained model
2023-07-02 09:52:37,034:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 09:52:37,050:INFO:Starting cross validation
2023-07-02 09:52:37,050:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:52:37,177:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,198:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,198:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,214:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,230:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,242:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,250:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,254:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,274:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:37,302:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 09:52:46,330:INFO:Calculating mean and std
2023-07-02 09:52:46,334:INFO:Creating metrics dataframe
2023-07-02 09:52:47,585:INFO:Uploading results into container
2023-07-02 09:52:47,585:INFO:Uploading model into container now
2023-07-02 09:52:47,585:INFO:_master_model_container: 22
2023-07-02 09:52:47,585:INFO:_display_container: 6
2023-07-02 09:52:47,585:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4091, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 09:52:47,585:INFO:create_model() successfully completed......................................
2023-07-02 09:52:47,717:INFO:SubProcess create_model() end ==================================
2023-07-02 09:52:47,717:INFO:Creating metrics dataframe
2023-07-02 09:52:47,729:INFO:Initializing Ridge Classifier
2023-07-02 09:52:47,729:INFO:Total runtime is 0.9393924673398335 minutes
2023-07-02 09:52:47,737:INFO:SubProcess create_model() called ==================================
2023-07-02 09:52:47,737:INFO:Initializing create_model()
2023-07-02 09:52:47,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:52:47,737:INFO:Checking exceptions
2023-07-02 09:52:47,737:INFO:Importing libraries
2023-07-02 09:52:47,737:INFO:Copying training dataset
2023-07-02 09:52:47,745:INFO:Defining folds
2023-07-02 09:52:47,749:INFO:Declaring metric variables
2023-07-02 09:52:47,757:INFO:Importing untrained model
2023-07-02 09:52:47,765:INFO:Ridge Classifier Imported successfully
2023-07-02 09:52:47,781:INFO:Starting cross validation
2023-07-02 09:52:47,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:52:47,937:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:47,949:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:47,957:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:47,957:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:47,965:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:47,977:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:47,981:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:48,005:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:48,013:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:48,041:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 09:52:56,840:INFO:Calculating mean and std
2023-07-02 09:52:56,844:INFO:Creating metrics dataframe
2023-07-02 09:52:58,189:INFO:Uploading results into container
2023-07-02 09:52:58,189:INFO:Uploading model into container now
2023-07-02 09:52:58,189:INFO:_master_model_container: 23
2023-07-02 09:52:58,189:INFO:_display_container: 6
2023-07-02 09:52:58,193:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001)
2023-07-02 09:52:58,193:INFO:create_model() successfully completed......................................
2023-07-02 09:52:58,334:INFO:SubProcess create_model() end ==================================
2023-07-02 09:52:58,334:INFO:Creating metrics dataframe
2023-07-02 09:52:58,346:INFO:Initializing Random Forest Classifier
2023-07-02 09:52:58,346:INFO:Total runtime is 1.1163370847702025 minutes
2023-07-02 09:52:58,350:INFO:SubProcess create_model() called ==================================
2023-07-02 09:52:58,350:INFO:Initializing create_model()
2023-07-02 09:52:58,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:52:58,350:INFO:Checking exceptions
2023-07-02 09:52:58,350:INFO:Importing libraries
2023-07-02 09:52:58,350:INFO:Copying training dataset
2023-07-02 09:52:58,358:INFO:Defining folds
2023-07-02 09:52:58,358:INFO:Declaring metric variables
2023-07-02 09:52:58,362:INFO:Importing untrained model
2023-07-02 09:52:58,370:INFO:Random Forest Classifier Imported successfully
2023-07-02 09:52:58,386:INFO:Starting cross validation
2023-07-02 09:52:58,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:53:07,661:INFO:Calculating mean and std
2023-07-02 09:53:07,665:INFO:Creating metrics dataframe
2023-07-02 09:53:08,983:INFO:Uploading results into container
2023-07-02 09:53:08,987:INFO:Uploading model into container now
2023-07-02 09:53:08,987:INFO:_master_model_container: 24
2023-07-02 09:53:08,987:INFO:_display_container: 6
2023-07-02 09:53:08,987:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4091, verbose=0, warm_start=False)
2023-07-02 09:53:08,987:INFO:create_model() successfully completed......................................
2023-07-02 09:53:09,125:INFO:SubProcess create_model() end ==================================
2023-07-02 09:53:09,125:INFO:Creating metrics dataframe
2023-07-02 09:53:09,137:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 09:53:09,137:INFO:Total runtime is 1.29619034131368 minutes
2023-07-02 09:53:09,141:INFO:SubProcess create_model() called ==================================
2023-07-02 09:53:09,145:INFO:Initializing create_model()
2023-07-02 09:53:09,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:53:09,145:INFO:Checking exceptions
2023-07-02 09:53:09,145:INFO:Importing libraries
2023-07-02 09:53:09,145:INFO:Copying training dataset
2023-07-02 09:53:09,149:INFO:Defining folds
2023-07-02 09:53:09,149:INFO:Declaring metric variables
2023-07-02 09:53:09,153:INFO:Importing untrained model
2023-07-02 09:53:09,161:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 09:53:09,169:INFO:Starting cross validation
2023-07-02 09:53:09,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:53:18,247:INFO:Calculating mean and std
2023-07-02 09:53:18,247:INFO:Creating metrics dataframe
2023-07-02 09:53:19,532:INFO:Uploading results into container
2023-07-02 09:53:19,533:INFO:Uploading model into container now
2023-07-02 09:53:19,533:INFO:_master_model_container: 25
2023-07-02 09:53:19,533:INFO:_display_container: 6
2023-07-02 09:53:19,533:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 09:53:19,533:INFO:create_model() successfully completed......................................
2023-07-02 09:53:19,678:INFO:SubProcess create_model() end ==================================
2023-07-02 09:53:19,678:INFO:Creating metrics dataframe
2023-07-02 09:53:19,694:INFO:Initializing Ada Boost Classifier
2023-07-02 09:53:19,694:INFO:Total runtime is 1.4721521059672038 minutes
2023-07-02 09:53:19,702:INFO:SubProcess create_model() called ==================================
2023-07-02 09:53:19,702:INFO:Initializing create_model()
2023-07-02 09:53:19,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:53:19,702:INFO:Checking exceptions
2023-07-02 09:53:19,702:INFO:Importing libraries
2023-07-02 09:53:19,702:INFO:Copying training dataset
2023-07-02 09:53:19,710:INFO:Defining folds
2023-07-02 09:53:19,710:INFO:Declaring metric variables
2023-07-02 09:53:19,714:INFO:Importing untrained model
2023-07-02 09:53:19,722:INFO:Ada Boost Classifier Imported successfully
2023-07-02 09:53:19,732:INFO:Starting cross validation
2023-07-02 09:53:19,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:53:28,615:INFO:Calculating mean and std
2023-07-02 09:53:28,619:INFO:Creating metrics dataframe
2023-07-02 09:53:30,115:INFO:Uploading results into container
2023-07-02 09:53:30,115:INFO:Uploading model into container now
2023-07-02 09:53:30,115:INFO:_master_model_container: 26
2023-07-02 09:53:30,115:INFO:_display_container: 6
2023-07-02 09:53:30,115:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4091)
2023-07-02 09:53:30,115:INFO:create_model() successfully completed......................................
2023-07-02 09:53:30,275:INFO:SubProcess create_model() end ==================================
2023-07-02 09:53:30,275:INFO:Creating metrics dataframe
2023-07-02 09:53:30,295:INFO:Initializing Gradient Boosting Classifier
2023-07-02 09:53:30,295:INFO:Total runtime is 1.6488316416740418 minutes
2023-07-02 09:53:30,303:INFO:SubProcess create_model() called ==================================
2023-07-02 09:53:30,303:INFO:Initializing create_model()
2023-07-02 09:53:30,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:53:30,303:INFO:Checking exceptions
2023-07-02 09:53:30,303:INFO:Importing libraries
2023-07-02 09:53:30,303:INFO:Copying training dataset
2023-07-02 09:53:30,315:INFO:Defining folds
2023-07-02 09:53:30,315:INFO:Declaring metric variables
2023-07-02 09:53:30,323:INFO:Importing untrained model
2023-07-02 09:53:30,333:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 09:53:30,349:INFO:Starting cross validation
2023-07-02 09:53:30,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:53:38,809:INFO:Calculating mean and std
2023-07-02 09:53:38,813:INFO:Creating metrics dataframe
2023-07-02 09:53:40,129:INFO:Uploading results into container
2023-07-02 09:53:40,129:INFO:Uploading model into container now
2023-07-02 09:53:40,129:INFO:_master_model_container: 27
2023-07-02 09:53:40,129:INFO:_display_container: 6
2023-07-02 09:53:40,129:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4091, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 09:53:40,129:INFO:create_model() successfully completed......................................
2023-07-02 09:53:40,262:INFO:SubProcess create_model() end ==================================
2023-07-02 09:53:40,262:INFO:Creating metrics dataframe
2023-07-02 09:53:40,282:INFO:Initializing Linear Discriminant Analysis
2023-07-02 09:53:40,282:INFO:Total runtime is 1.8152699510256451 minutes
2023-07-02 09:53:40,290:INFO:SubProcess create_model() called ==================================
2023-07-02 09:53:40,290:INFO:Initializing create_model()
2023-07-02 09:53:40,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:53:40,290:INFO:Checking exceptions
2023-07-02 09:53:40,290:INFO:Importing libraries
2023-07-02 09:53:40,290:INFO:Copying training dataset
2023-07-02 09:53:40,298:INFO:Defining folds
2023-07-02 09:53:40,302:INFO:Declaring metric variables
2023-07-02 09:53:40,310:INFO:Importing untrained model
2023-07-02 09:53:40,318:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 09:53:40,330:INFO:Starting cross validation
2023-07-02 09:53:40,334:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:53:49,140:INFO:Calculating mean and std
2023-07-02 09:53:49,140:INFO:Creating metrics dataframe
2023-07-02 09:53:50,418:INFO:Uploading results into container
2023-07-02 09:53:50,418:INFO:Uploading model into container now
2023-07-02 09:53:50,422:INFO:_master_model_container: 28
2023-07-02 09:53:50,422:INFO:_display_container: 6
2023-07-02 09:53:50,422:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 09:53:50,422:INFO:create_model() successfully completed......................................
2023-07-02 09:53:50,554:INFO:SubProcess create_model() end ==================================
2023-07-02 09:53:50,554:INFO:Creating metrics dataframe
2023-07-02 09:53:50,570:INFO:Initializing Extra Trees Classifier
2023-07-02 09:53:50,570:INFO:Total runtime is 1.9867452104886376 minutes
2023-07-02 09:53:50,574:INFO:SubProcess create_model() called ==================================
2023-07-02 09:53:50,574:INFO:Initializing create_model()
2023-07-02 09:53:50,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:53:50,574:INFO:Checking exceptions
2023-07-02 09:53:50,574:INFO:Importing libraries
2023-07-02 09:53:50,574:INFO:Copying training dataset
2023-07-02 09:53:50,578:INFO:Defining folds
2023-07-02 09:53:50,578:INFO:Declaring metric variables
2023-07-02 09:53:50,586:INFO:Importing untrained model
2023-07-02 09:53:50,590:INFO:Extra Trees Classifier Imported successfully
2023-07-02 09:53:50,602:INFO:Starting cross validation
2023-07-02 09:53:50,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:53:59,623:INFO:Calculating mean and std
2023-07-02 09:53:59,623:INFO:Creating metrics dataframe
2023-07-02 09:54:01,024:INFO:Uploading results into container
2023-07-02 09:54:01,024:INFO:Uploading model into container now
2023-07-02 09:54:01,024:INFO:_master_model_container: 29
2023-07-02 09:54:01,024:INFO:_display_container: 6
2023-07-02 09:54:01,028:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4091, verbose=0, warm_start=False)
2023-07-02 09:54:01,028:INFO:create_model() successfully completed......................................
2023-07-02 09:54:01,169:INFO:SubProcess create_model() end ==================================
2023-07-02 09:54:01,169:INFO:Creating metrics dataframe
2023-07-02 09:54:01,185:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 09:54:01,185:INFO:Total runtime is 2.163653870423635 minutes
2023-07-02 09:54:01,193:INFO:SubProcess create_model() called ==================================
2023-07-02 09:54:01,193:INFO:Initializing create_model()
2023-07-02 09:54:01,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:54:01,193:INFO:Checking exceptions
2023-07-02 09:54:01,193:INFO:Importing libraries
2023-07-02 09:54:01,193:INFO:Copying training dataset
2023-07-02 09:54:01,201:INFO:Defining folds
2023-07-02 09:54:01,201:INFO:Declaring metric variables
2023-07-02 09:54:01,205:INFO:Importing untrained model
2023-07-02 09:54:01,213:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 09:54:01,225:INFO:Starting cross validation
2023-07-02 09:54:01,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:54:10,529:INFO:Calculating mean and std
2023-07-02 09:54:10,533:INFO:Creating metrics dataframe
2023-07-02 09:54:11,973:INFO:Uploading results into container
2023-07-02 09:54:11,973:INFO:Uploading model into container now
2023-07-02 09:54:11,973:INFO:_master_model_container: 30
2023-07-02 09:54:11,973:INFO:_display_container: 6
2023-07-02 09:54:11,977:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4091, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 09:54:11,977:INFO:create_model() successfully completed......................................
2023-07-02 09:54:12,133:INFO:SubProcess create_model() end ==================================
2023-07-02 09:54:12,133:INFO:Creating metrics dataframe
2023-07-02 09:54:12,149:INFO:Initializing Dummy Classifier
2023-07-02 09:54:12,153:INFO:Total runtime is 2.346459984779358 minutes
2023-07-02 09:54:12,157:INFO:SubProcess create_model() called ==================================
2023-07-02 09:54:12,157:INFO:Initializing create_model()
2023-07-02 09:54:12,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239695E2A00>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:54:12,157:INFO:Checking exceptions
2023-07-02 09:54:12,157:INFO:Importing libraries
2023-07-02 09:54:12,161:INFO:Copying training dataset
2023-07-02 09:54:12,169:INFO:Defining folds
2023-07-02 09:54:12,169:INFO:Declaring metric variables
2023-07-02 09:54:12,177:INFO:Importing untrained model
2023-07-02 09:54:12,185:INFO:Dummy Classifier Imported successfully
2023-07-02 09:54:12,197:INFO:Starting cross validation
2023-07-02 09:54:12,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 09:54:12,384:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,399:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,399:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,411:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,415:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,439:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,443:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,451:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,459:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:12,491:WARNING:c:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 09:54:21,738:INFO:Calculating mean and std
2023-07-02 09:54:21,742:INFO:Creating metrics dataframe
2023-07-02 09:54:23,146:INFO:Uploading results into container
2023-07-02 09:54:23,146:INFO:Uploading model into container now
2023-07-02 09:54:23,146:INFO:_master_model_container: 31
2023-07-02 09:54:23,146:INFO:_display_container: 6
2023-07-02 09:54:23,146:INFO:DummyClassifier(constant=None, random_state=4091, strategy='prior')
2023-07-02 09:54:23,146:INFO:create_model() successfully completed......................................
2023-07-02 09:54:23,278:INFO:SubProcess create_model() end ==================================
2023-07-02 09:54:23,278:INFO:Creating metrics dataframe
2023-07-02 09:54:23,322:INFO:Initializing create_model()
2023-07-02 09:54:23,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023966FF3A90>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 09:54:23,322:INFO:Checking exceptions
2023-07-02 09:54:23,326:INFO:Importing libraries
2023-07-02 09:54:23,326:INFO:Copying training dataset
2023-07-02 09:54:23,334:INFO:Defining folds
2023-07-02 09:54:23,334:INFO:Declaring metric variables
2023-07-02 09:54:23,334:INFO:Importing untrained model
2023-07-02 09:54:23,334:INFO:Declaring custom model
2023-07-02 09:54:23,334:INFO:Ridge Classifier Imported successfully
2023-07-02 09:54:23,338:INFO:Cross validation set to False
2023-07-02 09:54:23,338:INFO:Fitting Model
2023-07-02 09:54:24,176:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001)
2023-07-02 09:54:24,176:INFO:create_model() successfully completed......................................
2023-07-02 09:54:24,353:INFO:_master_model_container: 31
2023-07-02 09:54:24,353:INFO:_display_container: 6
2023-07-02 09:54:24,353:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4091, solver='auto', tol=0.001)
2023-07-02 09:54:24,353:INFO:compare_models() successfully completed......................................
2023-07-02 10:08:06,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 10:08:06,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 10:08:06,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 10:08:06,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 10:08:07,738:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-07-02 10:08:11,334:INFO:PyCaret ClassificationExperiment
2023-07-02 10:08:11,334:INFO:Logging name: clf-default-name
2023-07-02 10:08:11,334:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 10:08:11,334:INFO:version 3.0.0
2023-07-02 10:08:11,334:INFO:Initializing setup()
2023-07-02 10:08:11,334:INFO:self.USI: 6e33
2023-07-02 10:08:11,334:INFO:self._variable_keys: {'USI', 'fold_generator', 'seed', 'html_param', 'target_param', 'is_multiclass', 'logging_param', 'X', 'n_jobs_param', 'idx', 'pipeline', 'fix_imbalance', '_ml_usecase', '_available_plots', 'exp_name_log', 'exp_id', 'log_plots_param', 'y_test', 'gpu_param', 'X_test', 'X_train', 'y', 'memory', 'y_train', 'data', 'gpu_n_jobs_param', 'fold_shuffle_param', 'fold_groups_param'}
2023-07-02 10:08:11,334:INFO:Checking environment
2023-07-02 10:08:11,334:INFO:python_version: 3.9.13
2023-07-02 10:08:11,334:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 10:08:11,334:INFO:machine: AMD64
2023-07-02 10:08:11,334:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 10:08:11,334:INFO:Memory: svmem(total=16456249344, available=530186240, percent=96.8, used=15926063104, free=530186240)
2023-07-02 10:08:11,334:INFO:Physical Core: 6
2023-07-02 10:08:11,334:INFO:Logical Core: 12
2023-07-02 10:08:11,334:INFO:Checking libraries
2023-07-02 10:08:11,338:INFO:System:
2023-07-02 10:08:11,338:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 10:08:11,338:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 10:08:11,338:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 10:08:11,338:INFO:PyCaret required dependencies:
2023-07-02 10:08:11,338:INFO:                 pip: 22.2.2
2023-07-02 10:08:11,338:INFO:          setuptools: 63.4.1
2023-07-02 10:08:11,338:INFO:             pycaret: 3.0.0
2023-07-02 10:08:11,338:INFO:             IPython: 7.31.1
2023-07-02 10:08:11,338:INFO:          ipywidgets: 7.6.5
2023-07-02 10:08:11,338:INFO:                tqdm: 4.64.1
2023-07-02 10:08:11,338:INFO:               numpy: 1.21.5
2023-07-02 10:08:11,338:INFO:              pandas: 1.4.4
2023-07-02 10:08:11,338:INFO:              jinja2: 3.1.2
2023-07-02 10:08:11,338:INFO:               scipy: 1.9.1
2023-07-02 10:08:11,338:INFO:              joblib: 1.2.0
2023-07-02 10:08:11,338:INFO:             sklearn: 1.0.2
2023-07-02 10:08:11,338:INFO:                pyod: 1.0.9
2023-07-02 10:08:11,338:INFO:            imblearn: 0.10.1
2023-07-02 10:08:11,338:INFO:   category_encoders: 2.6.0
2023-07-02 10:08:11,338:INFO:            lightgbm: 3.3.5
2023-07-02 10:08:11,338:INFO:               numba: 0.55.1
2023-07-02 10:08:11,338:INFO:            requests: 2.28.1
2023-07-02 10:08:11,338:INFO:          matplotlib: 3.5.2
2023-07-02 10:08:11,338:INFO:          scikitplot: 0.3.7
2023-07-02 10:08:11,338:INFO:         yellowbrick: 1.5
2023-07-02 10:08:11,338:INFO:              plotly: 5.9.0
2023-07-02 10:08:11,338:INFO:             kaleido: 0.2.1
2023-07-02 10:08:11,338:INFO:         statsmodels: 0.13.2
2023-07-02 10:08:11,338:INFO:              sktime: 0.16.1
2023-07-02 10:08:11,338:INFO:               tbats: 1.1.2
2023-07-02 10:08:11,338:INFO:            pmdarima: 2.0.3
2023-07-02 10:08:11,338:INFO:              psutil: 5.9.0
2023-07-02 10:08:11,338:INFO:PyCaret optional dependencies:
2023-07-02 10:08:13,056:INFO:                shap: 0.41.0
2023-07-02 10:08:13,056:INFO:           interpret: Not installed
2023-07-02 10:08:13,056:INFO:                umap: Not installed
2023-07-02 10:08:13,056:INFO:    pandas_profiling: Not installed
2023-07-02 10:08:13,056:INFO:  explainerdashboard: Not installed
2023-07-02 10:08:13,056:INFO:             autoviz: Not installed
2023-07-02 10:08:13,056:INFO:           fairlearn: Not installed
2023-07-02 10:08:13,056:INFO:             xgboost: Not installed
2023-07-02 10:08:13,056:INFO:            catboost: Not installed
2023-07-02 10:08:13,056:INFO:              kmodes: Not installed
2023-07-02 10:08:13,056:INFO:             mlxtend: Not installed
2023-07-02 10:08:13,056:INFO:       statsforecast: Not installed
2023-07-02 10:08:13,056:INFO:        tune_sklearn: 0.4.5
2023-07-02 10:08:13,056:INFO:                 ray: 2.3.1
2023-07-02 10:08:13,056:INFO:            hyperopt: Not installed
2023-07-02 10:08:13,056:INFO:              optuna: 3.1.0
2023-07-02 10:08:13,056:INFO:               skopt: Not installed
2023-07-02 10:08:13,056:INFO:              mlflow: 2.2.2
2023-07-02 10:08:13,056:INFO:              gradio: 3.23.0
2023-07-02 10:08:13,056:INFO:             fastapi: 0.95.0
2023-07-02 10:08:13,056:INFO:             uvicorn: 0.21.1
2023-07-02 10:08:13,056:INFO:              m2cgen: Not installed
2023-07-02 10:08:13,056:INFO:           evidently: Not installed
2023-07-02 10:08:13,056:INFO:               fugue: Not installed
2023-07-02 10:08:13,056:INFO:           streamlit: 1.20.0
2023-07-02 10:08:13,056:INFO:             prophet: Not installed
2023-07-02 10:08:13,056:INFO:None
2023-07-02 10:08:13,056:INFO:Set up data.
2023-07-02 10:08:13,060:INFO:Set up train/test split.
2023-07-02 10:08:13,064:INFO:Set up index.
2023-07-02 10:08:13,064:INFO:Set up folding strategy.
2023-07-02 10:08:13,064:INFO:Assigning column types.
2023-07-02 10:08:13,068:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 10:08:13,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 10:08:13,128:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:08:13,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 10:08:13,421:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:08:13,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,481:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 10:08:13,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:08:13,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,726:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:08:13,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,797:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 10:08:13,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:13,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:14,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:14,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:14,090:INFO:Preparing preprocessing pipeline...
2023-07-02 10:08:14,090:INFO:Set up simple imputation.
2023-07-02 10:08:14,090:INFO:Set up feature normalization.
2023-07-02 10:08:14,122:INFO:Finished creating preprocessing pipeline.
2023-07-02 10:08:14,130:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 10:08:14,130:INFO:Creating final display dataframe.
2023-07-02 10:08:14,262:INFO:Setup _display_container:                     Description             Value
0                    Session id              3841
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 7)
4        Transformed data shape          (768, 7)
5   Transformed train set shape          (614, 7)
6    Transformed test set shape          (154, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6e33
2023-07-02 10:08:14,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:14,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:14,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:14,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:08:14,463:INFO:setup() successfully completed in 4.77s...............
2023-07-02 10:08:14,479:INFO:Initializing compare_models()
2023-07-02 10:08:14,479:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 10:08:14,479:INFO:Checking exceptions
2023-07-02 10:08:14,483:INFO:Preparing display monitor
2023-07-02 10:08:14,527:INFO:Initializing Logistic Regression
2023-07-02 10:08:14,531:INFO:Total runtime is 6.673733393351237e-05 minutes
2023-07-02 10:08:14,535:INFO:SubProcess create_model() called ==================================
2023-07-02 10:08:14,539:INFO:Initializing create_model()
2023-07-02 10:08:14,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:08:14,539:INFO:Checking exceptions
2023-07-02 10:08:14,539:INFO:Importing libraries
2023-07-02 10:08:14,539:INFO:Copying training dataset
2023-07-02 10:08:14,543:INFO:Defining folds
2023-07-02 10:08:14,543:INFO:Declaring metric variables
2023-07-02 10:08:14,551:INFO:Importing untrained model
2023-07-02 10:08:14,559:INFO:Logistic Regression Imported successfully
2023-07-02 10:08:14,567:INFO:Starting cross validation
2023-07-02 10:08:14,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:08:33,584:INFO:Calculating mean and std
2023-07-02 10:08:33,588:INFO:Creating metrics dataframe
2023-07-02 10:08:34,811:INFO:Uploading results into container
2023-07-02 10:08:34,811:INFO:Uploading model into container now
2023-07-02 10:08:34,816:INFO:_master_model_container: 1
2023-07-02 10:08:34,816:INFO:_display_container: 2
2023-07-02 10:08:34,816:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:08:34,816:INFO:create_model() successfully completed......................................
2023-07-02 10:08:34,940:INFO:SubProcess create_model() end ==================================
2023-07-02 10:08:34,940:INFO:Creating metrics dataframe
2023-07-02 10:08:34,952:INFO:Initializing K Neighbors Classifier
2023-07-02 10:08:34,952:INFO:Total runtime is 0.34042297601699834 minutes
2023-07-02 10:08:34,956:INFO:SubProcess create_model() called ==================================
2023-07-02 10:08:34,956:INFO:Initializing create_model()
2023-07-02 10:08:34,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:08:34,956:INFO:Checking exceptions
2023-07-02 10:08:34,956:INFO:Importing libraries
2023-07-02 10:08:34,956:INFO:Copying training dataset
2023-07-02 10:08:34,965:INFO:Defining folds
2023-07-02 10:08:34,965:INFO:Declaring metric variables
2023-07-02 10:08:34,969:INFO:Importing untrained model
2023-07-02 10:08:34,976:INFO:K Neighbors Classifier Imported successfully
2023-07-02 10:08:34,984:INFO:Starting cross validation
2023-07-02 10:08:34,984:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:08:35,172:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:35,172:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:35,172:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:35,180:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:35,184:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:35,184:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:35,212:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:35,224:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:39,932:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:39,940:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:08:44,126:INFO:Calculating mean and std
2023-07-02 10:08:44,126:INFO:Creating metrics dataframe
2023-07-02 10:08:45,406:INFO:Uploading results into container
2023-07-02 10:08:45,406:INFO:Uploading model into container now
2023-07-02 10:08:45,406:INFO:_master_model_container: 2
2023-07-02 10:08:45,406:INFO:_display_container: 2
2023-07-02 10:08:45,406:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 10:08:45,406:INFO:create_model() successfully completed......................................
2023-07-02 10:08:45,546:INFO:SubProcess create_model() end ==================================
2023-07-02 10:08:45,550:INFO:Creating metrics dataframe
2023-07-02 10:08:45,566:INFO:Initializing Naive Bayes
2023-07-02 10:08:45,566:INFO:Total runtime is 0.5173254172007243 minutes
2023-07-02 10:08:45,570:INFO:SubProcess create_model() called ==================================
2023-07-02 10:08:45,570:INFO:Initializing create_model()
2023-07-02 10:08:45,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:08:45,570:INFO:Checking exceptions
2023-07-02 10:08:45,570:INFO:Importing libraries
2023-07-02 10:08:45,570:INFO:Copying training dataset
2023-07-02 10:08:45,582:INFO:Defining folds
2023-07-02 10:08:45,582:INFO:Declaring metric variables
2023-07-02 10:08:45,586:INFO:Importing untrained model
2023-07-02 10:08:45,594:INFO:Naive Bayes Imported successfully
2023-07-02 10:08:45,606:INFO:Starting cross validation
2023-07-02 10:08:45,606:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:08:53,741:INFO:Calculating mean and std
2023-07-02 10:08:53,745:INFO:Creating metrics dataframe
2023-07-02 10:08:54,980:INFO:Uploading results into container
2023-07-02 10:08:54,980:INFO:Uploading model into container now
2023-07-02 10:08:54,980:INFO:_master_model_container: 3
2023-07-02 10:08:54,980:INFO:_display_container: 2
2023-07-02 10:08:54,980:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 10:08:54,980:INFO:create_model() successfully completed......................................
2023-07-02 10:08:55,112:INFO:SubProcess create_model() end ==================================
2023-07-02 10:08:55,112:INFO:Creating metrics dataframe
2023-07-02 10:08:55,132:INFO:Initializing Decision Tree Classifier
2023-07-02 10:08:55,132:INFO:Total runtime is 0.6767581303914388 minutes
2023-07-02 10:08:55,140:INFO:SubProcess create_model() called ==================================
2023-07-02 10:08:55,140:INFO:Initializing create_model()
2023-07-02 10:08:55,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:08:55,140:INFO:Checking exceptions
2023-07-02 10:08:55,140:INFO:Importing libraries
2023-07-02 10:08:55,140:INFO:Copying training dataset
2023-07-02 10:08:55,152:INFO:Defining folds
2023-07-02 10:08:55,152:INFO:Declaring metric variables
2023-07-02 10:08:55,156:INFO:Importing untrained model
2023-07-02 10:08:55,164:INFO:Decision Tree Classifier Imported successfully
2023-07-02 10:08:55,176:INFO:Starting cross validation
2023-07-02 10:08:55,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:09:03,745:INFO:Calculating mean and std
2023-07-02 10:09:03,749:INFO:Creating metrics dataframe
2023-07-02 10:09:05,103:INFO:Uploading results into container
2023-07-02 10:09:05,104:INFO:Uploading model into container now
2023-07-02 10:09:05,105:INFO:_master_model_container: 4
2023-07-02 10:09:05,105:INFO:_display_container: 2
2023-07-02 10:09:05,105:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3841, splitter='best')
2023-07-02 10:09:05,105:INFO:create_model() successfully completed......................................
2023-07-02 10:09:05,224:INFO:SubProcess create_model() end ==================================
2023-07-02 10:09:05,224:INFO:Creating metrics dataframe
2023-07-02 10:09:05,236:INFO:Initializing SVM - Linear Kernel
2023-07-02 10:09:05,236:INFO:Total runtime is 0.845158580938975 minutes
2023-07-02 10:09:05,240:INFO:SubProcess create_model() called ==================================
2023-07-02 10:09:05,244:INFO:Initializing create_model()
2023-07-02 10:09:05,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:09:05,244:INFO:Checking exceptions
2023-07-02 10:09:05,244:INFO:Importing libraries
2023-07-02 10:09:05,244:INFO:Copying training dataset
2023-07-02 10:09:05,248:INFO:Defining folds
2023-07-02 10:09:05,248:INFO:Declaring metric variables
2023-07-02 10:09:05,252:INFO:Importing untrained model
2023-07-02 10:09:05,256:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 10:09:05,268:INFO:Starting cross validation
2023-07-02 10:09:05,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:09:05,428:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,448:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,452:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,452:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,456:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,456:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,456:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,456:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,456:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:05,464:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:09:13,654:INFO:Calculating mean and std
2023-07-02 10:09:13,658:INFO:Creating metrics dataframe
2023-07-02 10:09:15,212:INFO:Uploading results into container
2023-07-02 10:09:15,216:INFO:Uploading model into container now
2023-07-02 10:09:15,216:INFO:_master_model_container: 5
2023-07-02 10:09:15,216:INFO:_display_container: 2
2023-07-02 10:09:15,216:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3841, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 10:09:15,216:INFO:create_model() successfully completed......................................
2023-07-02 10:09:15,396:INFO:SubProcess create_model() end ==================================
2023-07-02 10:09:15,396:INFO:Creating metrics dataframe
2023-07-02 10:09:15,412:INFO:Initializing Ridge Classifier
2023-07-02 10:09:15,412:INFO:Total runtime is 1.0147488554318747 minutes
2023-07-02 10:09:15,420:INFO:SubProcess create_model() called ==================================
2023-07-02 10:09:15,420:INFO:Initializing create_model()
2023-07-02 10:09:15,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:09:15,420:INFO:Checking exceptions
2023-07-02 10:09:15,420:INFO:Importing libraries
2023-07-02 10:09:15,420:INFO:Copying training dataset
2023-07-02 10:09:15,432:INFO:Defining folds
2023-07-02 10:09:15,432:INFO:Declaring metric variables
2023-07-02 10:09:15,440:INFO:Importing untrained model
2023-07-02 10:09:15,452:INFO:Ridge Classifier Imported successfully
2023-07-02 10:09:15,468:INFO:Starting cross validation
2023-07-02 10:09:15,468:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:09:15,672:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,672:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,672:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,676:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,688:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,692:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,700:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,716:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,716:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:15,720:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:09:24,284:INFO:Calculating mean and std
2023-07-02 10:09:24,288:INFO:Creating metrics dataframe
2023-07-02 10:09:25,729:INFO:Uploading results into container
2023-07-02 10:09:25,729:INFO:Uploading model into container now
2023-07-02 10:09:25,729:INFO:_master_model_container: 6
2023-07-02 10:09:25,729:INFO:_display_container: 2
2023-07-02 10:09:25,729:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=3841, solver='auto', tol=0.001)
2023-07-02 10:09:25,733:INFO:create_model() successfully completed......................................
2023-07-02 10:09:25,857:INFO:SubProcess create_model() end ==================================
2023-07-02 10:09:25,857:INFO:Creating metrics dataframe
2023-07-02 10:09:25,877:INFO:Initializing Random Forest Classifier
2023-07-02 10:09:25,877:INFO:Total runtime is 1.1891783833503724 minutes
2023-07-02 10:09:25,889:INFO:SubProcess create_model() called ==================================
2023-07-02 10:09:25,902:INFO:Initializing create_model()
2023-07-02 10:09:25,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:09:25,902:INFO:Checking exceptions
2023-07-02 10:09:25,902:INFO:Importing libraries
2023-07-02 10:09:25,902:INFO:Copying training dataset
2023-07-02 10:09:25,910:INFO:Defining folds
2023-07-02 10:09:25,914:INFO:Declaring metric variables
2023-07-02 10:09:25,922:INFO:Importing untrained model
2023-07-02 10:09:25,930:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:09:25,946:INFO:Starting cross validation
2023-07-02 10:09:25,946:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:09:36,254:INFO:Calculating mean and std
2023-07-02 10:09:36,258:INFO:Creating metrics dataframe
2023-07-02 10:09:37,696:INFO:Uploading results into container
2023-07-02 10:09:37,696:INFO:Uploading model into container now
2023-07-02 10:09:37,696:INFO:_master_model_container: 7
2023-07-02 10:09:37,696:INFO:_display_container: 2
2023-07-02 10:09:37,696:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3841, verbose=0, warm_start=False)
2023-07-02 10:09:37,696:INFO:create_model() successfully completed......................................
2023-07-02 10:09:37,821:INFO:SubProcess create_model() end ==================================
2023-07-02 10:09:37,821:INFO:Creating metrics dataframe
2023-07-02 10:09:37,837:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 10:09:37,841:INFO:Total runtime is 1.3885690927505494 minutes
2023-07-02 10:09:37,845:INFO:SubProcess create_model() called ==================================
2023-07-02 10:09:37,845:INFO:Initializing create_model()
2023-07-02 10:09:37,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:09:37,849:INFO:Checking exceptions
2023-07-02 10:09:37,849:INFO:Importing libraries
2023-07-02 10:09:37,849:INFO:Copying training dataset
2023-07-02 10:09:37,857:INFO:Defining folds
2023-07-02 10:09:37,857:INFO:Declaring metric variables
2023-07-02 10:09:37,861:INFO:Importing untrained model
2023-07-02 10:09:37,869:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 10:09:37,885:INFO:Starting cross validation
2023-07-02 10:09:37,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:09:47,244:INFO:Calculating mean and std
2023-07-02 10:09:47,244:INFO:Creating metrics dataframe
2023-07-02 10:09:48,770:INFO:Uploading results into container
2023-07-02 10:09:48,772:INFO:Uploading model into container now
2023-07-02 10:09:48,772:INFO:_master_model_container: 8
2023-07-02 10:09:48,773:INFO:_display_container: 2
2023-07-02 10:09:48,773:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 10:09:48,773:INFO:create_model() successfully completed......................................
2023-07-02 10:09:48,944:INFO:SubProcess create_model() end ==================================
2023-07-02 10:09:48,944:INFO:Creating metrics dataframe
2023-07-02 10:09:48,958:INFO:Initializing Ada Boost Classifier
2023-07-02 10:09:48,959:INFO:Total runtime is 1.573876969019572 minutes
2023-07-02 10:09:48,964:INFO:SubProcess create_model() called ==================================
2023-07-02 10:09:48,964:INFO:Initializing create_model()
2023-07-02 10:09:48,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:09:48,964:INFO:Checking exceptions
2023-07-02 10:09:48,965:INFO:Importing libraries
2023-07-02 10:09:48,965:INFO:Copying training dataset
2023-07-02 10:09:48,971:INFO:Defining folds
2023-07-02 10:09:48,971:INFO:Declaring metric variables
2023-07-02 10:09:48,975:INFO:Importing untrained model
2023-07-02 10:09:48,981:INFO:Ada Boost Classifier Imported successfully
2023-07-02 10:09:48,993:INFO:Starting cross validation
2023-07-02 10:09:48,993:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:09:58,594:INFO:Calculating mean and std
2023-07-02 10:09:58,598:INFO:Creating metrics dataframe
2023-07-02 10:09:59,996:INFO:Uploading results into container
2023-07-02 10:10:00,000:INFO:Uploading model into container now
2023-07-02 10:10:00,000:INFO:_master_model_container: 9
2023-07-02 10:10:00,000:INFO:_display_container: 2
2023-07-02 10:10:00,000:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3841)
2023-07-02 10:10:00,000:INFO:create_model() successfully completed......................................
2023-07-02 10:10:00,180:INFO:SubProcess create_model() end ==================================
2023-07-02 10:10:00,184:INFO:Creating metrics dataframe
2023-07-02 10:10:00,196:INFO:Initializing Gradient Boosting Classifier
2023-07-02 10:10:00,196:INFO:Total runtime is 1.7611566305160522 minutes
2023-07-02 10:10:00,200:INFO:SubProcess create_model() called ==================================
2023-07-02 10:10:00,204:INFO:Initializing create_model()
2023-07-02 10:10:00,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:10:00,204:INFO:Checking exceptions
2023-07-02 10:10:00,204:INFO:Importing libraries
2023-07-02 10:10:00,204:INFO:Copying training dataset
2023-07-02 10:10:00,208:INFO:Defining folds
2023-07-02 10:10:00,212:INFO:Declaring metric variables
2023-07-02 10:10:00,216:INFO:Importing untrained model
2023-07-02 10:10:00,224:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 10:10:00,232:INFO:Starting cross validation
2023-07-02 10:10:00,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:10:10,602:INFO:Calculating mean and std
2023-07-02 10:10:10,602:INFO:Creating metrics dataframe
2023-07-02 10:10:12,048:INFO:Uploading results into container
2023-07-02 10:10:12,048:INFO:Uploading model into container now
2023-07-02 10:10:12,048:INFO:_master_model_container: 10
2023-07-02 10:10:12,048:INFO:_display_container: 2
2023-07-02 10:10:12,052:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3841, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 10:10:12,052:INFO:create_model() successfully completed......................................
2023-07-02 10:10:12,208:INFO:SubProcess create_model() end ==================================
2023-07-02 10:10:12,208:INFO:Creating metrics dataframe
2023-07-02 10:10:12,229:INFO:Initializing Linear Discriminant Analysis
2023-07-02 10:10:12,229:INFO:Total runtime is 1.9616970181465148 minutes
2023-07-02 10:10:12,233:INFO:SubProcess create_model() called ==================================
2023-07-02 10:10:12,233:INFO:Initializing create_model()
2023-07-02 10:10:12,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:10:12,233:INFO:Checking exceptions
2023-07-02 10:10:12,233:INFO:Importing libraries
2023-07-02 10:10:12,233:INFO:Copying training dataset
2023-07-02 10:10:12,237:INFO:Defining folds
2023-07-02 10:10:12,241:INFO:Declaring metric variables
2023-07-02 10:10:12,245:INFO:Importing untrained model
2023-07-02 10:10:12,249:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 10:10:12,257:INFO:Starting cross validation
2023-07-02 10:10:12,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:10:21,982:INFO:Calculating mean and std
2023-07-02 10:10:21,985:INFO:Creating metrics dataframe
2023-07-02 10:10:23,384:INFO:Uploading results into container
2023-07-02 10:10:23,384:INFO:Uploading model into container now
2023-07-02 10:10:23,384:INFO:_master_model_container: 11
2023-07-02 10:10:23,384:INFO:_display_container: 2
2023-07-02 10:10:23,384:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 10:10:23,384:INFO:create_model() successfully completed......................................
2023-07-02 10:10:23,529:INFO:SubProcess create_model() end ==================================
2023-07-02 10:10:23,529:INFO:Creating metrics dataframe
2023-07-02 10:10:23,549:INFO:Initializing Extra Trees Classifier
2023-07-02 10:10:23,549:INFO:Total runtime is 2.1503780643145243 minutes
2023-07-02 10:10:23,557:INFO:SubProcess create_model() called ==================================
2023-07-02 10:10:23,557:INFO:Initializing create_model()
2023-07-02 10:10:23,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:10:23,557:INFO:Checking exceptions
2023-07-02 10:10:23,557:INFO:Importing libraries
2023-07-02 10:10:23,557:INFO:Copying training dataset
2023-07-02 10:10:23,565:INFO:Defining folds
2023-07-02 10:10:23,565:INFO:Declaring metric variables
2023-07-02 10:10:23,569:INFO:Importing untrained model
2023-07-02 10:10:23,577:INFO:Extra Trees Classifier Imported successfully
2023-07-02 10:10:23,589:INFO:Starting cross validation
2023-07-02 10:10:23,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:10:36,224:INFO:Calculating mean and std
2023-07-02 10:10:36,224:INFO:Creating metrics dataframe
2023-07-02 10:10:38,020:INFO:Uploading results into container
2023-07-02 10:10:38,020:INFO:Uploading model into container now
2023-07-02 10:10:38,020:INFO:_master_model_container: 12
2023-07-02 10:10:38,020:INFO:_display_container: 2
2023-07-02 10:10:38,020:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3841, verbose=0, warm_start=False)
2023-07-02 10:10:38,020:INFO:create_model() successfully completed......................................
2023-07-02 10:10:38,163:INFO:SubProcess create_model() end ==================================
2023-07-02 10:10:38,163:INFO:Creating metrics dataframe
2023-07-02 10:10:38,183:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 10:10:38,183:INFO:Total runtime is 2.394279150168101 minutes
2023-07-02 10:10:38,187:INFO:SubProcess create_model() called ==================================
2023-07-02 10:10:38,187:INFO:Initializing create_model()
2023-07-02 10:10:38,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:10:38,187:INFO:Checking exceptions
2023-07-02 10:10:38,187:INFO:Importing libraries
2023-07-02 10:10:38,187:INFO:Copying training dataset
2023-07-02 10:10:38,195:INFO:Defining folds
2023-07-02 10:10:38,195:INFO:Declaring metric variables
2023-07-02 10:10:38,199:INFO:Importing untrained model
2023-07-02 10:10:38,203:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 10:10:38,215:INFO:Starting cross validation
2023-07-02 10:10:38,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:10:50,661:INFO:Calculating mean and std
2023-07-02 10:10:50,665:INFO:Creating metrics dataframe
2023-07-02 10:10:52,167:INFO:Uploading results into container
2023-07-02 10:10:52,171:INFO:Uploading model into container now
2023-07-02 10:10:52,171:INFO:_master_model_container: 13
2023-07-02 10:10:52,171:INFO:_display_container: 2
2023-07-02 10:10:52,171:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3841, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 10:10:52,171:INFO:create_model() successfully completed......................................
2023-07-02 10:10:52,343:INFO:SubProcess create_model() end ==================================
2023-07-02 10:10:52,343:INFO:Creating metrics dataframe
2023-07-02 10:10:52,355:INFO:Initializing Dummy Classifier
2023-07-02 10:10:52,355:INFO:Total runtime is 2.630470152695974 minutes
2023-07-02 10:10:52,363:INFO:SubProcess create_model() called ==================================
2023-07-02 10:10:52,363:INFO:Initializing create_model()
2023-07-02 10:10:52,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14F8610>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:10:52,363:INFO:Checking exceptions
2023-07-02 10:10:52,363:INFO:Importing libraries
2023-07-02 10:10:52,363:INFO:Copying training dataset
2023-07-02 10:10:52,371:INFO:Defining folds
2023-07-02 10:10:52,371:INFO:Declaring metric variables
2023-07-02 10:10:52,375:INFO:Importing untrained model
2023-07-02 10:10:52,379:INFO:Dummy Classifier Imported successfully
2023-07-02 10:10:52,387:INFO:Starting cross validation
2023-07-02 10:10:52,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:10:52,520:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,520:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,544:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,552:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,556:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,564:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,576:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,576:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:10:52,588:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:11:01,606:INFO:Calculating mean and std
2023-07-02 10:11:01,606:INFO:Creating metrics dataframe
2023-07-02 10:11:03,042:INFO:Uploading results into container
2023-07-02 10:11:03,046:INFO:Uploading model into container now
2023-07-02 10:11:03,046:INFO:_master_model_container: 14
2023-07-02 10:11:03,046:INFO:_display_container: 2
2023-07-02 10:11:03,046:INFO:DummyClassifier(constant=None, random_state=3841, strategy='prior')
2023-07-02 10:11:03,046:INFO:create_model() successfully completed......................................
2023-07-02 10:11:03,203:INFO:SubProcess create_model() end ==================================
2023-07-02 10:11:03,203:INFO:Creating metrics dataframe
2023-07-02 10:11:03,235:INFO:Initializing create_model()
2023-07-02 10:11:03,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:11:03,239:INFO:Checking exceptions
2023-07-02 10:11:03,239:INFO:Importing libraries
2023-07-02 10:11:03,239:INFO:Copying training dataset
2023-07-02 10:11:03,247:INFO:Defining folds
2023-07-02 10:11:03,247:INFO:Declaring metric variables
2023-07-02 10:11:03,247:INFO:Importing untrained model
2023-07-02 10:11:03,247:INFO:Declaring custom model
2023-07-02 10:11:03,247:INFO:Logistic Regression Imported successfully
2023-07-02 10:11:03,247:INFO:Cross validation set to False
2023-07-02 10:11:03,251:INFO:Fitting Model
2023-07-02 10:11:04,231:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:11:04,231:INFO:create_model() successfully completed......................................
2023-07-02 10:11:04,443:INFO:_master_model_container: 14
2023-07-02 10:11:04,443:INFO:_display_container: 2
2023-07-02 10:11:04,443:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:11:04,443:INFO:compare_models() successfully completed......................................
2023-07-02 10:11:04,463:INFO:Initializing create_model()
2023-07-02 10:11:04,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:11:04,463:INFO:Checking exceptions
2023-07-02 10:11:04,515:INFO:Importing libraries
2023-07-02 10:11:04,515:INFO:Copying training dataset
2023-07-02 10:11:04,523:INFO:Defining folds
2023-07-02 10:11:04,523:INFO:Declaring metric variables
2023-07-02 10:11:04,531:INFO:Importing untrained model
2023-07-02 10:11:04,539:INFO:Logistic Regression Imported successfully
2023-07-02 10:11:04,551:INFO:Starting cross validation
2023-07-02 10:11:04,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:11:14,508:INFO:Calculating mean and std
2023-07-02 10:11:14,512:INFO:Creating metrics dataframe
2023-07-02 10:11:14,520:INFO:Finalizing model
2023-07-02 10:11:16,138:INFO:Uploading results into container
2023-07-02 10:11:16,138:INFO:Uploading model into container now
2023-07-02 10:11:16,150:INFO:_master_model_container: 15
2023-07-02 10:11:16,150:INFO:_display_container: 3
2023-07-02 10:11:16,150:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:11:16,150:INFO:create_model() successfully completed......................................
2023-07-02 10:11:16,342:INFO:Initializing tune_model()
2023-07-02 10:11:16,342:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>)
2023-07-02 10:11:16,342:INFO:Checking exceptions
2023-07-02 10:11:16,382:INFO:Copying training dataset
2023-07-02 10:11:16,388:INFO:Checking base model
2023-07-02 10:11:16,388:INFO:Base model : Logistic Regression
2023-07-02 10:11:16,398:INFO:Declaring metric variables
2023-07-02 10:11:16,402:INFO:Defining Hyperparameters
2023-07-02 10:11:16,538:INFO:Tuning with n_jobs=-1
2023-07-02 10:11:16,538:INFO:Initializing RandomizedSearchCV
2023-07-02 10:13:03,381:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 8.9}
2023-07-02 10:13:03,381:INFO:Hyperparameter search completed
2023-07-02 10:13:03,381:INFO:SubProcess create_model() called ==================================
2023-07-02 10:13:03,385:INFO:Initializing create_model()
2023-07-02 10:13:03,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF4C97C0>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 8.9})
2023-07-02 10:13:03,385:INFO:Checking exceptions
2023-07-02 10:13:03,385:INFO:Importing libraries
2023-07-02 10:13:03,385:INFO:Copying training dataset
2023-07-02 10:13:03,389:INFO:Defining folds
2023-07-02 10:13:03,389:INFO:Declaring metric variables
2023-07-02 10:13:03,394:INFO:Importing untrained model
2023-07-02 10:13:03,394:INFO:Declaring custom model
2023-07-02 10:13:03,397:INFO:Logistic Regression Imported successfully
2023-07-02 10:13:03,410:INFO:Starting cross validation
2023-07-02 10:13:03,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:13:11,142:INFO:Calculating mean and std
2023-07-02 10:13:11,142:INFO:Creating metrics dataframe
2023-07-02 10:13:11,150:INFO:Finalizing model
2023-07-02 10:13:12,543:INFO:Uploading results into container
2023-07-02 10:13:12,547:INFO:Uploading model into container now
2023-07-02 10:13:12,547:INFO:_master_model_container: 16
2023-07-02 10:13:12,547:INFO:_display_container: 4
2023-07-02 10:13:12,547:INFO:LogisticRegression(C=8.9, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:13:12,547:INFO:create_model() successfully completed......................................
2023-07-02 10:13:12,679:INFO:SubProcess create_model() end ==================================
2023-07-02 10:13:12,679:INFO:choose_better activated
2023-07-02 10:13:12,683:INFO:SubProcess create_model() called ==================================
2023-07-02 10:13:12,683:INFO:Initializing create_model()
2023-07-02 10:13:12,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:13:12,687:INFO:Checking exceptions
2023-07-02 10:13:12,687:INFO:Importing libraries
2023-07-02 10:13:12,687:INFO:Copying training dataset
2023-07-02 10:13:12,691:INFO:Defining folds
2023-07-02 10:13:12,691:INFO:Declaring metric variables
2023-07-02 10:13:12,691:INFO:Importing untrained model
2023-07-02 10:13:12,691:INFO:Declaring custom model
2023-07-02 10:13:12,695:INFO:Logistic Regression Imported successfully
2023-07-02 10:13:12,695:INFO:Starting cross validation
2023-07-02 10:13:12,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:13:20,509:INFO:Calculating mean and std
2023-07-02 10:13:20,509:INFO:Creating metrics dataframe
2023-07-02 10:13:20,513:INFO:Finalizing model
2023-07-02 10:13:21,751:INFO:Uploading results into container
2023-07-02 10:13:21,751:INFO:Uploading model into container now
2023-07-02 10:13:21,751:INFO:_master_model_container: 17
2023-07-02 10:13:21,751:INFO:_display_container: 5
2023-07-02 10:13:21,751:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:13:21,751:INFO:create_model() successfully completed......................................
2023-07-02 10:13:21,875:INFO:SubProcess create_model() end ==================================
2023-07-02 10:13:21,879:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.777
2023-07-02 10:13:21,879:INFO:LogisticRegression(C=8.9, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.777
2023-07-02 10:13:21,883:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-07-02 10:13:21,883:INFO:choose_better completed
2023-07-02 10:13:21,883:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-07-02 10:13:21,895:INFO:_master_model_container: 17
2023-07-02 10:13:21,895:INFO:_display_container: 4
2023-07-02 10:13:21,899:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:13:21,899:INFO:tune_model() successfully completed......................................
2023-07-02 10:13:22,821:INFO:Initializing plot_model()
2023-07-02 10:13:22,821:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, system=True)
2023-07-02 10:13:22,821:INFO:Checking exceptions
2023-07-02 10:13:22,825:INFO:Preloading libraries
2023-07-02 10:13:22,825:INFO:Copying training dataset
2023-07-02 10:13:22,825:INFO:Plot type: manifold
2023-07-02 10:13:23,026:INFO:Fitting & Transforming Model
2023-07-02 10:13:23,026:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 10:13:23,098:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 10:13:25,060:INFO:Visual Rendered Successfully
2023-07-02 10:13:25,201:INFO:plot_model() successfully completed......................................
2023-07-02 10:13:25,241:INFO:Initializing plot_model()
2023-07-02 10:13:25,241:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, system=True)
2023-07-02 10:13:25,241:INFO:Checking exceptions
2023-07-02 10:13:25,245:INFO:Preloading libraries
2023-07-02 10:13:25,245:INFO:Copying training dataset
2023-07-02 10:13:25,245:INFO:Plot type: feature
2023-07-02 10:13:25,427:INFO:Visual Rendered Successfully
2023-07-02 10:13:25,559:INFO:plot_model() successfully completed......................................
2023-07-02 10:13:25,575:INFO:Initializing plot_model()
2023-07-02 10:13:25,575:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, system=True)
2023-07-02 10:13:25,575:INFO:Checking exceptions
2023-07-02 10:13:25,583:INFO:Preloading libraries
2023-07-02 10:13:25,583:INFO:Copying training dataset
2023-07-02 10:13:25,583:INFO:Plot type: confusion_matrix
2023-07-02 10:13:25,682:INFO:Fitting Model
2023-07-02 10:13:25,688:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 10:13:25,688:INFO:Scoring test/hold-out set
2023-07-02 10:13:25,811:INFO:Visual Rendered Successfully
2023-07-02 10:13:25,935:INFO:plot_model() successfully completed......................................
2023-07-02 10:13:25,955:INFO:Initializing plot_model()
2023-07-02 10:13:25,955:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, system=True)
2023-07-02 10:13:25,955:INFO:Checking exceptions
2023-07-02 10:13:25,963:INFO:Preloading libraries
2023-07-02 10:13:25,963:INFO:Copying training dataset
2023-07-02 10:13:25,963:INFO:Plot type: auc
2023-07-02 10:13:26,055:INFO:Fitting Model
2023-07-02 10:13:26,055:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 10:13:26,055:INFO:Scoring test/hold-out set
2023-07-02 10:13:26,240:INFO:Visual Rendered Successfully
2023-07-02 10:13:26,364:INFO:plot_model() successfully completed......................................
2023-07-02 10:13:26,376:INFO:Initializing plot_model()
2023-07-02 10:13:26,376:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, system=True)
2023-07-02 10:13:26,376:INFO:Checking exceptions
2023-07-02 10:13:26,384:INFO:Preloading libraries
2023-07-02 10:13:26,384:INFO:Copying training dataset
2023-07-02 10:13:26,384:INFO:Plot type: pr
2023-07-02 10:13:26,468:INFO:Fitting Model
2023-07-02 10:13:26,468:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 10:13:26,468:INFO:Scoring test/hold-out set
2023-07-02 10:13:26,610:INFO:Visual Rendered Successfully
2023-07-02 10:13:26,748:INFO:plot_model() successfully completed......................................
2023-07-02 10:13:26,768:INFO:Initializing predict_model()
2023-07-02 10:13:26,768:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001F1BF7F7CA0>)
2023-07-02 10:13:26,772:INFO:Checking exceptions
2023-07-02 10:13:26,772:INFO:Preloading libraries
2023-07-02 10:13:27,030:INFO:Initializing finalize_model()
2023-07-02 10:13:27,030:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 10:13:27,030:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:13:27,034:INFO:Initializing create_model()
2023-07-02 10:13:27,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BCD795E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 10:13:27,034:INFO:Checking exceptions
2023-07-02 10:13:27,038:INFO:Importing libraries
2023-07-02 10:13:27,038:INFO:Copying training dataset
2023-07-02 10:13:27,038:INFO:Defining folds
2023-07-02 10:13:27,038:INFO:Declaring metric variables
2023-07-02 10:13:27,038:INFO:Importing untrained model
2023-07-02 10:13:27,038:INFO:Declaring custom model
2023-07-02 10:13:27,038:INFO:Logistic Regression Imported successfully
2023-07-02 10:13:27,038:INFO:Cross validation set to False
2023-07-02 10:13:27,038:INFO:Fitting Model
2023-07-02 10:13:27,078:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3841,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 10:13:27,078:INFO:create_model() successfully completed......................................
2023-07-02 10:13:27,206:INFO:_master_model_container: 17
2023-07-02 10:13:27,210:INFO:_display_container: 5
2023-07-02 10:13:27,214:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3841,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 10:13:27,214:INFO:finalize_model() successfully completed......................................
2023-07-02 10:13:27,362:INFO:Initializing save_model()
2023-07-02 10:13:27,362:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3841, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=Final_diabetes_model_4Avril2022, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-02 10:13:27,362:INFO:Adding model into prep_pipe
2023-07-02 10:13:27,370:INFO:Final_diabetes_model_4Avril2022.pkl saved in current working directory
2023-07-02 10:13:27,378:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3841,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 10:13:27,378:INFO:save_model() successfully completed......................................
2023-07-02 10:13:28,469:INFO:PyCaret ClassificationExperiment
2023-07-02 10:13:28,469:INFO:Logging name: clf-default-name
2023-07-02 10:13:28,469:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 10:13:28,469:INFO:version 3.0.0
2023-07-02 10:13:28,469:INFO:Initializing setup()
2023-07-02 10:13:28,469:INFO:self.USI: 060b
2023-07-02 10:13:28,469:INFO:self._variable_keys: {'USI', 'fold_generator', 'seed', 'html_param', 'target_param', 'is_multiclass', 'logging_param', 'X', 'n_jobs_param', 'idx', 'pipeline', 'fix_imbalance', '_ml_usecase', '_available_plots', 'exp_name_log', 'exp_id', 'log_plots_param', 'y_test', 'gpu_param', 'X_test', 'X_train', 'y', 'memory', 'y_train', 'data', 'gpu_n_jobs_param', 'fold_shuffle_param', 'fold_groups_param'}
2023-07-02 10:13:28,469:INFO:Checking environment
2023-07-02 10:13:28,469:INFO:python_version: 3.9.13
2023-07-02 10:13:28,469:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 10:13:28,469:INFO:machine: AMD64
2023-07-02 10:13:28,469:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 10:13:28,469:INFO:Memory: svmem(total=16456249344, available=3749941248, percent=77.2, used=12706308096, free=3749941248)
2023-07-02 10:13:28,469:INFO:Physical Core: 6
2023-07-02 10:13:28,469:INFO:Logical Core: 12
2023-07-02 10:13:28,469:INFO:Checking libraries
2023-07-02 10:13:28,469:INFO:System:
2023-07-02 10:13:28,469:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 10:13:28,469:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 10:13:28,469:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 10:13:28,469:INFO:PyCaret required dependencies:
2023-07-02 10:13:28,469:INFO:                 pip: 22.2.2
2023-07-02 10:13:28,469:INFO:          setuptools: 63.4.1
2023-07-02 10:13:28,469:INFO:             pycaret: 3.0.0
2023-07-02 10:13:28,469:INFO:             IPython: 7.31.1
2023-07-02 10:13:28,469:INFO:          ipywidgets: 7.6.5
2023-07-02 10:13:28,469:INFO:                tqdm: 4.64.1
2023-07-02 10:13:28,469:INFO:               numpy: 1.21.5
2023-07-02 10:13:28,469:INFO:              pandas: 1.4.4
2023-07-02 10:13:28,469:INFO:              jinja2: 3.1.2
2023-07-02 10:13:28,469:INFO:               scipy: 1.9.1
2023-07-02 10:13:28,469:INFO:              joblib: 1.2.0
2023-07-02 10:13:28,472:INFO:             sklearn: 1.0.2
2023-07-02 10:13:28,472:INFO:                pyod: 1.0.9
2023-07-02 10:13:28,472:INFO:            imblearn: 0.10.1
2023-07-02 10:13:28,472:INFO:   category_encoders: 2.6.0
2023-07-02 10:13:28,472:INFO:            lightgbm: 3.3.5
2023-07-02 10:13:28,472:INFO:               numba: 0.55.1
2023-07-02 10:13:28,472:INFO:            requests: 2.28.1
2023-07-02 10:13:28,472:INFO:          matplotlib: 3.5.2
2023-07-02 10:13:28,472:INFO:          scikitplot: 0.3.7
2023-07-02 10:13:28,472:INFO:         yellowbrick: 1.5
2023-07-02 10:13:28,472:INFO:              plotly: 5.9.0
2023-07-02 10:13:28,472:INFO:             kaleido: 0.2.1
2023-07-02 10:13:28,472:INFO:         statsmodels: 0.13.2
2023-07-02 10:13:28,472:INFO:              sktime: 0.16.1
2023-07-02 10:13:28,472:INFO:               tbats: 1.1.2
2023-07-02 10:13:28,472:INFO:            pmdarima: 2.0.3
2023-07-02 10:13:28,472:INFO:              psutil: 5.9.0
2023-07-02 10:13:28,472:INFO:PyCaret optional dependencies:
2023-07-02 10:13:28,472:INFO:                shap: 0.41.0
2023-07-02 10:13:28,472:INFO:           interpret: Not installed
2023-07-02 10:13:28,472:INFO:                umap: Not installed
2023-07-02 10:13:28,472:INFO:    pandas_profiling: Not installed
2023-07-02 10:13:28,472:INFO:  explainerdashboard: Not installed
2023-07-02 10:13:28,472:INFO:             autoviz: Not installed
2023-07-02 10:13:28,472:INFO:           fairlearn: Not installed
2023-07-02 10:13:28,472:INFO:             xgboost: Not installed
2023-07-02 10:13:28,472:INFO:            catboost: Not installed
2023-07-02 10:13:28,472:INFO:              kmodes: Not installed
2023-07-02 10:13:28,472:INFO:             mlxtend: Not installed
2023-07-02 10:13:28,472:INFO:       statsforecast: Not installed
2023-07-02 10:13:28,472:INFO:        tune_sklearn: 0.4.5
2023-07-02 10:13:28,472:INFO:                 ray: 2.3.1
2023-07-02 10:13:28,472:INFO:            hyperopt: Not installed
2023-07-02 10:13:28,472:INFO:              optuna: 3.1.0
2023-07-02 10:13:28,472:INFO:               skopt: Not installed
2023-07-02 10:13:28,472:INFO:              mlflow: 2.2.2
2023-07-02 10:13:28,472:INFO:              gradio: 3.23.0
2023-07-02 10:13:28,472:INFO:             fastapi: 0.95.0
2023-07-02 10:13:28,472:INFO:             uvicorn: 0.21.1
2023-07-02 10:13:28,472:INFO:              m2cgen: Not installed
2023-07-02 10:13:28,472:INFO:           evidently: Not installed
2023-07-02 10:13:28,472:INFO:               fugue: Not installed
2023-07-02 10:13:28,472:INFO:           streamlit: 1.20.0
2023-07-02 10:13:28,472:INFO:             prophet: Not installed
2023-07-02 10:13:28,472:INFO:None
2023-07-02 10:13:28,472:INFO:Set up data.
2023-07-02 10:13:28,476:INFO:Set up train/test split.
2023-07-02 10:13:28,480:INFO:Set up index.
2023-07-02 10:13:28,480:INFO:Set up folding strategy.
2023-07-02 10:13:28,480:INFO:Assigning column types.
2023-07-02 10:13:28,484:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 10:13:28,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 10:13:28,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:13:28,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 10:13:28,646:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:13:28,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,695:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 10:13:28,763:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:13:28,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,867:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 10:13:28,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:28,911:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 10:13:29,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,099:INFO:Preparing preprocessing pipeline...
2023-07-02 10:13:29,099:INFO:Set up simple imputation.
2023-07-02 10:13:29,099:INFO:Set up feature normalization.
2023-07-02 10:13:29,127:INFO:Finished creating preprocessing pipeline.
2023-07-02 10:13:29,131:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 10:13:29,135:INFO:Creating final display dataframe.
2023-07-02 10:13:29,240:INFO:Setup _display_container:                     Description             Value
0                    Session id              8402
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 7)
4        Transformed data shape          (768, 7)
5   Transformed train set shape          (614, 7)
6    Transformed test set shape          (154, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              060b
2023-07-02 10:13:29,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 10:13:29,452:INFO:setup() successfully completed in 1.81s...............
2023-07-02 10:13:42,921:INFO:Initializing compare_models()
2023-07-02 10:13:42,921:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 10:13:42,921:INFO:Checking exceptions
2023-07-02 10:13:42,928:INFO:Preparing display monitor
2023-07-02 10:13:42,994:INFO:Initializing Logistic Regression
2023-07-02 10:13:42,994:INFO:Total runtime is 0.0 minutes
2023-07-02 10:13:43,002:INFO:SubProcess create_model() called ==================================
2023-07-02 10:13:43,002:INFO:Initializing create_model()
2023-07-02 10:13:43,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:13:43,002:INFO:Checking exceptions
2023-07-02 10:13:43,002:INFO:Importing libraries
2023-07-02 10:13:43,002:INFO:Copying training dataset
2023-07-02 10:13:43,006:INFO:Defining folds
2023-07-02 10:13:43,006:INFO:Declaring metric variables
2023-07-02 10:13:43,014:INFO:Importing untrained model
2023-07-02 10:13:43,022:INFO:Logistic Regression Imported successfully
2023-07-02 10:13:43,034:INFO:Starting cross validation
2023-07-02 10:13:43,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:13:54,047:INFO:Calculating mean and std
2023-07-02 10:13:54,047:INFO:Creating metrics dataframe
2023-07-02 10:13:55,290:INFO:Uploading results into container
2023-07-02 10:13:55,290:INFO:Uploading model into container now
2023-07-02 10:13:55,290:INFO:_master_model_container: 1
2023-07-02 10:13:55,290:INFO:_display_container: 2
2023-07-02 10:13:55,294:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:13:55,294:INFO:create_model() successfully completed......................................
2023-07-02 10:13:55,422:INFO:SubProcess create_model() end ==================================
2023-07-02 10:13:55,422:INFO:Creating metrics dataframe
2023-07-02 10:13:55,430:INFO:Initializing K Neighbors Classifier
2023-07-02 10:13:55,430:INFO:Total runtime is 0.20727473100026447 minutes
2023-07-02 10:13:55,434:INFO:SubProcess create_model() called ==================================
2023-07-02 10:13:55,434:INFO:Initializing create_model()
2023-07-02 10:13:55,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:13:55,434:INFO:Checking exceptions
2023-07-02 10:13:55,434:INFO:Importing libraries
2023-07-02 10:13:55,434:INFO:Copying training dataset
2023-07-02 10:13:55,442:INFO:Defining folds
2023-07-02 10:13:55,442:INFO:Declaring metric variables
2023-07-02 10:13:55,454:INFO:Importing untrained model
2023-07-02 10:13:55,462:INFO:K Neighbors Classifier Imported successfully
2023-07-02 10:13:55,476:INFO:Starting cross validation
2023-07-02 10:13:55,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:13:55,638:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,642:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,642:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,645:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,654:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,662:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,662:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,666:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,670:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:13:55,674:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:14:03,499:INFO:Calculating mean and std
2023-07-02 10:14:03,499:INFO:Creating metrics dataframe
2023-07-02 10:14:04,666:INFO:Uploading results into container
2023-07-02 10:14:04,670:INFO:Uploading model into container now
2023-07-02 10:14:04,670:INFO:_master_model_container: 2
2023-07-02 10:14:04,670:INFO:_display_container: 2
2023-07-02 10:14:04,670:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 10:14:04,670:INFO:create_model() successfully completed......................................
2023-07-02 10:14:04,800:INFO:SubProcess create_model() end ==================================
2023-07-02 10:14:04,800:INFO:Creating metrics dataframe
2023-07-02 10:14:04,812:INFO:Initializing Naive Bayes
2023-07-02 10:14:04,812:INFO:Total runtime is 0.3636380354563395 minutes
2023-07-02 10:14:04,816:INFO:SubProcess create_model() called ==================================
2023-07-02 10:14:04,818:INFO:Initializing create_model()
2023-07-02 10:14:04,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:14:04,818:INFO:Checking exceptions
2023-07-02 10:14:04,819:INFO:Importing libraries
2023-07-02 10:14:04,819:INFO:Copying training dataset
2023-07-02 10:14:04,823:INFO:Defining folds
2023-07-02 10:14:04,823:INFO:Declaring metric variables
2023-07-02 10:14:04,843:INFO:Importing untrained model
2023-07-02 10:14:04,847:INFO:Naive Bayes Imported successfully
2023-07-02 10:14:04,859:INFO:Starting cross validation
2023-07-02 10:14:04,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:14:12,504:INFO:Calculating mean and std
2023-07-02 10:14:12,504:INFO:Creating metrics dataframe
2023-07-02 10:14:13,814:INFO:Uploading results into container
2023-07-02 10:14:13,814:INFO:Uploading model into container now
2023-07-02 10:14:13,814:INFO:_master_model_container: 3
2023-07-02 10:14:13,814:INFO:_display_container: 2
2023-07-02 10:14:13,818:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 10:14:13,818:INFO:create_model() successfully completed......................................
2023-07-02 10:14:13,978:INFO:SubProcess create_model() end ==================================
2023-07-02 10:14:13,982:INFO:Creating metrics dataframe
2023-07-02 10:14:13,990:INFO:Initializing Decision Tree Classifier
2023-07-02 10:14:13,990:INFO:Total runtime is 0.5165961345036825 minutes
2023-07-02 10:14:13,994:INFO:SubProcess create_model() called ==================================
2023-07-02 10:14:13,998:INFO:Initializing create_model()
2023-07-02 10:14:13,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:14:13,998:INFO:Checking exceptions
2023-07-02 10:14:13,998:INFO:Importing libraries
2023-07-02 10:14:13,998:INFO:Copying training dataset
2023-07-02 10:14:14,002:INFO:Defining folds
2023-07-02 10:14:14,002:INFO:Declaring metric variables
2023-07-02 10:14:14,006:INFO:Importing untrained model
2023-07-02 10:14:14,014:INFO:Decision Tree Classifier Imported successfully
2023-07-02 10:14:14,026:INFO:Starting cross validation
2023-07-02 10:14:14,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:14:23,639:INFO:Calculating mean and std
2023-07-02 10:14:23,643:INFO:Creating metrics dataframe
2023-07-02 10:14:24,825:INFO:Uploading results into container
2023-07-02 10:14:24,825:INFO:Uploading model into container now
2023-07-02 10:14:24,825:INFO:_master_model_container: 4
2023-07-02 10:14:24,825:INFO:_display_container: 2
2023-07-02 10:14:24,829:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8402, splitter='best')
2023-07-02 10:14:24,829:INFO:create_model() successfully completed......................................
2023-07-02 10:14:24,954:INFO:SubProcess create_model() end ==================================
2023-07-02 10:14:24,954:INFO:Creating metrics dataframe
2023-07-02 10:14:24,962:INFO:Initializing SVM - Linear Kernel
2023-07-02 10:14:24,966:INFO:Total runtime is 0.6995298624038696 minutes
2023-07-02 10:14:24,970:INFO:SubProcess create_model() called ==================================
2023-07-02 10:14:24,970:INFO:Initializing create_model()
2023-07-02 10:14:24,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:14:24,970:INFO:Checking exceptions
2023-07-02 10:14:24,970:INFO:Importing libraries
2023-07-02 10:14:24,970:INFO:Copying training dataset
2023-07-02 10:14:24,974:INFO:Defining folds
2023-07-02 10:14:24,974:INFO:Declaring metric variables
2023-07-02 10:14:24,982:INFO:Importing untrained model
2023-07-02 10:14:24,990:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 10:14:25,002:INFO:Starting cross validation
2023-07-02 10:14:25,006:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:14:25,129:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,134:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,138:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,138:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,158:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,162:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,166:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,170:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,182:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:25,194:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:14:33,177:INFO:Calculating mean and std
2023-07-02 10:14:33,177:INFO:Creating metrics dataframe
2023-07-02 10:14:34,475:INFO:Uploading results into container
2023-07-02 10:14:34,479:INFO:Uploading model into container now
2023-07-02 10:14:34,479:INFO:_master_model_container: 5
2023-07-02 10:14:34,479:INFO:_display_container: 2
2023-07-02 10:14:34,479:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8402, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 10:14:34,479:INFO:create_model() successfully completed......................................
2023-07-02 10:14:34,610:INFO:SubProcess create_model() end ==================================
2023-07-02 10:14:34,610:INFO:Creating metrics dataframe
2023-07-02 10:14:34,622:INFO:Initializing Ridge Classifier
2023-07-02 10:14:34,622:INFO:Total runtime is 0.8604756116867065 minutes
2023-07-02 10:14:34,631:INFO:SubProcess create_model() called ==================================
2023-07-02 10:14:34,631:INFO:Initializing create_model()
2023-07-02 10:14:34,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:14:34,631:INFO:Checking exceptions
2023-07-02 10:14:34,631:INFO:Importing libraries
2023-07-02 10:14:34,631:INFO:Copying training dataset
2023-07-02 10:14:34,635:INFO:Defining folds
2023-07-02 10:14:34,635:INFO:Declaring metric variables
2023-07-02 10:14:34,643:INFO:Importing untrained model
2023-07-02 10:14:34,651:INFO:Ridge Classifier Imported successfully
2023-07-02 10:14:34,667:INFO:Starting cross validation
2023-07-02 10:14:34,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:14:34,759:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,783:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,783:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,791:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,803:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,803:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,827:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,835:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,843:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:34,859:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:14:42,310:INFO:Calculating mean and std
2023-07-02 10:14:42,310:INFO:Creating metrics dataframe
2023-07-02 10:14:43,459:INFO:Uploading results into container
2023-07-02 10:14:43,463:INFO:Uploading model into container now
2023-07-02 10:14:43,463:INFO:_master_model_container: 6
2023-07-02 10:14:43,463:INFO:_display_container: 2
2023-07-02 10:14:43,463:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8402, solver='auto', tol=0.001)
2023-07-02 10:14:43,463:INFO:create_model() successfully completed......................................
2023-07-02 10:14:43,585:INFO:SubProcess create_model() end ==================================
2023-07-02 10:14:43,585:INFO:Creating metrics dataframe
2023-07-02 10:14:43,600:INFO:Initializing Random Forest Classifier
2023-07-02 10:14:43,600:INFO:Total runtime is 1.010105295976003 minutes
2023-07-02 10:14:43,604:INFO:SubProcess create_model() called ==================================
2023-07-02 10:14:43,608:INFO:Initializing create_model()
2023-07-02 10:14:43,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:14:43,612:INFO:Checking exceptions
2023-07-02 10:14:43,612:INFO:Importing libraries
2023-07-02 10:14:43,612:INFO:Copying training dataset
2023-07-02 10:14:43,616:INFO:Defining folds
2023-07-02 10:14:43,620:INFO:Declaring metric variables
2023-07-02 10:14:43,624:INFO:Importing untrained model
2023-07-02 10:14:43,632:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:14:43,640:INFO:Starting cross validation
2023-07-02 10:14:43,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:14:52,399:INFO:Calculating mean and std
2023-07-02 10:14:52,399:INFO:Creating metrics dataframe
2023-07-02 10:14:53,712:INFO:Uploading results into container
2023-07-02 10:14:53,716:INFO:Uploading model into container now
2023-07-02 10:14:53,716:INFO:_master_model_container: 7
2023-07-02 10:14:53,716:INFO:_display_container: 2
2023-07-02 10:14:53,716:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:14:53,716:INFO:create_model() successfully completed......................................
2023-07-02 10:14:53,860:INFO:SubProcess create_model() end ==================================
2023-07-02 10:14:53,860:INFO:Creating metrics dataframe
2023-07-02 10:14:53,868:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 10:14:53,868:INFO:Total runtime is 1.1812346657117208 minutes
2023-07-02 10:14:53,872:INFO:SubProcess create_model() called ==================================
2023-07-02 10:14:53,872:INFO:Initializing create_model()
2023-07-02 10:14:53,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:14:53,872:INFO:Checking exceptions
2023-07-02 10:14:53,872:INFO:Importing libraries
2023-07-02 10:14:53,872:INFO:Copying training dataset
2023-07-02 10:14:53,880:INFO:Defining folds
2023-07-02 10:14:53,880:INFO:Declaring metric variables
2023-07-02 10:14:53,888:INFO:Importing untrained model
2023-07-02 10:14:53,892:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 10:14:53,904:INFO:Starting cross validation
2023-07-02 10:14:53,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:15:02,130:INFO:Calculating mean and std
2023-07-02 10:15:02,134:INFO:Creating metrics dataframe
2023-07-02 10:15:03,311:INFO:Uploading results into container
2023-07-02 10:15:03,311:INFO:Uploading model into container now
2023-07-02 10:15:03,315:INFO:_master_model_container: 8
2023-07-02 10:15:03,315:INFO:_display_container: 2
2023-07-02 10:15:03,315:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 10:15:03,315:INFO:create_model() successfully completed......................................
2023-07-02 10:15:03,447:INFO:SubProcess create_model() end ==================================
2023-07-02 10:15:03,447:INFO:Creating metrics dataframe
2023-07-02 10:15:03,467:INFO:Initializing Ada Boost Classifier
2023-07-02 10:15:03,467:INFO:Total runtime is 1.341226013501485 minutes
2023-07-02 10:15:03,471:INFO:SubProcess create_model() called ==================================
2023-07-02 10:15:03,471:INFO:Initializing create_model()
2023-07-02 10:15:03,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:15:03,471:INFO:Checking exceptions
2023-07-02 10:15:03,471:INFO:Importing libraries
2023-07-02 10:15:03,471:INFO:Copying training dataset
2023-07-02 10:15:03,479:INFO:Defining folds
2023-07-02 10:15:03,479:INFO:Declaring metric variables
2023-07-02 10:15:03,487:INFO:Importing untrained model
2023-07-02 10:15:03,495:INFO:Ada Boost Classifier Imported successfully
2023-07-02 10:15:03,511:INFO:Starting cross validation
2023-07-02 10:15:03,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:15:11,911:INFO:Calculating mean and std
2023-07-02 10:15:11,915:INFO:Creating metrics dataframe
2023-07-02 10:15:13,099:INFO:Uploading results into container
2023-07-02 10:15:13,099:INFO:Uploading model into container now
2023-07-02 10:15:13,099:INFO:_master_model_container: 9
2023-07-02 10:15:13,099:INFO:_display_container: 2
2023-07-02 10:15:13,099:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8402)
2023-07-02 10:15:13,099:INFO:create_model() successfully completed......................................
2023-07-02 10:15:13,228:INFO:SubProcess create_model() end ==================================
2023-07-02 10:15:13,228:INFO:Creating metrics dataframe
2023-07-02 10:15:13,240:INFO:Initializing Gradient Boosting Classifier
2023-07-02 10:15:13,240:INFO:Total runtime is 1.5040948351224261 minutes
2023-07-02 10:15:13,244:INFO:SubProcess create_model() called ==================================
2023-07-02 10:15:13,244:INFO:Initializing create_model()
2023-07-02 10:15:13,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:15:13,244:INFO:Checking exceptions
2023-07-02 10:15:13,244:INFO:Importing libraries
2023-07-02 10:15:13,248:INFO:Copying training dataset
2023-07-02 10:15:13,252:INFO:Defining folds
2023-07-02 10:15:13,252:INFO:Declaring metric variables
2023-07-02 10:15:13,260:INFO:Importing untrained model
2023-07-02 10:15:13,270:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 10:15:13,284:INFO:Starting cross validation
2023-07-02 10:15:13,284:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:15:21,611:INFO:Calculating mean and std
2023-07-02 10:15:21,611:INFO:Creating metrics dataframe
2023-07-02 10:15:23,005:INFO:Uploading results into container
2023-07-02 10:15:23,005:INFO:Uploading model into container now
2023-07-02 10:15:23,005:INFO:_master_model_container: 10
2023-07-02 10:15:23,005:INFO:_display_container: 2
2023-07-02 10:15:23,009:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8402, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 10:15:23,009:INFO:create_model() successfully completed......................................
2023-07-02 10:15:23,150:INFO:SubProcess create_model() end ==================================
2023-07-02 10:15:23,150:INFO:Creating metrics dataframe
2023-07-02 10:15:23,162:INFO:Initializing Linear Discriminant Analysis
2023-07-02 10:15:23,166:INFO:Total runtime is 1.6695322195688882 minutes
2023-07-02 10:15:23,166:INFO:SubProcess create_model() called ==================================
2023-07-02 10:15:23,170:INFO:Initializing create_model()
2023-07-02 10:15:23,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:15:23,170:INFO:Checking exceptions
2023-07-02 10:15:23,170:INFO:Importing libraries
2023-07-02 10:15:23,170:INFO:Copying training dataset
2023-07-02 10:15:23,174:INFO:Defining folds
2023-07-02 10:15:23,174:INFO:Declaring metric variables
2023-07-02 10:15:23,178:INFO:Importing untrained model
2023-07-02 10:15:23,182:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 10:15:23,194:INFO:Starting cross validation
2023-07-02 10:15:23,198:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:15:30,915:INFO:Calculating mean and std
2023-07-02 10:15:30,915:INFO:Creating metrics dataframe
2023-07-02 10:15:32,091:INFO:Uploading results into container
2023-07-02 10:15:32,091:INFO:Uploading model into container now
2023-07-02 10:15:32,093:INFO:_master_model_container: 11
2023-07-02 10:15:32,093:INFO:_display_container: 2
2023-07-02 10:15:32,093:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 10:15:32,093:INFO:create_model() successfully completed......................................
2023-07-02 10:15:32,215:INFO:SubProcess create_model() end ==================================
2023-07-02 10:15:32,215:INFO:Creating metrics dataframe
2023-07-02 10:15:32,231:INFO:Initializing Extra Trees Classifier
2023-07-02 10:15:32,231:INFO:Total runtime is 1.8206204493840534 minutes
2023-07-02 10:15:32,239:INFO:SubProcess create_model() called ==================================
2023-07-02 10:15:32,239:INFO:Initializing create_model()
2023-07-02 10:15:32,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:15:32,239:INFO:Checking exceptions
2023-07-02 10:15:32,239:INFO:Importing libraries
2023-07-02 10:15:32,243:INFO:Copying training dataset
2023-07-02 10:15:32,251:INFO:Defining folds
2023-07-02 10:15:32,251:INFO:Declaring metric variables
2023-07-02 10:15:32,259:INFO:Importing untrained model
2023-07-02 10:15:32,267:INFO:Extra Trees Classifier Imported successfully
2023-07-02 10:15:32,287:INFO:Starting cross validation
2023-07-02 10:15:32,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:15:41,121:INFO:Calculating mean and std
2023-07-02 10:15:41,125:INFO:Creating metrics dataframe
2023-07-02 10:15:42,291:INFO:Uploading results into container
2023-07-02 10:15:42,291:INFO:Uploading model into container now
2023-07-02 10:15:42,291:INFO:_master_model_container: 12
2023-07-02 10:15:42,291:INFO:_display_container: 2
2023-07-02 10:15:42,291:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:15:42,295:INFO:create_model() successfully completed......................................
2023-07-02 10:15:42,428:INFO:SubProcess create_model() end ==================================
2023-07-02 10:15:42,428:INFO:Creating metrics dataframe
2023-07-02 10:15:42,440:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 10:15:42,440:INFO:Total runtime is 1.9907606045405069 minutes
2023-07-02 10:15:42,448:INFO:SubProcess create_model() called ==================================
2023-07-02 10:15:42,448:INFO:Initializing create_model()
2023-07-02 10:15:42,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:15:42,448:INFO:Checking exceptions
2023-07-02 10:15:42,448:INFO:Importing libraries
2023-07-02 10:15:42,448:INFO:Copying training dataset
2023-07-02 10:15:42,452:INFO:Defining folds
2023-07-02 10:15:42,452:INFO:Declaring metric variables
2023-07-02 10:15:42,460:INFO:Importing untrained model
2023-07-02 10:15:42,468:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 10:15:42,480:INFO:Starting cross validation
2023-07-02 10:15:42,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:15:50,488:INFO:Calculating mean and std
2023-07-02 10:15:50,492:INFO:Creating metrics dataframe
2023-07-02 10:15:51,863:INFO:Uploading results into container
2023-07-02 10:15:51,863:INFO:Uploading model into container now
2023-07-02 10:15:51,863:INFO:_master_model_container: 13
2023-07-02 10:15:51,863:INFO:_display_container: 2
2023-07-02 10:15:51,863:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8402, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 10:15:51,863:INFO:create_model() successfully completed......................................
2023-07-02 10:15:51,993:INFO:SubProcess create_model() end ==================================
2023-07-02 10:15:51,993:INFO:Creating metrics dataframe
2023-07-02 10:15:52,005:INFO:Initializing Dummy Classifier
2023-07-02 10:15:52,005:INFO:Total runtime is 2.1501805186271667 minutes
2023-07-02 10:15:52,009:INFO:SubProcess create_model() called ==================================
2023-07-02 10:15:52,009:INFO:Initializing create_model()
2023-07-02 10:15:52,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66BE20>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:15:52,009:INFO:Checking exceptions
2023-07-02 10:15:52,009:INFO:Importing libraries
2023-07-02 10:15:52,009:INFO:Copying training dataset
2023-07-02 10:15:52,017:INFO:Defining folds
2023-07-02 10:15:52,017:INFO:Declaring metric variables
2023-07-02 10:15:52,021:INFO:Importing untrained model
2023-07-02 10:15:52,029:INFO:Dummy Classifier Imported successfully
2023-07-02 10:15:52,041:INFO:Starting cross validation
2023-07-02 10:15:52,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:15:52,169:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,189:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,197:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,197:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,210:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,217:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,221:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,229:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:15:52,257:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:16:00,038:INFO:Calculating mean and std
2023-07-02 10:16:00,038:INFO:Creating metrics dataframe
2023-07-02 10:16:01,205:INFO:Uploading results into container
2023-07-02 10:16:01,209:INFO:Uploading model into container now
2023-07-02 10:16:01,209:INFO:_master_model_container: 14
2023-07-02 10:16:01,209:INFO:_display_container: 2
2023-07-02 10:16:01,209:INFO:DummyClassifier(constant=None, random_state=8402, strategy='prior')
2023-07-02 10:16:01,209:INFO:create_model() successfully completed......................................
2023-07-02 10:16:01,335:INFO:SubProcess create_model() end ==================================
2023-07-02 10:16:01,335:INFO:Creating metrics dataframe
2023-07-02 10:16:01,363:INFO:Initializing create_model()
2023-07-02 10:16:01,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:16:01,363:INFO:Checking exceptions
2023-07-02 10:16:01,367:INFO:Importing libraries
2023-07-02 10:16:01,367:INFO:Copying training dataset
2023-07-02 10:16:01,375:INFO:Defining folds
2023-07-02 10:16:01,375:INFO:Declaring metric variables
2023-07-02 10:16:01,375:INFO:Importing untrained model
2023-07-02 10:16:01,375:INFO:Declaring custom model
2023-07-02 10:16:01,375:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:16:01,379:INFO:Cross validation set to False
2023-07-02 10:16:01,379:INFO:Fitting Model
2023-07-02 10:16:02,674:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:16:02,674:INFO:create_model() successfully completed......................................
2023-07-02 10:16:02,822:INFO:_master_model_container: 14
2023-07-02 10:16:02,822:INFO:_display_container: 2
2023-07-02 10:16:02,822:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:16:02,822:INFO:compare_models() successfully completed......................................
2023-07-02 10:17:01,385:INFO:Initializing create_model()
2023-07-02 10:17:01,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:17:01,385:INFO:Checking exceptions
2023-07-02 10:17:01,452:INFO:Importing libraries
2023-07-02 10:17:01,452:INFO:Copying training dataset
2023-07-02 10:17:01,464:INFO:Defining folds
2023-07-02 10:17:01,464:INFO:Declaring metric variables
2023-07-02 10:17:01,476:INFO:Importing untrained model
2023-07-02 10:17:01,488:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:17:01,504:INFO:Starting cross validation
2023-07-02 10:17:01,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:17:12,404:INFO:Calculating mean and std
2023-07-02 10:17:12,408:INFO:Creating metrics dataframe
2023-07-02 10:17:12,416:INFO:Finalizing model
2023-07-02 10:17:14,013:INFO:Uploading results into container
2023-07-02 10:17:14,013:INFO:Uploading model into container now
2023-07-02 10:17:14,029:INFO:_master_model_container: 15
2023-07-02 10:17:14,029:INFO:_display_container: 3
2023-07-02 10:17:14,029:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:17:14,029:INFO:create_model() successfully completed......................................
2023-07-02 10:17:39,995:INFO:Initializing tune_model()
2023-07-02 10:17:39,995:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>)
2023-07-02 10:17:39,999:INFO:Checking exceptions
2023-07-02 10:17:40,059:INFO:Copying training dataset
2023-07-02 10:17:40,067:INFO:Checking base model
2023-07-02 10:17:40,067:INFO:Base model : Random Forest Classifier
2023-07-02 10:17:40,079:INFO:Declaring metric variables
2023-07-02 10:17:40,084:INFO:Defining Hyperparameters
2023-07-02 10:17:40,328:INFO:Tuning with n_jobs=-1
2023-07-02 10:17:40,328:INFO:Initializing RandomizedSearchCV
2023-07-02 10:19:21,159:INFO:best_params: {'actual_estimator__n_estimators': 60, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2023-07-02 10:19:21,163:INFO:Hyperparameter search completed
2023-07-02 10:19:21,163:INFO:SubProcess create_model() called ==================================
2023-07-02 10:19:21,163:INFO:Initializing create_model()
2023-07-02 10:19:21,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF41E310>, model_only=True, return_train_score=False, kwargs={'n_estimators': 60, 'min_samples_split': 2, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'entropy', 'class_weight': 'balanced', 'bootstrap': True})
2023-07-02 10:19:21,163:INFO:Checking exceptions
2023-07-02 10:19:21,163:INFO:Importing libraries
2023-07-02 10:19:21,163:INFO:Copying training dataset
2023-07-02 10:19:21,167:INFO:Defining folds
2023-07-02 10:19:21,171:INFO:Declaring metric variables
2023-07-02 10:19:21,175:INFO:Importing untrained model
2023-07-02 10:19:21,175:INFO:Declaring custom model
2023-07-02 10:19:21,179:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:19:21,187:INFO:Starting cross validation
2023-07-02 10:19:21,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:19:29,991:INFO:Calculating mean and std
2023-07-02 10:19:29,991:INFO:Creating metrics dataframe
2023-07-02 10:19:30,003:INFO:Finalizing model
2023-07-02 10:19:31,395:INFO:Uploading results into container
2023-07-02 10:19:31,395:INFO:Uploading model into container now
2023-07-02 10:19:31,399:INFO:_master_model_container: 16
2023-07-02 10:19:31,399:INFO:_display_container: 4
2023-07-02 10:19:31,399:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:19:31,399:INFO:create_model() successfully completed......................................
2023-07-02 10:19:31,524:INFO:SubProcess create_model() end ==================================
2023-07-02 10:19:31,524:INFO:choose_better activated
2023-07-02 10:19:31,528:INFO:SubProcess create_model() called ==================================
2023-07-02 10:19:31,528:INFO:Initializing create_model()
2023-07-02 10:19:31,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:19:31,528:INFO:Checking exceptions
2023-07-02 10:19:31,532:INFO:Importing libraries
2023-07-02 10:19:31,532:INFO:Copying training dataset
2023-07-02 10:19:31,536:INFO:Defining folds
2023-07-02 10:19:31,536:INFO:Declaring metric variables
2023-07-02 10:19:31,536:INFO:Importing untrained model
2023-07-02 10:19:31,536:INFO:Declaring custom model
2023-07-02 10:19:31,536:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:19:31,536:INFO:Starting cross validation
2023-07-02 10:19:31,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:19:40,315:INFO:Calculating mean and std
2023-07-02 10:19:40,315:INFO:Creating metrics dataframe
2023-07-02 10:19:40,319:INFO:Finalizing model
2023-07-02 10:19:41,619:INFO:Uploading results into container
2023-07-02 10:19:41,619:INFO:Uploading model into container now
2023-07-02 10:19:41,619:INFO:_master_model_container: 17
2023-07-02 10:19:41,619:INFO:_display_container: 5
2023-07-02 10:19:41,619:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:19:41,619:INFO:create_model() successfully completed......................................
2023-07-02 10:19:41,735:INFO:SubProcess create_model() end ==================================
2023-07-02 10:19:41,739:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False) result for Accuracy is 0.7622
2023-07-02 10:19:41,739:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False) result for Accuracy is 0.772
2023-07-02 10:19:41,739:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False) is best model
2023-07-02 10:19:41,739:INFO:choose_better completed
2023-07-02 10:19:41,747:INFO:_master_model_container: 17
2023-07-02 10:19:41,747:INFO:_display_container: 4
2023-07-02 10:19:41,747:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:19:41,751:INFO:tune_model() successfully completed......................................
2023-07-02 10:20:42,500:INFO:Initializing plot_model()
2023-07-02 10:20:42,500:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:20:42,500:INFO:Checking exceptions
2023-07-02 10:20:42,532:INFO:Preloading libraries
2023-07-02 10:20:42,544:INFO:Copying training dataset
2023-07-02 10:20:42,544:INFO:Plot type: manifold
2023-07-02 10:20:42,677:INFO:Fitting & Transforming Model
2023-07-02 10:20:42,677:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 10:20:42,724:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 10:20:45,611:INFO:Visual Rendered Successfully
2023-07-02 10:20:45,759:INFO:plot_model() successfully completed......................................
2023-07-02 10:20:51,180:INFO:Initializing plot_model()
2023-07-02 10:20:51,180:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:20:51,180:INFO:Checking exceptions
2023-07-02 10:20:51,217:INFO:Preloading libraries
2023-07-02 10:20:51,225:INFO:Copying training dataset
2023-07-02 10:20:51,225:INFO:Plot type: feature
2023-07-02 10:20:51,229:WARNING:No coef_ found. Trying feature_importances_
2023-07-02 10:20:51,461:INFO:Visual Rendered Successfully
2023-07-02 10:20:51,682:INFO:plot_model() successfully completed......................................
2023-07-02 10:21:02,000:INFO:Initializing plot_model()
2023-07-02 10:21:02,000:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:21:02,000:INFO:Checking exceptions
2023-07-02 10:21:02,035:INFO:Preloading libraries
2023-07-02 10:21:02,043:INFO:Copying training dataset
2023-07-02 10:21:02,043:INFO:Plot type: confusion_matrix
2023-07-02 10:21:02,171:INFO:Fitting Model
2023-07-02 10:21:02,171:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 10:21:02,171:INFO:Scoring test/hold-out set
2023-07-02 10:21:02,400:INFO:Visual Rendered Successfully
2023-07-02 10:21:02,608:INFO:plot_model() successfully completed......................................
2023-07-02 10:21:56,879:INFO:Initializing plot_model()
2023-07-02 10:21:56,879:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:21:56,879:INFO:Checking exceptions
2023-07-02 10:21:56,915:INFO:Preloading libraries
2023-07-02 10:21:56,923:INFO:Copying training dataset
2023-07-02 10:21:56,923:INFO:Plot type: auc
2023-07-02 10:21:57,048:INFO:Fitting Model
2023-07-02 10:21:57,052:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 10:21:57,052:INFO:Scoring test/hold-out set
2023-07-02 10:21:57,409:INFO:Visual Rendered Successfully
2023-07-02 10:21:57,685:INFO:plot_model() successfully completed......................................
2023-07-02 10:22:09,580:INFO:Initializing plot_model()
2023-07-02 10:22:09,580:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:22:09,580:INFO:Checking exceptions
2023-07-02 10:22:09,608:INFO:Preloading libraries
2023-07-02 10:22:09,616:INFO:Copying training dataset
2023-07-02 10:22:09,616:INFO:Plot type: pr
2023-07-02 10:22:09,703:INFO:Fitting Model
2023-07-02 10:22:09,703:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 10:22:09,703:INFO:Scoring test/hold-out set
2023-07-02 10:22:09,904:INFO:Visual Rendered Successfully
2023-07-02 10:22:10,036:INFO:plot_model() successfully completed......................................
2023-07-02 10:22:23,203:INFO:Initializing predict_model()
2023-07-02 10:22:23,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001F1BF6905E0>)
2023-07-02 10:22:23,203:INFO:Checking exceptions
2023-07-02 10:22:23,203:INFO:Preloading libraries
2023-07-02 10:22:51,156:INFO:Initializing finalize_model()
2023-07-02 10:22:51,156:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 10:22:51,160:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:22:51,164:INFO:Initializing create_model()
2023-07-02 10:22:51,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 10:22:51,168:INFO:Checking exceptions
2023-07-02 10:22:51,168:INFO:Importing libraries
2023-07-02 10:22:51,172:INFO:Copying training dataset
2023-07-02 10:22:51,172:INFO:Defining folds
2023-07-02 10:22:51,172:INFO:Declaring metric variables
2023-07-02 10:22:51,172:INFO:Importing untrained model
2023-07-02 10:22:51,172:INFO:Declaring custom model
2023-07-02 10:22:51,172:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:22:51,176:INFO:Cross validation set to False
2023-07-02 10:22:51,176:INFO:Fitting Model
2023-07-02 10:22:51,532:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='entropy', max_depth=4,
                                        max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=5, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=60, n_jobs=-1,
                                        oob_score=False, random_state=8402,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-07-02 10:22:51,532:INFO:create_model() successfully completed......................................
2023-07-02 10:22:51,685:INFO:_master_model_container: 17
2023-07-02 10:22:51,685:INFO:_display_container: 5
2023-07-02 10:22:51,697:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='entropy', max_depth=4,
                                        max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=5, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=60, n_jobs=-1,
                                        oob_score=False, random_state=8402,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-07-02 10:22:51,697:INFO:finalize_model() successfully completed......................................
2023-07-02 10:27:48,263:INFO:Initializing compare_models()
2023-07-02 10:27:48,263:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 10:27:48,263:INFO:Checking exceptions
2023-07-02 10:27:48,267:INFO:Preparing display monitor
2023-07-02 10:27:48,343:INFO:Initializing Logistic Regression
2023-07-02 10:27:48,347:INFO:Total runtime is 6.663799285888672e-05 minutes
2023-07-02 10:27:48,355:INFO:SubProcess create_model() called ==================================
2023-07-02 10:27:48,355:INFO:Initializing create_model()
2023-07-02 10:27:48,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:27:48,355:INFO:Checking exceptions
2023-07-02 10:27:48,355:INFO:Importing libraries
2023-07-02 10:27:48,355:INFO:Copying training dataset
2023-07-02 10:27:48,363:INFO:Defining folds
2023-07-02 10:27:48,363:INFO:Declaring metric variables
2023-07-02 10:27:48,371:INFO:Importing untrained model
2023-07-02 10:27:48,379:INFO:Logistic Regression Imported successfully
2023-07-02 10:27:48,399:INFO:Starting cross validation
2023-07-02 10:27:48,399:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:28:09,280:INFO:Calculating mean and std
2023-07-02 10:28:09,284:INFO:Creating metrics dataframe
2023-07-02 10:28:11,141:INFO:Uploading results into container
2023-07-02 10:28:11,141:INFO:Uploading model into container now
2023-07-02 10:28:11,141:INFO:_master_model_container: 18
2023-07-02 10:28:11,141:INFO:_display_container: 6
2023-07-02 10:28:11,141:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:28:11,141:INFO:create_model() successfully completed......................................
2023-07-02 10:28:11,349:INFO:SubProcess create_model() end ==================================
2023-07-02 10:28:11,349:INFO:Creating metrics dataframe
2023-07-02 10:28:11,361:INFO:Initializing K Neighbors Classifier
2023-07-02 10:28:11,361:INFO:Total runtime is 0.38364444573720297 minutes
2023-07-02 10:28:11,365:INFO:SubProcess create_model() called ==================================
2023-07-02 10:28:11,365:INFO:Initializing create_model()
2023-07-02 10:28:11,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:28:11,369:INFO:Checking exceptions
2023-07-02 10:28:11,369:INFO:Importing libraries
2023-07-02 10:28:11,369:INFO:Copying training dataset
2023-07-02 10:28:11,377:INFO:Defining folds
2023-07-02 10:28:11,377:INFO:Declaring metric variables
2023-07-02 10:28:11,385:INFO:Importing untrained model
2023-07-02 10:28:11,393:INFO:K Neighbors Classifier Imported successfully
2023-07-02 10:28:11,409:INFO:Starting cross validation
2023-07-02 10:28:11,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:28:11,585:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:11,589:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:11,593:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:11,597:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:11,646:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:11,646:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:11,662:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:11,694:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:16,237:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:16,341:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 10:28:20,921:INFO:Calculating mean and std
2023-07-02 10:28:20,925:INFO:Creating metrics dataframe
2023-07-02 10:28:22,214:INFO:Uploading results into container
2023-07-02 10:28:22,214:INFO:Uploading model into container now
2023-07-02 10:28:22,218:INFO:_master_model_container: 19
2023-07-02 10:28:22,218:INFO:_display_container: 6
2023-07-02 10:28:22,218:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 10:28:22,218:INFO:create_model() successfully completed......................................
2023-07-02 10:28:22,355:INFO:SubProcess create_model() end ==================================
2023-07-02 10:28:22,355:INFO:Creating metrics dataframe
2023-07-02 10:28:22,367:INFO:Initializing Naive Bayes
2023-07-02 10:28:22,367:INFO:Total runtime is 0.5670701424280802 minutes
2023-07-02 10:28:22,375:INFO:SubProcess create_model() called ==================================
2023-07-02 10:28:22,375:INFO:Initializing create_model()
2023-07-02 10:28:22,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:28:22,375:INFO:Checking exceptions
2023-07-02 10:28:22,375:INFO:Importing libraries
2023-07-02 10:28:22,375:INFO:Copying training dataset
2023-07-02 10:28:22,383:INFO:Defining folds
2023-07-02 10:28:22,383:INFO:Declaring metric variables
2023-07-02 10:28:22,391:INFO:Importing untrained model
2023-07-02 10:28:22,399:INFO:Naive Bayes Imported successfully
2023-07-02 10:28:22,415:INFO:Starting cross validation
2023-07-02 10:28:22,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:28:31,534:INFO:Calculating mean and std
2023-07-02 10:28:31,538:INFO:Creating metrics dataframe
2023-07-02 10:28:32,904:INFO:Uploading results into container
2023-07-02 10:28:32,904:INFO:Uploading model into container now
2023-07-02 10:28:32,908:INFO:_master_model_container: 20
2023-07-02 10:28:32,908:INFO:_display_container: 6
2023-07-02 10:28:32,908:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 10:28:32,908:INFO:create_model() successfully completed......................................
2023-07-02 10:28:33,048:INFO:SubProcess create_model() end ==================================
2023-07-02 10:28:33,048:INFO:Creating metrics dataframe
2023-07-02 10:28:33,056:INFO:Initializing Decision Tree Classifier
2023-07-02 10:28:33,056:INFO:Total runtime is 0.7452242016792296 minutes
2023-07-02 10:28:33,060:INFO:SubProcess create_model() called ==================================
2023-07-02 10:28:33,060:INFO:Initializing create_model()
2023-07-02 10:28:33,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:28:33,060:INFO:Checking exceptions
2023-07-02 10:28:33,060:INFO:Importing libraries
2023-07-02 10:28:33,060:INFO:Copying training dataset
2023-07-02 10:28:33,064:INFO:Defining folds
2023-07-02 10:28:33,068:INFO:Declaring metric variables
2023-07-02 10:28:33,068:INFO:Importing untrained model
2023-07-02 10:28:33,076:INFO:Decision Tree Classifier Imported successfully
2023-07-02 10:28:33,092:INFO:Starting cross validation
2023-07-02 10:28:33,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:28:42,313:INFO:Calculating mean and std
2023-07-02 10:28:42,317:INFO:Creating metrics dataframe
2023-07-02 10:28:43,972:INFO:Uploading results into container
2023-07-02 10:28:43,972:INFO:Uploading model into container now
2023-07-02 10:28:43,972:INFO:_master_model_container: 21
2023-07-02 10:28:43,975:INFO:_display_container: 6
2023-07-02 10:28:43,975:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8402, splitter='best')
2023-07-02 10:28:43,975:INFO:create_model() successfully completed......................................
2023-07-02 10:28:44,123:INFO:SubProcess create_model() end ==================================
2023-07-02 10:28:44,123:INFO:Creating metrics dataframe
2023-07-02 10:28:44,135:INFO:Initializing SVM - Linear Kernel
2023-07-02 10:28:44,135:INFO:Total runtime is 0.9298661311467488 minutes
2023-07-02 10:28:44,139:INFO:SubProcess create_model() called ==================================
2023-07-02 10:28:44,139:INFO:Initializing create_model()
2023-07-02 10:28:44,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:28:44,139:INFO:Checking exceptions
2023-07-02 10:28:44,139:INFO:Importing libraries
2023-07-02 10:28:44,139:INFO:Copying training dataset
2023-07-02 10:28:44,147:INFO:Defining folds
2023-07-02 10:28:44,147:INFO:Declaring metric variables
2023-07-02 10:28:44,155:INFO:Importing untrained model
2023-07-02 10:28:44,163:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 10:28:44,175:INFO:Starting cross validation
2023-07-02 10:28:44,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:28:44,295:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,319:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,323:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,339:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,343:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,343:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,347:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,351:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:44,359:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 10:28:52,219:INFO:Calculating mean and std
2023-07-02 10:28:52,219:INFO:Creating metrics dataframe
2023-07-02 10:28:53,418:INFO:Uploading results into container
2023-07-02 10:28:53,422:INFO:Uploading model into container now
2023-07-02 10:28:53,422:INFO:_master_model_container: 22
2023-07-02 10:28:53,422:INFO:_display_container: 6
2023-07-02 10:28:53,422:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8402, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 10:28:53,422:INFO:create_model() successfully completed......................................
2023-07-02 10:28:53,554:INFO:SubProcess create_model() end ==================================
2023-07-02 10:28:53,554:INFO:Creating metrics dataframe
2023-07-02 10:28:53,562:INFO:Initializing Ridge Classifier
2023-07-02 10:28:53,562:INFO:Total runtime is 1.0869957248369853 minutes
2023-07-02 10:28:53,570:INFO:SubProcess create_model() called ==================================
2023-07-02 10:28:53,570:INFO:Initializing create_model()
2023-07-02 10:28:53,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:28:53,574:INFO:Checking exceptions
2023-07-02 10:28:53,574:INFO:Importing libraries
2023-07-02 10:28:53,574:INFO:Copying training dataset
2023-07-02 10:28:53,582:INFO:Defining folds
2023-07-02 10:28:53,582:INFO:Declaring metric variables
2023-07-02 10:28:53,590:INFO:Importing untrained model
2023-07-02 10:28:53,598:INFO:Ridge Classifier Imported successfully
2023-07-02 10:28:53,610:INFO:Starting cross validation
2023-07-02 10:28:53,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:28:53,774:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,774:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,778:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,781:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,782:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,791:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,794:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,819:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,819:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:28:53,826:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 10:29:02,583:INFO:Calculating mean and std
2023-07-02 10:29:02,587:INFO:Creating metrics dataframe
2023-07-02 10:29:03,823:INFO:Uploading results into container
2023-07-02 10:29:03,827:INFO:Uploading model into container now
2023-07-02 10:29:03,827:INFO:_master_model_container: 23
2023-07-02 10:29:03,827:INFO:_display_container: 6
2023-07-02 10:29:03,827:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8402, solver='auto', tol=0.001)
2023-07-02 10:29:03,827:INFO:create_model() successfully completed......................................
2023-07-02 10:29:03,955:INFO:SubProcess create_model() end ==================================
2023-07-02 10:29:03,955:INFO:Creating metrics dataframe
2023-07-02 10:29:03,967:INFO:Initializing Random Forest Classifier
2023-07-02 10:29:03,967:INFO:Total runtime is 1.260404598712921 minutes
2023-07-02 10:29:03,971:INFO:SubProcess create_model() called ==================================
2023-07-02 10:29:03,971:INFO:Initializing create_model()
2023-07-02 10:29:03,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:29:03,971:INFO:Checking exceptions
2023-07-02 10:29:03,971:INFO:Importing libraries
2023-07-02 10:29:03,975:INFO:Copying training dataset
2023-07-02 10:29:03,979:INFO:Defining folds
2023-07-02 10:29:03,979:INFO:Declaring metric variables
2023-07-02 10:29:03,987:INFO:Importing untrained model
2023-07-02 10:29:03,995:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:29:04,007:INFO:Starting cross validation
2023-07-02 10:29:04,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:29:13,094:INFO:Calculating mean and std
2023-07-02 10:29:13,094:INFO:Creating metrics dataframe
2023-07-02 10:29:14,476:INFO:Uploading results into container
2023-07-02 10:29:14,476:INFO:Uploading model into container now
2023-07-02 10:29:14,476:INFO:_master_model_container: 24
2023-07-02 10:29:14,476:INFO:_display_container: 6
2023-07-02 10:29:14,476:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:29:14,476:INFO:create_model() successfully completed......................................
2023-07-02 10:29:14,607:INFO:SubProcess create_model() end ==================================
2023-07-02 10:29:14,607:INFO:Creating metrics dataframe
2023-07-02 10:29:14,615:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 10:29:14,615:INFO:Total runtime is 1.4378801822662353 minutes
2023-07-02 10:29:14,619:INFO:SubProcess create_model() called ==================================
2023-07-02 10:29:14,619:INFO:Initializing create_model()
2023-07-02 10:29:14,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:29:14,619:INFO:Checking exceptions
2023-07-02 10:29:14,619:INFO:Importing libraries
2023-07-02 10:29:14,619:INFO:Copying training dataset
2023-07-02 10:29:14,627:INFO:Defining folds
2023-07-02 10:29:14,627:INFO:Declaring metric variables
2023-07-02 10:29:14,631:INFO:Importing untrained model
2023-07-02 10:29:14,635:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 10:29:14,651:INFO:Starting cross validation
2023-07-02 10:29:14,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:29:23,423:INFO:Calculating mean and std
2023-07-02 10:29:23,423:INFO:Creating metrics dataframe
2023-07-02 10:29:24,639:INFO:Uploading results into container
2023-07-02 10:29:24,639:INFO:Uploading model into container now
2023-07-02 10:29:24,639:INFO:_master_model_container: 25
2023-07-02 10:29:24,639:INFO:_display_container: 6
2023-07-02 10:29:24,639:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 10:29:24,639:INFO:create_model() successfully completed......................................
2023-07-02 10:29:24,767:INFO:SubProcess create_model() end ==================================
2023-07-02 10:29:24,767:INFO:Creating metrics dataframe
2023-07-02 10:29:24,783:INFO:Initializing Ada Boost Classifier
2023-07-02 10:29:24,783:INFO:Total runtime is 1.6073411623636882 minutes
2023-07-02 10:29:24,792:INFO:SubProcess create_model() called ==================================
2023-07-02 10:29:24,792:INFO:Initializing create_model()
2023-07-02 10:29:24,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:29:24,796:INFO:Checking exceptions
2023-07-02 10:29:24,797:INFO:Importing libraries
2023-07-02 10:29:24,797:INFO:Copying training dataset
2023-07-02 10:29:24,805:INFO:Defining folds
2023-07-02 10:29:24,805:INFO:Declaring metric variables
2023-07-02 10:29:24,813:INFO:Importing untrained model
2023-07-02 10:29:24,821:INFO:Ada Boost Classifier Imported successfully
2023-07-02 10:29:24,833:INFO:Starting cross validation
2023-07-02 10:29:24,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:29:33,427:INFO:Calculating mean and std
2023-07-02 10:29:33,427:INFO:Creating metrics dataframe
2023-07-02 10:29:34,661:INFO:Uploading results into container
2023-07-02 10:29:34,665:INFO:Uploading model into container now
2023-07-02 10:29:34,665:INFO:_master_model_container: 26
2023-07-02 10:29:34,665:INFO:_display_container: 6
2023-07-02 10:29:34,665:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8402)
2023-07-02 10:29:34,665:INFO:create_model() successfully completed......................................
2023-07-02 10:29:34,793:INFO:SubProcess create_model() end ==================================
2023-07-02 10:29:34,793:INFO:Creating metrics dataframe
2023-07-02 10:29:34,805:INFO:Initializing Gradient Boosting Classifier
2023-07-02 10:29:34,805:INFO:Total runtime is 1.774378764629364 minutes
2023-07-02 10:29:34,809:INFO:SubProcess create_model() called ==================================
2023-07-02 10:29:34,809:INFO:Initializing create_model()
2023-07-02 10:29:34,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:29:34,809:INFO:Checking exceptions
2023-07-02 10:29:34,809:INFO:Importing libraries
2023-07-02 10:29:34,809:INFO:Copying training dataset
2023-07-02 10:29:34,817:INFO:Defining folds
2023-07-02 10:29:34,817:INFO:Declaring metric variables
2023-07-02 10:29:34,824:INFO:Importing untrained model
2023-07-02 10:29:34,829:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 10:29:34,845:INFO:Starting cross validation
2023-07-02 10:29:34,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:29:43,115:INFO:Calculating mean and std
2023-07-02 10:29:43,119:INFO:Creating metrics dataframe
2023-07-02 10:29:44,522:INFO:Uploading results into container
2023-07-02 10:29:44,522:INFO:Uploading model into container now
2023-07-02 10:29:44,526:INFO:_master_model_container: 27
2023-07-02 10:29:44,526:INFO:_display_container: 6
2023-07-02 10:29:44,526:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8402, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 10:29:44,526:INFO:create_model() successfully completed......................................
2023-07-02 10:29:44,663:INFO:SubProcess create_model() end ==================================
2023-07-02 10:29:44,667:INFO:Creating metrics dataframe
2023-07-02 10:29:44,683:INFO:Initializing Linear Discriminant Analysis
2023-07-02 10:29:44,683:INFO:Total runtime is 1.9390016516049704 minutes
2023-07-02 10:29:44,687:INFO:SubProcess create_model() called ==================================
2023-07-02 10:29:44,691:INFO:Initializing create_model()
2023-07-02 10:29:44,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:29:44,691:INFO:Checking exceptions
2023-07-02 10:29:44,691:INFO:Importing libraries
2023-07-02 10:29:44,691:INFO:Copying training dataset
2023-07-02 10:29:44,699:INFO:Defining folds
2023-07-02 10:29:44,699:INFO:Declaring metric variables
2023-07-02 10:29:44,703:INFO:Importing untrained model
2023-07-02 10:29:44,715:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 10:29:44,731:INFO:Starting cross validation
2023-07-02 10:29:44,731:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:29:53,054:INFO:Calculating mean and std
2023-07-02 10:29:53,054:INFO:Creating metrics dataframe
2023-07-02 10:29:54,281:INFO:Uploading results into container
2023-07-02 10:29:54,281:INFO:Uploading model into container now
2023-07-02 10:29:54,285:INFO:_master_model_container: 28
2023-07-02 10:29:54,285:INFO:_display_container: 6
2023-07-02 10:29:54,285:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 10:29:54,285:INFO:create_model() successfully completed......................................
2023-07-02 10:29:54,414:INFO:SubProcess create_model() end ==================================
2023-07-02 10:29:54,414:INFO:Creating metrics dataframe
2023-07-02 10:29:54,430:INFO:Initializing Extra Trees Classifier
2023-07-02 10:29:54,430:INFO:Total runtime is 2.101453451315562 minutes
2023-07-02 10:29:54,434:INFO:SubProcess create_model() called ==================================
2023-07-02 10:29:54,434:INFO:Initializing create_model()
2023-07-02 10:29:54,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:29:54,434:INFO:Checking exceptions
2023-07-02 10:29:54,438:INFO:Importing libraries
2023-07-02 10:29:54,438:INFO:Copying training dataset
2023-07-02 10:29:54,446:INFO:Defining folds
2023-07-02 10:29:54,446:INFO:Declaring metric variables
2023-07-02 10:29:54,450:INFO:Importing untrained model
2023-07-02 10:29:54,458:INFO:Extra Trees Classifier Imported successfully
2023-07-02 10:29:54,472:INFO:Starting cross validation
2023-07-02 10:29:54,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:30:03,266:INFO:Calculating mean and std
2023-07-02 10:30:03,266:INFO:Creating metrics dataframe
2023-07-02 10:30:04,473:INFO:Uploading results into container
2023-07-02 10:30:04,477:INFO:Uploading model into container now
2023-07-02 10:30:04,477:INFO:_master_model_container: 29
2023-07-02 10:30:04,477:INFO:_display_container: 6
2023-07-02 10:30:04,477:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:30:04,477:INFO:create_model() successfully completed......................................
2023-07-02 10:30:04,601:INFO:SubProcess create_model() end ==================================
2023-07-02 10:30:04,601:INFO:Creating metrics dataframe
2023-07-02 10:30:04,617:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 10:30:04,617:INFO:Total runtime is 2.2712377150853476 minutes
2023-07-02 10:30:04,625:INFO:SubProcess create_model() called ==================================
2023-07-02 10:30:04,625:INFO:Initializing create_model()
2023-07-02 10:30:04,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:30:04,625:INFO:Checking exceptions
2023-07-02 10:30:04,625:INFO:Importing libraries
2023-07-02 10:30:04,625:INFO:Copying training dataset
2023-07-02 10:30:04,633:INFO:Defining folds
2023-07-02 10:30:04,633:INFO:Declaring metric variables
2023-07-02 10:30:04,645:INFO:Importing untrained model
2023-07-02 10:30:04,655:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 10:30:04,665:INFO:Starting cross validation
2023-07-02 10:30:04,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:30:15,548:INFO:Calculating mean and std
2023-07-02 10:30:15,548:INFO:Creating metrics dataframe
2023-07-02 10:30:17,070:INFO:Uploading results into container
2023-07-02 10:30:17,074:INFO:Uploading model into container now
2023-07-02 10:30:17,074:INFO:_master_model_container: 30
2023-07-02 10:30:17,074:INFO:_display_container: 6
2023-07-02 10:30:17,074:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8402, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 10:30:17,074:INFO:create_model() successfully completed......................................
2023-07-02 10:30:17,238:INFO:SubProcess create_model() end ==================================
2023-07-02 10:30:17,238:INFO:Creating metrics dataframe
2023-07-02 10:30:17,254:INFO:Initializing Dummy Classifier
2023-07-02 10:30:17,254:INFO:Total runtime is 2.4818543632825216 minutes
2023-07-02 10:30:17,258:INFO:SubProcess create_model() called ==================================
2023-07-02 10:30:17,258:INFO:Initializing create_model()
2023-07-02 10:30:17,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF66B790>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:30:17,262:INFO:Checking exceptions
2023-07-02 10:30:17,262:INFO:Importing libraries
2023-07-02 10:30:17,262:INFO:Copying training dataset
2023-07-02 10:30:17,270:INFO:Defining folds
2023-07-02 10:30:17,270:INFO:Declaring metric variables
2023-07-02 10:30:17,274:INFO:Importing untrained model
2023-07-02 10:30:17,278:INFO:Dummy Classifier Imported successfully
2023-07-02 10:30:17,294:INFO:Starting cross validation
2023-07-02 10:30:17,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:30:17,442:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,462:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,466:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,474:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,478:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,482:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,486:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,490:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,502:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:17,511:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 10:30:26,778:INFO:Calculating mean and std
2023-07-02 10:30:26,782:INFO:Creating metrics dataframe
2023-07-02 10:30:28,325:INFO:Uploading results into container
2023-07-02 10:30:28,325:INFO:Uploading model into container now
2023-07-02 10:30:28,329:INFO:_master_model_container: 31
2023-07-02 10:30:28,329:INFO:_display_container: 6
2023-07-02 10:30:28,329:INFO:DummyClassifier(constant=None, random_state=8402, strategy='prior')
2023-07-02 10:30:28,329:INFO:create_model() successfully completed......................................
2023-07-02 10:30:28,477:INFO:SubProcess create_model() end ==================================
2023-07-02 10:30:28,477:INFO:Creating metrics dataframe
2023-07-02 10:30:28,505:INFO:Initializing create_model()
2023-07-02 10:30:28,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:30:28,505:INFO:Checking exceptions
2023-07-02 10:30:28,509:INFO:Importing libraries
2023-07-02 10:30:28,509:INFO:Copying training dataset
2023-07-02 10:30:28,513:INFO:Defining folds
2023-07-02 10:30:28,513:INFO:Declaring metric variables
2023-07-02 10:30:28,513:INFO:Importing untrained model
2023-07-02 10:30:28,513:INFO:Declaring custom model
2023-07-02 10:30:28,513:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:30:28,517:INFO:Cross validation set to False
2023-07-02 10:30:28,517:INFO:Fitting Model
2023-07-02 10:30:29,490:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:30:29,490:INFO:create_model() successfully completed......................................
2023-07-02 10:30:29,650:INFO:_master_model_container: 31
2023-07-02 10:30:29,650:INFO:_display_container: 6
2023-07-02 10:30:29,650:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:30:29,650:INFO:compare_models() successfully completed......................................
2023-07-02 10:40:47,780:INFO:Initializing create_model()
2023-07-02 10:40:47,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:40:47,780:INFO:Checking exceptions
2023-07-02 10:40:47,836:INFO:Importing libraries
2023-07-02 10:40:47,840:INFO:Copying training dataset
2023-07-02 10:40:47,848:INFO:Defining folds
2023-07-02 10:40:47,848:INFO:Declaring metric variables
2023-07-02 10:40:47,852:INFO:Importing untrained model
2023-07-02 10:40:47,860:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 10:40:47,872:INFO:Starting cross validation
2023-07-02 10:40:47,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:41:09,618:INFO:Calculating mean and std
2023-07-02 10:41:09,622:INFO:Creating metrics dataframe
2023-07-02 10:41:09,626:INFO:Finalizing model
2023-07-02 10:41:10,938:INFO:Uploading results into container
2023-07-02 10:41:10,942:INFO:Uploading model into container now
2023-07-02 10:41:10,950:INFO:_master_model_container: 32
2023-07-02 10:41:10,954:INFO:_display_container: 7
2023-07-02 10:41:10,954:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 10:41:10,954:INFO:create_model() successfully completed......................................
2023-07-02 10:41:22,122:INFO:Initializing tune_model()
2023-07-02 10:41:22,122:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>)
2023-07-02 10:41:22,122:INFO:Checking exceptions
2023-07-02 10:41:22,186:INFO:Copying training dataset
2023-07-02 10:41:22,194:INFO:Checking base model
2023-07-02 10:41:22,194:INFO:Base model : Linear Discriminant Analysis
2023-07-02 10:41:22,206:INFO:Declaring metric variables
2023-07-02 10:41:22,215:INFO:Defining Hyperparameters
2023-07-02 10:41:22,424:INFO:Tuning with n_jobs=-1
2023-07-02 10:41:22,424:INFO:Initializing RandomizedSearchCV
2023-07-02 10:42:56,907:INFO:best_params: {'actual_estimator__solver': 'eigen', 'actual_estimator__shrinkage': 0.2}
2023-07-02 10:42:56,907:INFO:Hyperparameter search completed
2023-07-02 10:42:56,907:INFO:SubProcess create_model() called ==================================
2023-07-02 10:42:56,907:INFO:Initializing create_model()
2023-07-02 10:42:56,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF578E80>, model_only=True, return_train_score=False, kwargs={'solver': 'eigen', 'shrinkage': 0.2})
2023-07-02 10:42:56,907:INFO:Checking exceptions
2023-07-02 10:42:56,907:INFO:Importing libraries
2023-07-02 10:42:56,910:INFO:Copying training dataset
2023-07-02 10:42:56,918:INFO:Defining folds
2023-07-02 10:42:56,918:INFO:Declaring metric variables
2023-07-02 10:42:56,922:INFO:Importing untrained model
2023-07-02 10:42:56,924:INFO:Declaring custom model
2023-07-02 10:42:56,929:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 10:42:56,941:INFO:Starting cross validation
2023-07-02 10:42:56,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:43:05,574:INFO:Calculating mean and std
2023-07-02 10:43:05,578:INFO:Creating metrics dataframe
2023-07-02 10:43:05,586:INFO:Finalizing model
2023-07-02 10:43:07,047:INFO:Uploading results into container
2023-07-02 10:43:07,051:INFO:Uploading model into container now
2023-07-02 10:43:07,051:INFO:_master_model_container: 33
2023-07-02 10:43:07,051:INFO:_display_container: 8
2023-07-02 10:43:07,051:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.2, solver='eigen',
                           store_covariance=False, tol=0.0001)
2023-07-02 10:43:07,051:INFO:create_model() successfully completed......................................
2023-07-02 10:43:07,192:INFO:SubProcess create_model() end ==================================
2023-07-02 10:43:07,192:INFO:choose_better activated
2023-07-02 10:43:07,200:INFO:SubProcess create_model() called ==================================
2023-07-02 10:43:07,200:INFO:Initializing create_model()
2023-07-02 10:43:07,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:43:07,200:INFO:Checking exceptions
2023-07-02 10:43:07,204:INFO:Importing libraries
2023-07-02 10:43:07,204:INFO:Copying training dataset
2023-07-02 10:43:07,208:INFO:Defining folds
2023-07-02 10:43:07,208:INFO:Declaring metric variables
2023-07-02 10:43:07,208:INFO:Importing untrained model
2023-07-02 10:43:07,208:INFO:Declaring custom model
2023-07-02 10:43:07,208:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 10:43:07,208:INFO:Starting cross validation
2023-07-02 10:43:07,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:43:15,429:INFO:Calculating mean and std
2023-07-02 10:43:15,429:INFO:Creating metrics dataframe
2023-07-02 10:43:15,433:INFO:Finalizing model
2023-07-02 10:43:17,000:INFO:Uploading results into container
2023-07-02 10:43:17,000:INFO:Uploading model into container now
2023-07-02 10:43:17,000:INFO:_master_model_container: 34
2023-07-02 10:43:17,000:INFO:_display_container: 9
2023-07-02 10:43:17,000:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 10:43:17,000:INFO:create_model() successfully completed......................................
2023-07-02 10:43:17,139:INFO:SubProcess create_model() end ==================================
2023-07-02 10:43:17,139:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.7621
2023-07-02 10:43:17,139:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.2, solver='eigen',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.767
2023-07-02 10:43:17,139:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.2, solver='eigen',
                           store_covariance=False, tol=0.0001) is best model
2023-07-02 10:43:17,139:INFO:choose_better completed
2023-07-02 10:43:17,155:INFO:_master_model_container: 34
2023-07-02 10:43:17,155:INFO:_display_container: 8
2023-07-02 10:43:17,155:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.2, solver='eigen',
                           store_covariance=False, tol=0.0001)
2023-07-02 10:43:17,155:INFO:tune_model() successfully completed......................................
2023-07-02 10:43:41,744:INFO:Initializing plot_model()
2023-07-02 10:43:41,748:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:43:41,748:INFO:Checking exceptions
2023-07-02 10:43:41,753:INFO:Preloading libraries
2023-07-02 10:43:41,754:INFO:Copying training dataset
2023-07-02 10:43:41,756:INFO:Plot type: manifold
2023-07-02 10:43:41,913:INFO:Fitting & Transforming Model
2023-07-02 10:43:41,913:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 10:43:41,961:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 10:43:44,668:INFO:Visual Rendered Successfully
2023-07-02 10:43:44,815:INFO:plot_model() successfully completed......................................
2023-07-02 10:43:44,831:INFO:Initializing plot_model()
2023-07-02 10:43:44,831:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:43:44,831:INFO:Checking exceptions
2023-07-02 10:43:44,839:INFO:Preloading libraries
2023-07-02 10:43:44,839:INFO:Copying training dataset
2023-07-02 10:43:44,839:INFO:Plot type: feature
2023-07-02 10:43:45,036:INFO:Visual Rendered Successfully
2023-07-02 10:43:45,177:INFO:plot_model() successfully completed......................................
2023-07-02 10:43:55,990:INFO:Initializing plot_model()
2023-07-02 10:43:55,990:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:43:55,990:INFO:Checking exceptions
2023-07-02 10:43:55,998:INFO:Preloading libraries
2023-07-02 10:43:55,998:INFO:Copying training dataset
2023-07-02 10:43:55,998:INFO:Plot type: confusion_matrix
2023-07-02 10:43:56,114:INFO:Fitting Model
2023-07-02 10:43:56,114:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 10:43:56,118:INFO:Scoring test/hold-out set
2023-07-02 10:43:56,258:INFO:Visual Rendered Successfully
2023-07-02 10:43:56,416:INFO:plot_model() successfully completed......................................
2023-07-02 10:44:06,160:INFO:Initializing plot_model()
2023-07-02 10:44:06,160:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:44:06,160:INFO:Checking exceptions
2023-07-02 10:44:06,168:INFO:Preloading libraries
2023-07-02 10:44:06,168:INFO:Copying training dataset
2023-07-02 10:44:06,168:INFO:Plot type: auc
2023-07-02 10:44:06,312:INFO:Fitting Model
2023-07-02 10:44:06,312:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 10:44:06,312:INFO:Scoring test/hold-out set
2023-07-02 10:44:06,560:INFO:Visual Rendered Successfully
2023-07-02 10:44:06,844:INFO:plot_model() successfully completed......................................
2023-07-02 10:44:23,512:INFO:Initializing create_model()
2023-07-02 10:44:23,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:44:23,512:INFO:Checking exceptions
2023-07-02 10:44:23,573:INFO:Importing libraries
2023-07-02 10:44:23,577:INFO:Copying training dataset
2023-07-02 10:44:23,585:INFO:Defining folds
2023-07-02 10:44:23,585:INFO:Declaring metric variables
2023-07-02 10:44:23,593:INFO:Importing untrained model
2023-07-02 10:44:23,601:INFO:Logistic Regression Imported successfully
2023-07-02 10:44:23,617:INFO:Starting cross validation
2023-07-02 10:44:23,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:44:35,360:INFO:Calculating mean and std
2023-07-02 10:44:35,364:INFO:Creating metrics dataframe
2023-07-02 10:44:35,372:INFO:Finalizing model
2023-07-02 10:44:36,688:INFO:Uploading results into container
2023-07-02 10:44:36,688:INFO:Uploading model into container now
2023-07-02 10:44:36,704:INFO:_master_model_container: 35
2023-07-02 10:44:36,704:INFO:_display_container: 9
2023-07-02 10:44:36,704:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:44:36,704:INFO:create_model() successfully completed......................................
2023-07-02 10:44:42,982:INFO:Initializing tune_model()
2023-07-02 10:44:42,982:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>)
2023-07-02 10:44:42,982:INFO:Checking exceptions
2023-07-02 10:44:43,027:INFO:Copying training dataset
2023-07-02 10:44:43,035:INFO:Checking base model
2023-07-02 10:44:43,035:INFO:Base model : Logistic Regression
2023-07-02 10:44:43,043:INFO:Declaring metric variables
2023-07-02 10:44:43,051:INFO:Defining Hyperparameters
2023-07-02 10:44:43,215:INFO:Tuning with n_jobs=-1
2023-07-02 10:44:43,215:INFO:Initializing RandomizedSearchCV
2023-07-02 10:46:16,307:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 4.003}
2023-07-02 10:46:16,307:INFO:Hyperparameter search completed
2023-07-02 10:46:16,307:INFO:SubProcess create_model() called ==================================
2023-07-02 10:46:16,307:INFO:Initializing create_model()
2023-07-02 10:46:16,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B14006A0>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 4.003})
2023-07-02 10:46:16,311:INFO:Checking exceptions
2023-07-02 10:46:16,311:INFO:Importing libraries
2023-07-02 10:46:16,311:INFO:Copying training dataset
2023-07-02 10:46:16,319:INFO:Defining folds
2023-07-02 10:46:16,319:INFO:Declaring metric variables
2023-07-02 10:46:16,327:INFO:Importing untrained model
2023-07-02 10:46:16,327:INFO:Declaring custom model
2023-07-02 10:46:16,335:INFO:Logistic Regression Imported successfully
2023-07-02 10:46:16,347:INFO:Starting cross validation
2023-07-02 10:46:16,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:46:24,602:INFO:Calculating mean and std
2023-07-02 10:46:24,602:INFO:Creating metrics dataframe
2023-07-02 10:46:24,610:INFO:Finalizing model
2023-07-02 10:46:25,823:INFO:Uploading results into container
2023-07-02 10:46:25,827:INFO:Uploading model into container now
2023-07-02 10:46:25,827:INFO:_master_model_container: 36
2023-07-02 10:46:25,827:INFO:_display_container: 10
2023-07-02 10:46:25,827:INFO:LogisticRegression(C=4.003, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:46:25,827:INFO:create_model() successfully completed......................................
2023-07-02 10:46:25,956:INFO:SubProcess create_model() end ==================================
2023-07-02 10:46:25,956:INFO:choose_better activated
2023-07-02 10:46:25,956:INFO:SubProcess create_model() called ==================================
2023-07-02 10:46:25,960:INFO:Initializing create_model()
2023-07-02 10:46:25,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:46:25,960:INFO:Checking exceptions
2023-07-02 10:46:25,960:INFO:Importing libraries
2023-07-02 10:46:25,964:INFO:Copying training dataset
2023-07-02 10:46:25,968:INFO:Defining folds
2023-07-02 10:46:25,968:INFO:Declaring metric variables
2023-07-02 10:46:25,968:INFO:Importing untrained model
2023-07-02 10:46:25,968:INFO:Declaring custom model
2023-07-02 10:46:25,968:INFO:Logistic Regression Imported successfully
2023-07-02 10:46:25,972:INFO:Starting cross validation
2023-07-02 10:46:25,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:46:34,298:INFO:Calculating mean and std
2023-07-02 10:46:34,298:INFO:Creating metrics dataframe
2023-07-02 10:46:34,298:INFO:Finalizing model
2023-07-02 10:46:35,675:INFO:Uploading results into container
2023-07-02 10:46:35,675:INFO:Uploading model into container now
2023-07-02 10:46:35,675:INFO:_master_model_container: 37
2023-07-02 10:46:35,675:INFO:_display_container: 11
2023-07-02 10:46:35,675:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:46:35,675:INFO:create_model() successfully completed......................................
2023-07-02 10:46:35,799:INFO:SubProcess create_model() end ==================================
2023-07-02 10:46:35,799:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7605
2023-07-02 10:46:35,803:INFO:LogisticRegression(C=4.003, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7703
2023-07-02 10:46:35,803:INFO:LogisticRegression(C=4.003, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-07-02 10:46:35,803:INFO:choose_better completed
2023-07-02 10:46:35,815:INFO:_master_model_container: 37
2023-07-02 10:46:35,815:INFO:_display_container: 10
2023-07-02 10:46:35,815:INFO:LogisticRegression(C=4.003, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 10:46:35,815:INFO:tune_model() successfully completed......................................
2023-07-02 10:46:36,729:INFO:Initializing plot_model()
2023-07-02 10:46:36,729:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:46:36,729:INFO:Checking exceptions
2023-07-02 10:46:36,740:INFO:Preloading libraries
2023-07-02 10:46:36,740:INFO:Copying training dataset
2023-07-02 10:46:36,740:INFO:Plot type: manifold
2023-07-02 10:46:36,841:INFO:Fitting & Transforming Model
2023-07-02 10:46:36,841:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 10:46:36,873:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 10:46:38,736:INFO:Visual Rendered Successfully
2023-07-02 10:46:38,865:INFO:plot_model() successfully completed......................................
2023-07-02 10:46:38,881:INFO:Initializing plot_model()
2023-07-02 10:46:38,881:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:46:38,881:INFO:Checking exceptions
2023-07-02 10:46:38,889:INFO:Preloading libraries
2023-07-02 10:46:38,889:INFO:Copying training dataset
2023-07-02 10:46:38,889:INFO:Plot type: feature
2023-07-02 10:46:39,033:INFO:Visual Rendered Successfully
2023-07-02 10:46:39,161:INFO:plot_model() successfully completed......................................
2023-07-02 10:46:39,182:INFO:Initializing plot_model()
2023-07-02 10:46:39,182:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:46:39,182:INFO:Checking exceptions
2023-07-02 10:46:39,185:INFO:Preloading libraries
2023-07-02 10:46:39,186:INFO:Copying training dataset
2023-07-02 10:46:39,186:INFO:Plot type: confusion_matrix
2023-07-02 10:46:39,270:INFO:Fitting Model
2023-07-02 10:46:39,270:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 10:46:39,270:INFO:Scoring test/hold-out set
2023-07-02 10:46:39,370:INFO:Visual Rendered Successfully
2023-07-02 10:46:39,494:INFO:plot_model() successfully completed......................................
2023-07-02 10:46:39,502:INFO:Initializing plot_model()
2023-07-02 10:46:39,502:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:46:39,502:INFO:Checking exceptions
2023-07-02 10:46:39,506:INFO:Preloading libraries
2023-07-02 10:46:39,506:INFO:Copying training dataset
2023-07-02 10:46:39,506:INFO:Plot type: auc
2023-07-02 10:46:39,586:INFO:Fitting Model
2023-07-02 10:46:39,586:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 10:46:39,586:INFO:Scoring test/hold-out set
2023-07-02 10:46:39,755:INFO:Visual Rendered Successfully
2023-07-02 10:46:39,879:INFO:plot_model() successfully completed......................................
2023-07-02 10:47:27,766:INFO:Initializing plot_model()
2023-07-02 10:47:27,766:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=4.003, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:47:27,766:INFO:Checking exceptions
2023-07-02 10:47:27,776:INFO:Preloading libraries
2023-07-02 10:47:27,777:INFO:Copying training dataset
2023-07-02 10:47:27,777:INFO:Plot type: manifold
2023-07-02 10:47:27,930:INFO:Fitting & Transforming Model
2023-07-02 10:47:27,930:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 10:47:27,974:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 10:47:30,872:INFO:Visual Rendered Successfully
2023-07-02 10:47:31,022:INFO:plot_model() successfully completed......................................
2023-07-02 10:47:31,046:INFO:Initializing plot_model()
2023-07-02 10:47:31,050:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:47:31,050:INFO:Checking exceptions
2023-07-02 10:47:31,054:INFO:Preloading libraries
2023-07-02 10:47:31,054:INFO:Copying training dataset
2023-07-02 10:47:31,054:INFO:Plot type: feature
2023-07-02 10:47:31,258:INFO:Visual Rendered Successfully
2023-07-02 10:47:31,398:INFO:plot_model() successfully completed......................................
2023-07-02 10:47:39,845:INFO:Initializing plot_model()
2023-07-02 10:47:39,845:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=4.003, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:47:39,845:INFO:Checking exceptions
2023-07-02 10:47:39,853:INFO:Preloading libraries
2023-07-02 10:47:39,853:INFO:Copying training dataset
2023-07-02 10:47:39,853:INFO:Plot type: feature
2023-07-02 10:47:40,057:INFO:Visual Rendered Successfully
2023-07-02 10:47:40,198:INFO:plot_model() successfully completed......................................
2023-07-02 10:47:46,453:INFO:Initializing plot_model()
2023-07-02 10:47:46,453:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=4.003, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:47:46,455:INFO:Checking exceptions
2023-07-02 10:47:46,461:INFO:Preloading libraries
2023-07-02 10:47:46,462:INFO:Copying training dataset
2023-07-02 10:47:46,462:INFO:Plot type: confusion_matrix
2023-07-02 10:47:46,582:INFO:Fitting Model
2023-07-02 10:47:46,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 10:47:46,582:INFO:Scoring test/hold-out set
2023-07-02 10:47:46,722:INFO:Visual Rendered Successfully
2023-07-02 10:47:46,935:INFO:plot_model() successfully completed......................................
2023-07-02 10:48:44,391:INFO:Initializing create_model()
2023-07-02 10:48:44,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:48:44,395:INFO:Checking exceptions
2023-07-02 10:48:44,451:INFO:Importing libraries
2023-07-02 10:48:44,451:INFO:Copying training dataset
2023-07-02 10:48:44,467:INFO:Defining folds
2023-07-02 10:48:44,467:INFO:Declaring metric variables
2023-07-02 10:48:44,475:INFO:Importing untrained model
2023-07-02 10:48:44,483:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:48:44,495:INFO:Starting cross validation
2023-07-02 10:48:44,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:48:54,848:INFO:Calculating mean and std
2023-07-02 10:48:54,852:INFO:Creating metrics dataframe
2023-07-02 10:48:54,860:INFO:Finalizing model
2023-07-02 10:48:56,324:INFO:Uploading results into container
2023-07-02 10:48:56,324:INFO:Uploading model into container now
2023-07-02 10:48:56,340:INFO:_master_model_container: 38
2023-07-02 10:48:56,340:INFO:_display_container: 11
2023-07-02 10:48:56,340:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:48:56,344:INFO:create_model() successfully completed......................................
2023-07-02 10:49:05,114:INFO:Initializing tune_model()
2023-07-02 10:49:05,114:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>)
2023-07-02 10:49:05,114:INFO:Checking exceptions
2023-07-02 10:49:05,179:INFO:Copying training dataset
2023-07-02 10:49:05,187:INFO:Checking base model
2023-07-02 10:49:05,187:INFO:Base model : Random Forest Classifier
2023-07-02 10:49:05,195:INFO:Declaring metric variables
2023-07-02 10:49:05,199:INFO:Defining Hyperparameters
2023-07-02 10:49:05,411:INFO:Tuning with n_jobs=-1
2023-07-02 10:49:05,411:INFO:Initializing RandomizedSearchCV
2023-07-02 10:50:42,756:INFO:best_params: {'actual_estimator__n_estimators': 60, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2023-07-02 10:50:42,760:INFO:Hyperparameter search completed
2023-07-02 10:50:42,760:INFO:SubProcess create_model() called ==================================
2023-07-02 10:50:42,760:INFO:Initializing create_model()
2023-07-02 10:50:42,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1B143DD60>, model_only=True, return_train_score=False, kwargs={'n_estimators': 60, 'min_samples_split': 2, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'entropy', 'class_weight': 'balanced', 'bootstrap': True})
2023-07-02 10:50:42,760:INFO:Checking exceptions
2023-07-02 10:50:42,760:INFO:Importing libraries
2023-07-02 10:50:42,760:INFO:Copying training dataset
2023-07-02 10:50:42,772:INFO:Defining folds
2023-07-02 10:50:42,772:INFO:Declaring metric variables
2023-07-02 10:50:42,780:INFO:Importing untrained model
2023-07-02 10:50:42,780:INFO:Declaring custom model
2023-07-02 10:50:42,788:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:50:42,804:INFO:Starting cross validation
2023-07-02 10:50:42,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:50:51,688:INFO:Calculating mean and std
2023-07-02 10:50:51,692:INFO:Creating metrics dataframe
2023-07-02 10:50:51,700:INFO:Finalizing model
2023-07-02 10:50:52,967:INFO:Uploading results into container
2023-07-02 10:50:52,967:INFO:Uploading model into container now
2023-07-02 10:50:52,967:INFO:_master_model_container: 39
2023-07-02 10:50:52,967:INFO:_display_container: 12
2023-07-02 10:50:52,967:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:50:52,971:INFO:create_model() successfully completed......................................
2023-07-02 10:50:53,091:INFO:SubProcess create_model() end ==================================
2023-07-02 10:50:53,095:INFO:choose_better activated
2023-07-02 10:50:53,099:INFO:SubProcess create_model() called ==================================
2023-07-02 10:50:53,099:INFO:Initializing create_model()
2023-07-02 10:50:53,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 10:50:53,099:INFO:Checking exceptions
2023-07-02 10:50:53,099:INFO:Importing libraries
2023-07-02 10:50:53,099:INFO:Copying training dataset
2023-07-02 10:50:53,103:INFO:Defining folds
2023-07-02 10:50:53,103:INFO:Declaring metric variables
2023-07-02 10:50:53,103:INFO:Importing untrained model
2023-07-02 10:50:53,107:INFO:Declaring custom model
2023-07-02 10:50:53,107:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:50:53,107:INFO:Starting cross validation
2023-07-02 10:50:53,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 10:51:01,751:INFO:Calculating mean and std
2023-07-02 10:51:01,751:INFO:Creating metrics dataframe
2023-07-02 10:51:01,755:INFO:Finalizing model
2023-07-02 10:51:03,043:INFO:Uploading results into container
2023-07-02 10:51:03,043:INFO:Uploading model into container now
2023-07-02 10:51:03,043:INFO:_master_model_container: 40
2023-07-02 10:51:03,043:INFO:_display_container: 13
2023-07-02 10:51:03,043:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:51:03,043:INFO:create_model() successfully completed......................................
2023-07-02 10:51:03,163:INFO:SubProcess create_model() end ==================================
2023-07-02 10:51:03,163:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False) result for Accuracy is 0.7622
2023-07-02 10:51:03,163:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False) result for Accuracy is 0.772
2023-07-02 10:51:03,167:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False) is best model
2023-07-02 10:51:03,167:INFO:choose_better completed
2023-07-02 10:51:03,175:INFO:_master_model_container: 40
2023-07-02 10:51:03,179:INFO:_display_container: 12
2023-07-02 10:51:03,179:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:51:03,179:INFO:tune_model() successfully completed......................................
2023-07-02 10:52:04,751:INFO:Initializing plot_model()
2023-07-02 10:52:04,755:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:52:04,755:INFO:Checking exceptions
2023-07-02 10:52:04,791:INFO:Preloading libraries
2023-07-02 10:52:04,807:INFO:Copying training dataset
2023-07-02 10:52:04,807:INFO:Plot type: confusion_matrix
2023-07-02 10:52:04,931:INFO:Fitting Model
2023-07-02 10:52:04,931:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 10:52:04,931:INFO:Scoring test/hold-out set
2023-07-02 10:52:05,140:INFO:Visual Rendered Successfully
2023-07-02 10:52:05,397:INFO:plot_model() successfully completed......................................
2023-07-02 10:52:08,306:INFO:Initializing plot_model()
2023-07-02 10:52:08,306:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:52:08,306:INFO:Checking exceptions
2023-07-02 10:52:08,346:INFO:Preloading libraries
2023-07-02 10:52:08,358:INFO:Copying training dataset
2023-07-02 10:52:08,358:INFO:Plot type: feature
2023-07-02 10:52:08,358:WARNING:No coef_ found. Trying feature_importances_
2023-07-02 10:52:08,595:INFO:Visual Rendered Successfully
2023-07-02 10:52:08,871:INFO:plot_model() successfully completed......................................
2023-07-02 10:52:11,721:INFO:Initializing plot_model()
2023-07-02 10:52:11,721:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:52:11,721:INFO:Checking exceptions
2023-07-02 10:52:11,753:INFO:Preloading libraries
2023-07-02 10:52:11,761:INFO:Copying training dataset
2023-07-02 10:52:11,761:INFO:Plot type: manifold
2023-07-02 10:52:11,905:INFO:Fitting & Transforming Model
2023-07-02 10:52:11,905:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 10:52:11,949:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 10:52:14,711:INFO:Visual Rendered Successfully
2023-07-02 10:52:14,859:INFO:plot_model() successfully completed......................................
2023-07-02 10:52:15,800:INFO:Initializing plot_model()
2023-07-02 10:52:15,800:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:52:15,800:INFO:Checking exceptions
2023-07-02 10:52:15,841:INFO:Preloading libraries
2023-07-02 10:52:15,853:INFO:Copying training dataset
2023-07-02 10:52:15,853:INFO:Plot type: auc
2023-07-02 10:52:15,961:INFO:Fitting Model
2023-07-02 10:52:15,961:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 10:52:15,961:INFO:Scoring test/hold-out set
2023-07-02 10:52:16,290:INFO:Visual Rendered Successfully
2023-07-02 10:52:16,503:INFO:plot_model() successfully completed......................................
2023-07-02 10:52:19,749:INFO:Initializing plot_model()
2023-07-02 10:52:19,749:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, system=True)
2023-07-02 10:52:19,749:INFO:Checking exceptions
2023-07-02 10:52:19,781:INFO:Preloading libraries
2023-07-02 10:52:19,797:INFO:Copying training dataset
2023-07-02 10:52:19,797:INFO:Plot type: pr
2023-07-02 10:52:19,941:INFO:Fitting Model
2023-07-02 10:52:19,941:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 10:52:19,941:INFO:Scoring test/hold-out set
2023-07-02 10:52:20,235:INFO:Visual Rendered Successfully
2023-07-02 10:52:20,387:INFO:plot_model() successfully completed......................................
2023-07-02 10:52:22,904:INFO:Initializing predict_model()
2023-07-02 10:52:22,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001F1BF690040>)
2023-07-02 10:52:22,904:INFO:Checking exceptions
2023-07-02 10:52:22,906:INFO:Preloading libraries
2023-07-02 10:52:28,471:INFO:Initializing finalize_model()
2023-07-02 10:52:28,475:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 10:52:28,475:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False)
2023-07-02 10:52:28,479:INFO:Initializing create_model()
2023-07-02 10:52:28,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF795AF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=60, n_jobs=-1, oob_score=False,
                       random_state=8402, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 10:52:28,483:INFO:Checking exceptions
2023-07-02 10:52:28,485:INFO:Importing libraries
2023-07-02 10:52:28,485:INFO:Copying training dataset
2023-07-02 10:52:28,485:INFO:Defining folds
2023-07-02 10:52:28,485:INFO:Declaring metric variables
2023-07-02 10:52:28,485:INFO:Importing untrained model
2023-07-02 10:52:28,487:INFO:Declaring custom model
2023-07-02 10:52:28,487:INFO:Random Forest Classifier Imported successfully
2023-07-02 10:52:28,487:INFO:Cross validation set to False
2023-07-02 10:52:28,487:INFO:Fitting Model
2023-07-02 10:52:28,555:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='entropy', max_depth=4,
                                        max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=5, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=60, n_jobs=-1,
                                        oob_score=False, random_state=8402,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-07-02 10:52:28,555:INFO:create_model() successfully completed......................................
2023-07-02 10:52:28,736:INFO:_master_model_container: 40
2023-07-02 10:52:28,736:INFO:_display_container: 13
2023-07-02 10:52:28,748:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='entropy', max_depth=4,
                                        max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=5, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=60, n_jobs=-1,
                                        oob_score=False, random_state=8402,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-07-02 10:52:28,748:INFO:finalize_model() successfully completed......................................
2023-07-02 13:14:52,403:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-02 13:14:52,797:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-02 13:14:57,214:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-02 13:15:01,935:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-02 13:15:21,268:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-02 13:15:55,889:INFO:PyCaret ClassificationExperiment
2023-07-02 13:15:55,889:INFO:Logging name: clf-default-name
2023-07-02 13:15:55,889:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 13:15:55,889:INFO:version 3.0.0
2023-07-02 13:15:55,890:INFO:Initializing setup()
2023-07-02 13:15:55,890:INFO:self.USI: cf66
2023-07-02 13:15:55,890:INFO:self._variable_keys: {'USI', 'fold_generator', 'seed', 'html_param', 'target_param', 'is_multiclass', 'logging_param', 'X', 'n_jobs_param', 'idx', 'pipeline', 'fix_imbalance', '_ml_usecase', '_available_plots', 'exp_name_log', 'exp_id', 'log_plots_param', 'y_test', 'gpu_param', 'X_test', 'X_train', 'y', 'memory', 'y_train', 'data', 'gpu_n_jobs_param', 'fold_shuffle_param', 'fold_groups_param'}
2023-07-02 13:15:55,890:INFO:Checking environment
2023-07-02 13:15:55,890:INFO:python_version: 3.9.13
2023-07-02 13:15:55,890:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 13:15:55,890:INFO:machine: AMD64
2023-07-02 13:15:55,890:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 13:15:55,890:INFO:Memory: svmem(total=16456249344, available=2204598272, percent=86.6, used=14251651072, free=2204598272)
2023-07-02 13:15:55,890:INFO:Physical Core: 6
2023-07-02 13:15:55,890:INFO:Logical Core: 12
2023-07-02 13:15:55,890:INFO:Checking libraries
2023-07-02 13:15:55,890:INFO:System:
2023-07-02 13:15:55,890:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 13:15:55,891:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 13:15:55,891:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 13:15:55,891:INFO:PyCaret required dependencies:
2023-07-02 13:15:55,891:INFO:                 pip: 22.2.2
2023-07-02 13:15:55,891:INFO:          setuptools: 63.4.1
2023-07-02 13:15:55,891:INFO:             pycaret: 3.0.0
2023-07-02 13:15:55,891:INFO:             IPython: 7.31.1
2023-07-02 13:15:55,891:INFO:          ipywidgets: 7.6.5
2023-07-02 13:15:55,891:INFO:                tqdm: 4.64.1
2023-07-02 13:15:55,891:INFO:               numpy: 1.21.5
2023-07-02 13:15:55,891:INFO:              pandas: 1.4.4
2023-07-02 13:15:55,891:INFO:              jinja2: 3.1.2
2023-07-02 13:15:55,891:INFO:               scipy: 1.9.1
2023-07-02 13:15:55,891:INFO:              joblib: 1.2.0
2023-07-02 13:15:55,891:INFO:             sklearn: 1.0.2
2023-07-02 13:15:55,891:INFO:                pyod: 1.0.9
2023-07-02 13:15:55,891:INFO:            imblearn: 0.10.1
2023-07-02 13:15:55,891:INFO:   category_encoders: 2.6.0
2023-07-02 13:15:55,891:INFO:            lightgbm: 3.3.5
2023-07-02 13:15:55,891:INFO:               numba: 0.55.1
2023-07-02 13:15:55,891:INFO:            requests: 2.28.1
2023-07-02 13:15:55,891:INFO:          matplotlib: 3.5.2
2023-07-02 13:15:55,892:INFO:          scikitplot: 0.3.7
2023-07-02 13:15:55,892:INFO:         yellowbrick: 1.5
2023-07-02 13:15:55,892:INFO:              plotly: 5.9.0
2023-07-02 13:15:55,892:INFO:             kaleido: 0.2.1
2023-07-02 13:15:55,892:INFO:         statsmodels: 0.13.2
2023-07-02 13:15:55,892:INFO:              sktime: 0.16.1
2023-07-02 13:15:55,892:INFO:               tbats: 1.1.2
2023-07-02 13:15:55,892:INFO:            pmdarima: 2.0.3
2023-07-02 13:15:55,892:INFO:              psutil: 5.9.0
2023-07-02 13:15:55,892:INFO:PyCaret optional dependencies:
2023-07-02 13:15:55,892:INFO:                shap: 0.41.0
2023-07-02 13:15:55,892:INFO:           interpret: Not installed
2023-07-02 13:15:55,892:INFO:                umap: Not installed
2023-07-02 13:15:55,892:INFO:    pandas_profiling: Not installed
2023-07-02 13:15:55,892:INFO:  explainerdashboard: Not installed
2023-07-02 13:15:55,892:INFO:             autoviz: Not installed
2023-07-02 13:15:55,893:INFO:           fairlearn: Not installed
2023-07-02 13:15:55,893:INFO:             xgboost: Not installed
2023-07-02 13:15:55,893:INFO:            catboost: Not installed
2023-07-02 13:15:55,893:INFO:              kmodes: Not installed
2023-07-02 13:15:55,893:INFO:             mlxtend: Not installed
2023-07-02 13:15:55,893:INFO:       statsforecast: Not installed
2023-07-02 13:15:55,893:INFO:        tune_sklearn: 0.4.5
2023-07-02 13:15:55,893:INFO:                 ray: 2.3.1
2023-07-02 13:15:55,893:INFO:            hyperopt: Not installed
2023-07-02 13:15:55,893:INFO:              optuna: 3.1.0
2023-07-02 13:15:55,893:INFO:               skopt: Not installed
2023-07-02 13:15:55,893:INFO:              mlflow: 2.2.2
2023-07-02 13:15:55,893:INFO:              gradio: 3.23.0
2023-07-02 13:15:55,893:INFO:             fastapi: 0.95.0
2023-07-02 13:15:55,893:INFO:             uvicorn: 0.21.1
2023-07-02 13:15:55,893:INFO:              m2cgen: Not installed
2023-07-02 13:15:55,893:INFO:           evidently: Not installed
2023-07-02 13:15:55,893:INFO:               fugue: Not installed
2023-07-02 13:15:55,893:INFO:           streamlit: 1.20.0
2023-07-02 13:15:55,893:INFO:             prophet: Not installed
2023-07-02 13:15:55,893:INFO:None
2023-07-02 13:15:55,894:INFO:Set up data.
2023-07-02 13:15:55,899:INFO:Set up train/test split.
2023-07-02 13:15:55,903:INFO:Set up index.
2023-07-02 13:15:55,904:INFO:Set up folding strategy.
2023-07-02 13:15:55,904:INFO:Assigning column types.
2023-07-02 13:15:55,907:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 13:15:55,962:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:15:55,964:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:15:55,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:55,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:15:56,051:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:15:56,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,082:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 13:15:56,132:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:15:56,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,218:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:15:56,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,258:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 13:15:56,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,450:INFO:Preparing preprocessing pipeline...
2023-07-02 13:15:56,451:INFO:Set up simple imputation.
2023-07-02 13:15:56,451:INFO:Set up feature normalization.
2023-07-02 13:15:56,474:INFO:Finished creating preprocessing pipeline.
2023-07-02 13:15:56,478:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strate...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 13:15:56,478:INFO:Creating final display dataframe.
2023-07-02 13:15:56,561:INFO:Setup _display_container:                     Description             Value
0                    Session id              1671
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (614, 9)
6    Transformed test set shape          (154, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              cf66
2023-07-02 13:15:56,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:15:56,747:INFO:setup() successfully completed in 1.64s...............
2023-07-02 13:16:00,118:INFO:Initializing compare_models()
2023-07-02 13:16:00,118:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 13:16:00,118:INFO:Checking exceptions
2023-07-02 13:16:00,121:INFO:Preparing display monitor
2023-07-02 13:16:00,160:INFO:Initializing Logistic Regression
2023-07-02 13:16:00,160:INFO:Total runtime is 0.0 minutes
2023-07-02 13:16:00,164:INFO:SubProcess create_model() called ==================================
2023-07-02 13:16:00,165:INFO:Initializing create_model()
2023-07-02 13:16:00,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:16:00,165:INFO:Checking exceptions
2023-07-02 13:16:00,165:INFO:Importing libraries
2023-07-02 13:16:00,165:INFO:Copying training dataset
2023-07-02 13:16:00,169:INFO:Defining folds
2023-07-02 13:16:00,169:INFO:Declaring metric variables
2023-07-02 13:16:00,173:INFO:Importing untrained model
2023-07-02 13:16:00,177:INFO:Logistic Regression Imported successfully
2023-07-02 13:16:00,185:INFO:Starting cross validation
2023-07-02 13:16:00,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:16:18,369:INFO:Calculating mean and std
2023-07-02 13:16:18,371:INFO:Creating metrics dataframe
2023-07-02 13:16:19,567:INFO:Uploading results into container
2023-07-02 13:16:19,568:INFO:Uploading model into container now
2023-07-02 13:16:19,569:INFO:_master_model_container: 1
2023-07-02 13:16:19,569:INFO:_display_container: 2
2023-07-02 13:16:19,569:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1671, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:16:19,570:INFO:create_model() successfully completed......................................
2023-07-02 13:16:19,703:INFO:SubProcess create_model() end ==================================
2023-07-02 13:16:19,703:INFO:Creating metrics dataframe
2023-07-02 13:16:19,713:INFO:Initializing K Neighbors Classifier
2023-07-02 13:16:19,713:INFO:Total runtime is 0.3258844097455343 minutes
2023-07-02 13:16:19,718:INFO:SubProcess create_model() called ==================================
2023-07-02 13:16:19,718:INFO:Initializing create_model()
2023-07-02 13:16:19,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:16:19,719:INFO:Checking exceptions
2023-07-02 13:16:19,719:INFO:Importing libraries
2023-07-02 13:16:19,719:INFO:Copying training dataset
2023-07-02 13:16:19,724:INFO:Defining folds
2023-07-02 13:16:19,724:INFO:Declaring metric variables
2023-07-02 13:16:19,730:INFO:Importing untrained model
2023-07-02 13:16:19,734:INFO:K Neighbors Classifier Imported successfully
2023-07-02 13:16:19,744:INFO:Starting cross validation
2023-07-02 13:16:19,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:16:19,888:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:19,895:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:19,902:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:19,909:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:19,916:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:19,928:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:19,931:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:19,942:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:24,710:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:24,715:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:16:30,278:INFO:Calculating mean and std
2023-07-02 13:16:30,280:INFO:Creating metrics dataframe
2023-07-02 13:16:31,421:INFO:Uploading results into container
2023-07-02 13:16:31,422:INFO:Uploading model into container now
2023-07-02 13:16:31,422:INFO:_master_model_container: 2
2023-07-02 13:16:31,422:INFO:_display_container: 2
2023-07-02 13:16:31,422:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 13:16:31,423:INFO:create_model() successfully completed......................................
2023-07-02 13:16:31,561:INFO:SubProcess create_model() end ==================================
2023-07-02 13:16:31,562:INFO:Creating metrics dataframe
2023-07-02 13:16:31,571:INFO:Initializing Naive Bayes
2023-07-02 13:16:31,571:INFO:Total runtime is 0.5235151847203573 minutes
2023-07-02 13:16:31,574:INFO:SubProcess create_model() called ==================================
2023-07-02 13:16:31,575:INFO:Initializing create_model()
2023-07-02 13:16:31,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:16:31,575:INFO:Checking exceptions
2023-07-02 13:16:31,575:INFO:Importing libraries
2023-07-02 13:16:31,575:INFO:Copying training dataset
2023-07-02 13:16:31,580:INFO:Defining folds
2023-07-02 13:16:31,580:INFO:Declaring metric variables
2023-07-02 13:16:31,584:INFO:Importing untrained model
2023-07-02 13:16:31,588:INFO:Naive Bayes Imported successfully
2023-07-02 13:16:31,598:INFO:Starting cross validation
2023-07-02 13:16:31,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:16:40,543:INFO:Calculating mean and std
2023-07-02 13:16:40,545:INFO:Creating metrics dataframe
2023-07-02 13:16:42,784:INFO:Uploading results into container
2023-07-02 13:16:42,787:INFO:Uploading model into container now
2023-07-02 13:16:42,788:INFO:_master_model_container: 3
2023-07-02 13:16:42,789:INFO:_display_container: 2
2023-07-02 13:16:42,789:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 13:16:42,790:INFO:create_model() successfully completed......................................
2023-07-02 13:16:43,064:INFO:SubProcess create_model() end ==================================
2023-07-02 13:16:43,065:INFO:Creating metrics dataframe
2023-07-02 13:16:43,084:INFO:Initializing Decision Tree Classifier
2023-07-02 13:16:43,085:INFO:Total runtime is 0.7154156486193339 minutes
2023-07-02 13:16:43,093:INFO:SubProcess create_model() called ==================================
2023-07-02 13:16:43,094:INFO:Initializing create_model()
2023-07-02 13:16:43,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:16:43,095:INFO:Checking exceptions
2023-07-02 13:16:43,095:INFO:Importing libraries
2023-07-02 13:16:43,095:INFO:Copying training dataset
2023-07-02 13:16:43,108:INFO:Defining folds
2023-07-02 13:16:43,116:INFO:Declaring metric variables
2023-07-02 13:16:43,124:INFO:Importing untrained model
2023-07-02 13:16:43,133:INFO:Decision Tree Classifier Imported successfully
2023-07-02 13:16:43,151:INFO:Starting cross validation
2023-07-02 13:16:43,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:16:53,937:INFO:Calculating mean and std
2023-07-02 13:16:53,939:INFO:Creating metrics dataframe
2023-07-02 13:16:54,941:INFO:Uploading results into container
2023-07-02 13:16:54,941:INFO:Uploading model into container now
2023-07-02 13:16:54,942:INFO:_master_model_container: 4
2023-07-02 13:16:54,942:INFO:_display_container: 2
2023-07-02 13:16:54,942:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1671, splitter='best')
2023-07-02 13:16:54,942:INFO:create_model() successfully completed......................................
2023-07-02 13:16:55,064:INFO:SubProcess create_model() end ==================================
2023-07-02 13:16:55,065:INFO:Creating metrics dataframe
2023-07-02 13:16:55,074:INFO:Initializing SVM - Linear Kernel
2023-07-02 13:16:55,075:INFO:Total runtime is 0.9152313431104024 minutes
2023-07-02 13:16:55,078:INFO:SubProcess create_model() called ==================================
2023-07-02 13:16:55,079:INFO:Initializing create_model()
2023-07-02 13:16:55,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:16:55,079:INFO:Checking exceptions
2023-07-02 13:16:55,079:INFO:Importing libraries
2023-07-02 13:16:55,079:INFO:Copying training dataset
2023-07-02 13:16:55,084:INFO:Defining folds
2023-07-02 13:16:55,084:INFO:Declaring metric variables
2023-07-02 13:16:55,088:INFO:Importing untrained model
2023-07-02 13:16:55,093:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 13:16:55,103:INFO:Starting cross validation
2023-07-02 13:16:55,104:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:16:55,202:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,203:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,209:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,216:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,218:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,232:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,243:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,248:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,256:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:16:55,265:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:17:02,708:INFO:Calculating mean and std
2023-07-02 13:17:02,710:INFO:Creating metrics dataframe
2023-07-02 13:17:03,707:INFO:Uploading results into container
2023-07-02 13:17:03,708:INFO:Uploading model into container now
2023-07-02 13:17:03,708:INFO:_master_model_container: 5
2023-07-02 13:17:03,708:INFO:_display_container: 2
2023-07-02 13:17:03,709:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1671, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 13:17:03,709:INFO:create_model() successfully completed......................................
2023-07-02 13:17:03,826:INFO:SubProcess create_model() end ==================================
2023-07-02 13:17:03,827:INFO:Creating metrics dataframe
2023-07-02 13:17:03,835:INFO:Initializing Ridge Classifier
2023-07-02 13:17:03,836:INFO:Total runtime is 1.0612611571947734 minutes
2023-07-02 13:17:03,839:INFO:SubProcess create_model() called ==================================
2023-07-02 13:17:03,840:INFO:Initializing create_model()
2023-07-02 13:17:03,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:17:03,840:INFO:Checking exceptions
2023-07-02 13:17:03,840:INFO:Importing libraries
2023-07-02 13:17:03,840:INFO:Copying training dataset
2023-07-02 13:17:03,845:INFO:Defining folds
2023-07-02 13:17:03,845:INFO:Declaring metric variables
2023-07-02 13:17:03,848:INFO:Importing untrained model
2023-07-02 13:17:03,853:INFO:Ridge Classifier Imported successfully
2023-07-02 13:17:03,862:INFO:Starting cross validation
2023-07-02 13:17:03,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:17:03,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:03,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:03,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:03,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:03,987:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:03,993:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:04,001:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:04,009:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:04,016:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:04,023:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:17:11,024:INFO:Calculating mean and std
2023-07-02 13:17:11,026:INFO:Creating metrics dataframe
2023-07-02 13:17:12,024:INFO:Uploading results into container
2023-07-02 13:17:12,026:INFO:Uploading model into container now
2023-07-02 13:17:12,026:INFO:_master_model_container: 6
2023-07-02 13:17:12,026:INFO:_display_container: 2
2023-07-02 13:17:12,027:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1671, solver='auto', tol=0.001)
2023-07-02 13:17:12,027:INFO:create_model() successfully completed......................................
2023-07-02 13:17:12,153:INFO:SubProcess create_model() end ==================================
2023-07-02 13:17:12,154:INFO:Creating metrics dataframe
2023-07-02 13:17:12,164:INFO:Initializing Random Forest Classifier
2023-07-02 13:17:12,164:INFO:Total runtime is 1.2000672777493795 minutes
2023-07-02 13:17:12,167:INFO:SubProcess create_model() called ==================================
2023-07-02 13:17:12,167:INFO:Initializing create_model()
2023-07-02 13:17:12,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:17:12,168:INFO:Checking exceptions
2023-07-02 13:17:12,168:INFO:Importing libraries
2023-07-02 13:17:12,168:INFO:Copying training dataset
2023-07-02 13:17:12,173:INFO:Defining folds
2023-07-02 13:17:12,174:INFO:Declaring metric variables
2023-07-02 13:17:12,177:INFO:Importing untrained model
2023-07-02 13:17:12,183:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:17:12,192:INFO:Starting cross validation
2023-07-02 13:17:12,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:17:20,575:INFO:Calculating mean and std
2023-07-02 13:17:20,577:INFO:Creating metrics dataframe
2023-07-02 13:17:21,622:INFO:Uploading results into container
2023-07-02 13:17:21,622:INFO:Uploading model into container now
2023-07-02 13:17:21,623:INFO:_master_model_container: 7
2023-07-02 13:17:21,623:INFO:_display_container: 2
2023-07-02 13:17:21,624:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False)
2023-07-02 13:17:21,624:INFO:create_model() successfully completed......................................
2023-07-02 13:17:21,744:INFO:SubProcess create_model() end ==================================
2023-07-02 13:17:21,744:INFO:Creating metrics dataframe
2023-07-02 13:17:21,754:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 13:17:21,754:INFO:Total runtime is 1.3598930398623148 minutes
2023-07-02 13:17:21,757:INFO:SubProcess create_model() called ==================================
2023-07-02 13:17:21,758:INFO:Initializing create_model()
2023-07-02 13:17:21,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:17:21,758:INFO:Checking exceptions
2023-07-02 13:17:21,758:INFO:Importing libraries
2023-07-02 13:17:21,758:INFO:Copying training dataset
2023-07-02 13:17:21,762:INFO:Defining folds
2023-07-02 13:17:21,763:INFO:Declaring metric variables
2023-07-02 13:17:21,766:INFO:Importing untrained model
2023-07-02 13:17:21,769:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 13:17:21,780:INFO:Starting cross validation
2023-07-02 13:17:21,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:17:29,618:INFO:Calculating mean and std
2023-07-02 13:17:29,620:INFO:Creating metrics dataframe
2023-07-02 13:17:30,754:INFO:Uploading results into container
2023-07-02 13:17:30,754:INFO:Uploading model into container now
2023-07-02 13:17:30,755:INFO:_master_model_container: 8
2023-07-02 13:17:30,755:INFO:_display_container: 2
2023-07-02 13:17:30,756:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 13:17:30,756:INFO:create_model() successfully completed......................................
2023-07-02 13:17:30,892:INFO:SubProcess create_model() end ==================================
2023-07-02 13:17:30,892:INFO:Creating metrics dataframe
2023-07-02 13:17:30,904:INFO:Initializing Ada Boost Classifier
2023-07-02 13:17:30,905:INFO:Total runtime is 1.51241717338562 minutes
2023-07-02 13:17:30,909:INFO:SubProcess create_model() called ==================================
2023-07-02 13:17:30,909:INFO:Initializing create_model()
2023-07-02 13:17:30,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:17:30,910:INFO:Checking exceptions
2023-07-02 13:17:30,910:INFO:Importing libraries
2023-07-02 13:17:30,910:INFO:Copying training dataset
2023-07-02 13:17:30,916:INFO:Defining folds
2023-07-02 13:17:30,917:INFO:Declaring metric variables
2023-07-02 13:17:30,922:INFO:Importing untrained model
2023-07-02 13:17:30,927:INFO:Ada Boost Classifier Imported successfully
2023-07-02 13:17:30,940:INFO:Starting cross validation
2023-07-02 13:17:30,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:17:38,620:INFO:Calculating mean and std
2023-07-02 13:17:38,622:INFO:Creating metrics dataframe
2023-07-02 13:17:39,615:INFO:Uploading results into container
2023-07-02 13:17:39,615:INFO:Uploading model into container now
2023-07-02 13:17:39,616:INFO:_master_model_container: 9
2023-07-02 13:17:39,616:INFO:_display_container: 2
2023-07-02 13:17:39,616:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1671)
2023-07-02 13:17:39,616:INFO:create_model() successfully completed......................................
2023-07-02 13:17:39,742:INFO:SubProcess create_model() end ==================================
2023-07-02 13:17:39,743:INFO:Creating metrics dataframe
2023-07-02 13:17:39,753:INFO:Initializing Gradient Boosting Classifier
2023-07-02 13:17:39,753:INFO:Total runtime is 1.6598732153574625 minutes
2023-07-02 13:17:39,756:INFO:SubProcess create_model() called ==================================
2023-07-02 13:17:39,757:INFO:Initializing create_model()
2023-07-02 13:17:39,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:17:39,757:INFO:Checking exceptions
2023-07-02 13:17:39,757:INFO:Importing libraries
2023-07-02 13:17:39,758:INFO:Copying training dataset
2023-07-02 13:17:39,762:INFO:Defining folds
2023-07-02 13:17:39,763:INFO:Declaring metric variables
2023-07-02 13:17:39,767:INFO:Importing untrained model
2023-07-02 13:17:39,772:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 13:17:39,781:INFO:Starting cross validation
2023-07-02 13:17:39,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:17:47,769:INFO:Calculating mean and std
2023-07-02 13:17:47,771:INFO:Creating metrics dataframe
2023-07-02 13:17:48,776:INFO:Uploading results into container
2023-07-02 13:17:48,777:INFO:Uploading model into container now
2023-07-02 13:17:48,778:INFO:_master_model_container: 10
2023-07-02 13:17:48,778:INFO:_display_container: 2
2023-07-02 13:17:48,778:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1671, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 13:17:48,778:INFO:create_model() successfully completed......................................
2023-07-02 13:17:48,898:INFO:SubProcess create_model() end ==================================
2023-07-02 13:17:48,898:INFO:Creating metrics dataframe
2023-07-02 13:17:48,908:INFO:Initializing Linear Discriminant Analysis
2023-07-02 13:17:48,908:INFO:Total runtime is 1.812462035814921 minutes
2023-07-02 13:17:48,911:INFO:SubProcess create_model() called ==================================
2023-07-02 13:17:48,912:INFO:Initializing create_model()
2023-07-02 13:17:48,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:17:48,912:INFO:Checking exceptions
2023-07-02 13:17:48,912:INFO:Importing libraries
2023-07-02 13:17:48,912:INFO:Copying training dataset
2023-07-02 13:17:48,917:INFO:Defining folds
2023-07-02 13:17:48,917:INFO:Declaring metric variables
2023-07-02 13:17:48,921:INFO:Importing untrained model
2023-07-02 13:17:48,925:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:17:48,934:INFO:Starting cross validation
2023-07-02 13:17:48,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:17:56,170:INFO:Calculating mean and std
2023-07-02 13:17:56,172:INFO:Creating metrics dataframe
2023-07-02 13:17:57,177:INFO:Uploading results into container
2023-07-02 13:17:57,178:INFO:Uploading model into container now
2023-07-02 13:17:57,179:INFO:_master_model_container: 11
2023-07-02 13:17:57,179:INFO:_display_container: 2
2023-07-02 13:17:57,179:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:17:57,179:INFO:create_model() successfully completed......................................
2023-07-02 13:17:57,298:INFO:SubProcess create_model() end ==================================
2023-07-02 13:17:57,298:INFO:Creating metrics dataframe
2023-07-02 13:17:57,308:INFO:Initializing Extra Trees Classifier
2023-07-02 13:17:57,308:INFO:Total runtime is 1.9524671276410421 minutes
2023-07-02 13:17:57,312:INFO:SubProcess create_model() called ==================================
2023-07-02 13:17:57,312:INFO:Initializing create_model()
2023-07-02 13:17:57,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:17:57,313:INFO:Checking exceptions
2023-07-02 13:17:57,313:INFO:Importing libraries
2023-07-02 13:17:57,313:INFO:Copying training dataset
2023-07-02 13:17:57,317:INFO:Defining folds
2023-07-02 13:17:57,317:INFO:Declaring metric variables
2023-07-02 13:17:57,320:INFO:Importing untrained model
2023-07-02 13:17:57,324:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:17:57,333:INFO:Starting cross validation
2023-07-02 13:17:57,334:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:18:05,744:INFO:Calculating mean and std
2023-07-02 13:18:05,746:INFO:Creating metrics dataframe
2023-07-02 13:18:06,738:INFO:Uploading results into container
2023-07-02 13:18:06,739:INFO:Uploading model into container now
2023-07-02 13:18:06,740:INFO:_master_model_container: 12
2023-07-02 13:18:06,740:INFO:_display_container: 2
2023-07-02 13:18:06,741:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1671, verbose=0, warm_start=False)
2023-07-02 13:18:06,741:INFO:create_model() successfully completed......................................
2023-07-02 13:18:06,858:INFO:SubProcess create_model() end ==================================
2023-07-02 13:18:06,859:INFO:Creating metrics dataframe
2023-07-02 13:18:06,869:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 13:18:06,870:INFO:Total runtime is 2.11182603041331 minutes
2023-07-02 13:18:06,873:INFO:SubProcess create_model() called ==================================
2023-07-02 13:18:06,873:INFO:Initializing create_model()
2023-07-02 13:18:06,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:18:06,873:INFO:Checking exceptions
2023-07-02 13:18:06,873:INFO:Importing libraries
2023-07-02 13:18:06,874:INFO:Copying training dataset
2023-07-02 13:18:06,878:INFO:Defining folds
2023-07-02 13:18:06,879:INFO:Declaring metric variables
2023-07-02 13:18:06,882:INFO:Importing untrained model
2023-07-02 13:18:06,886:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 13:18:06,894:INFO:Starting cross validation
2023-07-02 13:18:06,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:18:16,186:INFO:Calculating mean and std
2023-07-02 13:18:16,188:INFO:Creating metrics dataframe
2023-07-02 13:18:17,321:INFO:Uploading results into container
2023-07-02 13:18:17,322:INFO:Uploading model into container now
2023-07-02 13:18:17,323:INFO:_master_model_container: 13
2023-07-02 13:18:17,324:INFO:_display_container: 2
2023-07-02 13:18:17,324:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1671, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 13:18:17,324:INFO:create_model() successfully completed......................................
2023-07-02 13:18:17,461:INFO:SubProcess create_model() end ==================================
2023-07-02 13:18:17,461:INFO:Creating metrics dataframe
2023-07-02 13:18:17,476:INFO:Initializing Dummy Classifier
2023-07-02 13:18:17,476:INFO:Total runtime is 2.2885981003443403 minutes
2023-07-02 13:18:17,480:INFO:SubProcess create_model() called ==================================
2023-07-02 13:18:17,481:INFO:Initializing create_model()
2023-07-02 13:18:17,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF70CDF0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:18:17,481:INFO:Checking exceptions
2023-07-02 13:18:17,481:INFO:Importing libraries
2023-07-02 13:18:17,481:INFO:Copying training dataset
2023-07-02 13:18:17,487:INFO:Defining folds
2023-07-02 13:18:17,487:INFO:Declaring metric variables
2023-07-02 13:18:17,492:INFO:Importing untrained model
2023-07-02 13:18:17,497:INFO:Dummy Classifier Imported successfully
2023-07-02 13:18:17,509:INFO:Starting cross validation
2023-07-02 13:18:17,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:18:17,632:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,650:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,651:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,662:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,679:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,681:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,687:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,695:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,703:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:17,714:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:18:24,991:INFO:Calculating mean and std
2023-07-02 13:18:24,994:INFO:Creating metrics dataframe
2023-07-02 13:18:26,014:INFO:Uploading results into container
2023-07-02 13:18:26,015:INFO:Uploading model into container now
2023-07-02 13:18:26,015:INFO:_master_model_container: 14
2023-07-02 13:18:26,016:INFO:_display_container: 2
2023-07-02 13:18:26,016:INFO:DummyClassifier(constant=None, random_state=1671, strategy='prior')
2023-07-02 13:18:26,016:INFO:create_model() successfully completed......................................
2023-07-02 13:18:26,138:INFO:SubProcess create_model() end ==================================
2023-07-02 13:18:26,138:INFO:Creating metrics dataframe
2023-07-02 13:18:26,160:INFO:Initializing create_model()
2023-07-02 13:18:26,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:18:26,160:INFO:Checking exceptions
2023-07-02 13:18:26,162:INFO:Importing libraries
2023-07-02 13:18:26,162:INFO:Copying training dataset
2023-07-02 13:18:26,167:INFO:Defining folds
2023-07-02 13:18:26,167:INFO:Declaring metric variables
2023-07-02 13:18:26,167:INFO:Importing untrained model
2023-07-02 13:18:26,167:INFO:Declaring custom model
2023-07-02 13:18:26,167:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:18:26,168:INFO:Cross validation set to False
2023-07-02 13:18:26,168:INFO:Fitting Model
2023-07-02 13:18:27,043:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:18:27,043:INFO:create_model() successfully completed......................................
2023-07-02 13:18:27,190:INFO:_master_model_container: 14
2023-07-02 13:18:27,190:INFO:_display_container: 2
2023-07-02 13:18:27,191:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:18:27,191:INFO:compare_models() successfully completed......................................
2023-07-02 13:19:28,616:INFO:Initializing create_model()
2023-07-02 13:19:28,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:19:28,617:INFO:Checking exceptions
2023-07-02 13:19:28,643:INFO:Importing libraries
2023-07-02 13:19:28,643:INFO:Copying training dataset
2023-07-02 13:19:28,647:INFO:Defining folds
2023-07-02 13:19:28,647:INFO:Declaring metric variables
2023-07-02 13:19:28,651:INFO:Importing untrained model
2023-07-02 13:19:28,655:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:19:28,662:INFO:Starting cross validation
2023-07-02 13:19:28,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:19:43,432:INFO:Calculating mean and std
2023-07-02 13:19:43,434:INFO:Creating metrics dataframe
2023-07-02 13:19:43,440:INFO:Finalizing model
2023-07-02 13:19:44,675:INFO:Uploading results into container
2023-07-02 13:19:44,676:INFO:Uploading model into container now
2023-07-02 13:19:44,685:INFO:_master_model_container: 15
2023-07-02 13:19:44,686:INFO:_display_container: 3
2023-07-02 13:19:44,686:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False)
2023-07-02 13:19:44,687:INFO:create_model() successfully completed......................................
2023-07-02 13:20:15,876:INFO:Initializing tune_model()
2023-07-02 13:20:15,877:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>)
2023-07-02 13:20:15,877:INFO:Checking exceptions
2023-07-02 13:20:15,903:INFO:Copying training dataset
2023-07-02 13:20:15,907:INFO:Checking base model
2023-07-02 13:20:15,907:INFO:Base model : Random Forest Classifier
2023-07-02 13:20:15,911:INFO:Declaring metric variables
2023-07-02 13:20:15,915:INFO:Defining Hyperparameters
2023-07-02 13:20:16,040:INFO:Tuning with n_jobs=-1
2023-07-02 13:20:16,040:INFO:Initializing RandomizedSearchCV
2023-07-02 13:21:48,672:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2023-07-02 13:21:48,673:INFO:Hyperparameter search completed
2023-07-02 13:21:48,673:INFO:SubProcess create_model() called ==================================
2023-07-02 13:21:48,674:INFO:Initializing create_model()
2023-07-02 13:21:48,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F1BF6661C0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 40, 'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.02, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': True})
2023-07-02 13:21:48,674:INFO:Checking exceptions
2023-07-02 13:21:48,675:INFO:Importing libraries
2023-07-02 13:21:48,675:INFO:Copying training dataset
2023-07-02 13:21:48,678:INFO:Defining folds
2023-07-02 13:21:48,679:INFO:Declaring metric variables
2023-07-02 13:21:48,683:INFO:Importing untrained model
2023-07-02 13:21:48,683:INFO:Declaring custom model
2023-07-02 13:21:48,688:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:21:48,694:INFO:Starting cross validation
2023-07-02 13:21:48,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:21:56,598:INFO:Calculating mean and std
2023-07-02 13:21:56,600:INFO:Creating metrics dataframe
2023-07-02 13:21:56,605:INFO:Finalizing model
2023-07-02 13:21:57,716:INFO:Uploading results into container
2023-07-02 13:21:57,717:INFO:Uploading model into container now
2023-07-02 13:21:57,718:INFO:_master_model_container: 16
2023-07-02 13:21:57,718:INFO:_display_container: 4
2023-07-02 13:21:57,719:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=40, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False)
2023-07-02 13:21:57,719:INFO:create_model() successfully completed......................................
2023-07-02 13:21:57,839:INFO:SubProcess create_model() end ==================================
2023-07-02 13:21:57,839:INFO:choose_better activated
2023-07-02 13:21:57,842:INFO:SubProcess create_model() called ==================================
2023-07-02 13:21:57,843:INFO:Initializing create_model()
2023-07-02 13:21:57,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1BF42B2B0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:21:57,843:INFO:Checking exceptions
2023-07-02 13:21:57,845:INFO:Importing libraries
2023-07-02 13:21:57,845:INFO:Copying training dataset
2023-07-02 13:21:57,848:INFO:Defining folds
2023-07-02 13:21:57,849:INFO:Declaring metric variables
2023-07-02 13:21:57,849:INFO:Importing untrained model
2023-07-02 13:21:57,849:INFO:Declaring custom model
2023-07-02 13:21:57,850:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:21:57,850:INFO:Starting cross validation
2023-07-02 13:21:57,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:22:05,922:INFO:Calculating mean and std
2023-07-02 13:22:05,923:INFO:Creating metrics dataframe
2023-07-02 13:22:05,925:INFO:Finalizing model
2023-07-02 13:22:07,001:INFO:Uploading results into container
2023-07-02 13:22:07,001:INFO:Uploading model into container now
2023-07-02 13:22:07,002:INFO:_master_model_container: 17
2023-07-02 13:22:07,002:INFO:_display_container: 5
2023-07-02 13:22:07,002:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False)
2023-07-02 13:22:07,002:INFO:create_model() successfully completed......................................
2023-07-02 13:22:07,118:INFO:SubProcess create_model() end ==================================
2023-07-02 13:22:07,119:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False) result for Accuracy is 0.7555
2023-07-02 13:22:07,119:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=4, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=40, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False) result for Accuracy is 0.7361
2023-07-02 13:22:07,119:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False) is best model
2023-07-02 13:22:07,119:INFO:choose_better completed
2023-07-02 13:22:07,120:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-07-02 13:22:07,128:INFO:_master_model_container: 17
2023-07-02 13:22:07,128:INFO:_display_container: 4
2023-07-02 13:22:07,129:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1671, verbose=0, warm_start=False)
2023-07-02 13:22:07,129:INFO:tune_model() successfully completed......................................
2023-07-02 13:23:00,520:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_81dce42025ec4bb8b713b13237a51e47
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_ee31627af7ff4512a8558dd4904c4311_dbafd42b86d3451e84b1bc81f6900f4d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_adf8fc9546214e12937e730d6337d64c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_144c48b694894de9ac7bb0cea7b2b08f_79a0b5566db149c3a72e73ee2e8ec396
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_e69bf305514a492d8be881eabafca5cf
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_bd6e9732df4c484f8008de3dd76ee123_28f77262786a4c04b7dec9d6b6c7ab55
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_599f824ca6e94205bbe754271f369f01
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_92a28e45c204443a9fe3a2e3a66a6d19_b5a62bbcdd3a4bd6a002f0d7e385e2a6
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_f230cd965f1441da8d67d6d801a0d385
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b04c46e42f7e4c04be9a5af8a0bc6af0_c7ab241144eb4f80b6e378e5e47d49cf
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_1277dbbadb664fb2a3abf4c0f5965093
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b990798ccd424e75a6b740d0f9994b7e_f0f1126ae38a4aeeb746ba373fb278ac
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_a997a6036ed049c3a466850c181a52f9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_2e210f44db2d416fbdcddc7f597b2fea_32431454dad24bee89cf86bdf3039945
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_1904ba5d3f3144acbb82d2d5683041d6
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_0e9bc01d993e4dfb9cede4b57ceeab61_81c40099efec4cbfb0ab5be433f1da08
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_5a4cf772864944c5888feb6698bd98d5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_18563c4b8b204e35ada407152d037432_23b727af2085411e83952af72260158d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_4dd4e0d123cc44c585e196775a02319d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_4a8bad2a69ee49be8dbeaae770f81d15_02ca1b81aa594013b708a84f6958224e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_e0818fba08874ad08ee9358ba094f809
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d86834203dc249959c1ea16c128d7204_384587d8a0de49398c917e4002b16a00
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_d5a22928430044afb4d21c15b00e7ced
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b34ffb6fc6b34c2f9d1ba03b8704a850_48fa40e74c2e4aceab3dfca6db91c666
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_9885dad8fe844c7c9405edc1452f4779
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_5ae1579a8d64464881bbd4e432d18f9c_dc800c4e38b74ae2a2f6158d444d3496
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_5f1282d792c2477ab51c00349507943d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_3ac4405e228c4da1b82c41dec4da7b79_3ce4e2af3c0f4109824a4d85c002e844
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_2a83f5eb0e5d45ebb9119557cbf54735
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_83b2f1945ef94e678ef76048e02997be_c58102ca0a2243749c112f4826e02075
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_7d4b5231079e4a568f4e79c1dd5e8555
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_ac98c9c846ca4d2197f641a8de40fdce_aa5258743ae749118e04bf3403cdff76
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_ffd0a0a4d0fb43abb85ee99d0121560a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_1ec8ac31d7814a7599a0355b492f1e22_54a90a328ae64d2d979e342a2231e456
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_3e5e8f1c192e4b4eaaa1bf34816329eb
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_1902071a9e364072ae3132d05443752a_06fd7c9fe9944e028959bb53a80833f9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_977d72300df445a6813c851224b6186d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_a767923d4be8409e98b28767633ce1dc_e4f27bd07d924a0e8ef67057939447f9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_0ec60240f70648d9b7b90b2aebeae3d1
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_c9b47a55d6aa4d36a92dcbf994c180c7_bb716a32e20a40c392c641ac5f922516
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_a506162f4dae42faaa869637d7fe444c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_83b77cae92da4dd0b7f3d300d461f459_0a3a381a58b3426bb4d92ae98cd9a18f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_27b9e2369db5401399d0e3ab3bc00109
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b0744011d0c74b6092953d27ae96188b_0fdc1bcb69ce42ee84cd3af1e975d139
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_3974b8258915401b891b979813a8c73e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_da949fce23eb49ba8d98dff9dabe4578_bb566ba3432b46fcaad5e981f2f0084c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_ae5c1f2d5ecb4b2f84698dc5b0eb96fb
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b0dd35ba47744744ba44b905ff214aa5_8a1f2a6077f44d61a968d3b29d340042
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_f3f8a568f30843e0b8258775b02a462e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_a478dee99a1944eb8d6a506be2cf29e8_e9487f9fa6fb44e7bfafbfd901ba03e1
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_7ff54e4a5f614241899f79eb8362ca5a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b8944b62620342a2896ce2190dca7ca7_a4a978e047e64f8fbf807afa6693dc60
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_64e99e4d4e58403c80c6c4a359a8e6fe
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_7990a2f4bd5c4672b9b275c7d24c132e_2c90c79c95be4364baa6aa4fe1effc21
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_edb4ffaf52d3493c819c538f3cc04a44
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b3d865791a844fdd8bb79b2141f36694_83821d7ad65645e283b3a6aa2735568b
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_8597d59fe33a426ba775973a41e7d693
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_13c81177f1e34441bce2806850898e23_669ed23e2a1c483896c39b77031321ce
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_c1bd54ff13824da29d829656115510bf
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_5fb31f581ff24ebbba7867790851d1be_5807b0024ff64186af73aa725d136081
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_1f6c9d128fea49f3adc2bd83805232ac
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_2ba601e6764a468ba8fe91e78480f437_8bf23de74c3d4d0cbd7831ec014fcb5d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_961ee2b68ebe43b99a753392dd4a8c4b
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_48315f86d16e4d85918cfb062068b4a3_ef4810d8976948aaaa35770b7e247178
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_c3a54cd1b99a4666bb24d2d2addcfb1c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_02992c0eb98744c3af6fcda04ab48978_4207ea476fa441b9a1475f48e41cb3a5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_d304a0ed14a042678bf892bd88ca0112
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_39eea7b5461d4999b4b7921cc0835cbc_c851789911ad42f29bd8bd3c7a3a5cb3
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_a111bce11def4f94845308a8c0b5e29f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_3376d8b6bff3417da688986156d4761b_d5e5d9558fec4580ac9f6752dab04519
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_f135e40105184994a2cf6a8ad2d92206
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_7cbe242c1e8b491fa00f21f387926488_657e7d06a62b4404a242a26eb4154db2
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_a43067eb30ea4f4d94b75552d910da1b
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_f01acc50e9304d79b4caa099e89ea603_f9deae9de22246bcba50645370470957
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,527:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_55f7a948e58a45d58ec07fcc7bd55493
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_e3753a174acf4fa4a170acdc87ea7962_0bca483ab0cf43a98ef301f82704229f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_b8e33715b87f44a6a285e4c27dc4c738
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_5eea12fff9a34175b7a9a7e98024543b_01e95c93efdb414dac2479b2855ba2c8
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_2af7ab766d534c74835dc305a06bcd25
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_c23fe37c61cf430f933fc0e57cf315e4_1133075c028b4c5595e6614348f1e730
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_7fb74fd5dc0f4f1eb8cd3e870e942612
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_7493ba3900104935af06d26796c9d15d_22c7576792394f3faa2a88388c07cc0c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_5f101317e95d4b4ea1c6e2b4e3f9e304
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_740e016224204d01aaf37b995a8e8117_890b2ec021554469a3306c3dd33bf192
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_35f17cbd799f4c88827ee88a7986936c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_1a549367a2674c9dbd0896c724b6aa78_04c9dfc075104f8d8fa3a30cce9b24ef
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_e0ace1c7aaee4fce9171d8e4419bfcc0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_67ed7c5382c5477091cfcf3603ec990d_de0698614a584c02a51aea876e06f81e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_3899968c35524d58a7f9ceed21850aee
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_0d75fd9cbd784888b44c9ac04948b77e_2ff6123966654134bae7caa98ec3c2f0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_42938c878f664445ab065223d9221a76
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_2c492348285f4362922b0ff25a7babcd_6a1f7d78b7894348ba5a613cced5e8fc
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_cf6dc11104c9466ab3512836d75aa711
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_fc822dfdd33941eb8fb286db504957f8_f1c47bb59c0c4ef5b7eaaeb92cce049d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_bba6ef42f90b4eaa9cc73c68862b3a59
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_c7d3e73e113343c4a82922db27ce336a_2c00f7116d3b47da80823644038c7a12
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_75ac97968ec543d58207c25e654cf131
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_7e7dd7c68c2841049d0ded5483125d7c_45f0e1dd824244b7a6a7f4ab4f436bf3
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_b21415a4590e4e88bc4b397f287592f6
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_4fc3716808494a66aa43f44b13dc6a76_8d755b4568bc45018e7c1b9db1079a62
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_7818e88004114c30b5db24f90ccd2340
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_982d2e876fa1455999d4e1c90c87caaa_bfb79be5acca4b1482836e2929234d9d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_9bb28415a05e46b99d9c476ea510a5a4
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_57764433f1d3429882be1479f0a508be_0a398817e7a843e6bf85340963bb809c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_5cce0109612d4e9682846b839ad2fe76
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_9a38377800874e9582ff49e530b0a94c_2fdd70ca31994b81966ea083d2be743e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_66d1f7d4a2c44f42b7f865d386c68699
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_1fd93fdb4c124a1da0bdf166ab9f0e46_8f848b154c764f288586a1aa5acc219a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_3eae6c9e7b9c46278a6140517a725460
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_e864fe91e5ca445b9a88287fb550d979_d47ac2a1f7a64a9ba5dc60f48a0c5777
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_9f9f518d59c5448aae27d64fad20e521
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_a9f9675d528f44a4b9e41662fd4c9e88_c060c3e94ad24f88abf2de793e200efc
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_defc05d1554945f0aecf7de6af13d45d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_2b212f3d2c104ddba8fddff11f7a18e6_925be1b141a040fe82d5a8435dfceba7
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_7ac106d187804839a37f9b897c7012a0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_afaf99f7e688411b8d859b9fc1aea3af_bda21d29644949bc9b57b00a6293dff2
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_30243588c2f6406e902f68fc07b8cf44
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_ca91dcb96df34e9fa481a45b2af56de6_f3484a2eecce42558ffc650357262d6a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_fb5228b1b0ce4e33bc3e4bf064055643
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_3ef6c556565341feb347bbabde62bd74_5c9e5765f0e14fc1b071311b2a43f663
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,532:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_8e7e4240a44a431caffcce72e5996059
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,532:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_f3befd8678e84604860f1abf77cbbe92_2ca98a8cd51d4e21b26b4a598a81a3ef
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,532:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_2c25dd93104b40f5a104614b3bcecb8e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,532:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_44957b36592d4f989ac9f5240e0b81a7_20d84c894d624a58b4bb192750bc5f4a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,535:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_c529690a72e8477eae6d158ab99824ee
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,535:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_2f8ab720ec1841279db13509778f1d0a_0835fd2eb821453496e8fe5dd8ab68ac
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,535:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_38008ea6ad2e4900ad0c8c0f93512436
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,535:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_9263f99c089745c98770d4b29ba2fc44_f9119eb23e834b6ebc360f3bc950ede8
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_efce9efe004e475fbb803f0ba30112ae
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_8288d084daed4a69b2d0de6d96b1dbdb_9f654773355a4ca0a812b3df9b8f2f7c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_f393b5d3497e4093889efa1a5f031dd7
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_a822c09063984740bb963286694e28fb_086996e04c6641e98a60016a942ffbf7
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_9c628ea52e764c5a82ac755fc4263300
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_b61b343eaeaa4e09bca32f9e2d2a5343_699b93e798244fc4b4a76fc985ec88cc
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_789837ec92874236af7d6214d597db07
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,536:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_9bb5696bc096413e9288aec3ef434a36_37bad2e34fcb4f11bf652e8395f4f5a4
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_2156a80a464149608348ce5d2cc7de08
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d8d86b99dc994dcfa68d840da3832a6a_9cd15f4fd27c49b4b3d264a69e29b895
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_89b0ffa30a0847138f0ddebae14bb97a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_c61c89b3a365474ea66a4288b8f860f1_85827aceb7ac4e5498afd252b78e96e1
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_6af95577eb1c461ab39c78821c3311b7
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_3fe3740d96f540be8ac3994e62801f6b_37010f786b284a4789cb51feede0f535
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_b9b218e19dbe4a08941ad53da2b6772c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_a02e123cd764408792bcc3ad01d55143_3d6061c00e9041a2ad3944695bfa2948
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_e9711250a3cb47eba066010e557a6310
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_35994371bb3745aeae7f2d5c94040a24_a0d02f5fb445469c9dcfbb8a6ffd6dc5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_2b2f10f4248549a2b26b13ac8396590f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_2f1316cc3cab45c883d7f15aecfbe735_1c976880ca15407bbeae5354ee63f7e4
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_410413535be5470b8397cccc8104e4cb
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_2660d35a9028410594fa75c0648ddd9c_89ee08a8288c4a518687230d3e1eb9d5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_be1a66da84c34f4cbb1a3d17cc0c2a36
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_a873b43566694153943a36cf4da61c66_9f5de89f926344d58b687945bd9800ca
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_eb98295afa6649e29d86293eb7c5bd71
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_245d1c3135b4437c9c1e5de83d7b8dda_676d96f910eb4eafacdbf5a47828227d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_ad99c679a0924ad7b360b21273953821
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_95d413711b5d46c8aeb013c695408723_2104e2cb47d64757b08181f378a2977e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,538:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_ca261e9e228b4c52805fdf52824195c3
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,539:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_a355d1530100413d80f6d48c04c6475d_974ebd7f6fc04f758a6e8702d75f3200
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,539:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_60af544f30af433986e96873c9113a44
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:00,539:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_10276_d29a95a0ae2546fbb9b474597f1dcd1b_e4d418dcfc07447f8006d836d8ccb660
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:23:09,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:23:09,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:23:09,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:23:09,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:23:10,739:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-07-02 13:23:12,598:INFO:PyCaret ClassificationExperiment
2023-07-02 13:23:12,598:INFO:Logging name: clf-default-name
2023-07-02 13:23:12,598:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 13:23:12,598:INFO:version 3.0.0
2023-07-02 13:23:12,598:INFO:Initializing setup()
2023-07-02 13:23:12,598:INFO:self.USI: 15ce
2023-07-02 13:23:12,599:INFO:self._variable_keys: {'fold_shuffle_param', 'html_param', 'memory', '_ml_usecase', 'USI', 'seed', 'idx', 'gpu_param', 'is_multiclass', 'y_train', 'fold_generator', 'target_param', 'logging_param', 'X_train', 'pipeline', 'data', 'gpu_n_jobs_param', 'n_jobs_param', 'y', 'fix_imbalance', 'X_test', 'fold_groups_param', 'log_plots_param', 'X', 'exp_id', 'exp_name_log', '_available_plots', 'y_test'}
2023-07-02 13:23:12,599:INFO:Checking environment
2023-07-02 13:23:12,599:INFO:python_version: 3.9.13
2023-07-02 13:23:12,599:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 13:23:12,599:INFO:machine: AMD64
2023-07-02 13:23:12,599:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 13:23:12,599:INFO:Memory: svmem(total=16456249344, available=4543213568, percent=72.4, used=11913035776, free=4543213568)
2023-07-02 13:23:12,599:INFO:Physical Core: 6
2023-07-02 13:23:12,599:INFO:Logical Core: 12
2023-07-02 13:23:12,599:INFO:Checking libraries
2023-07-02 13:23:12,599:INFO:System:
2023-07-02 13:23:12,599:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 13:23:12,599:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 13:23:12,599:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 13:23:12,599:INFO:PyCaret required dependencies:
2023-07-02 13:23:12,599:INFO:                 pip: 22.2.2
2023-07-02 13:23:12,599:INFO:          setuptools: 63.4.1
2023-07-02 13:23:12,599:INFO:             pycaret: 3.0.0
2023-07-02 13:23:12,599:INFO:             IPython: 7.31.1
2023-07-02 13:23:12,599:INFO:          ipywidgets: 7.6.5
2023-07-02 13:23:12,599:INFO:                tqdm: 4.64.1
2023-07-02 13:23:12,599:INFO:               numpy: 1.21.5
2023-07-02 13:23:12,600:INFO:              pandas: 1.4.4
2023-07-02 13:23:12,600:INFO:              jinja2: 3.1.2
2023-07-02 13:23:12,600:INFO:               scipy: 1.9.1
2023-07-02 13:23:12,600:INFO:              joblib: 1.2.0
2023-07-02 13:23:12,600:INFO:             sklearn: 1.0.2
2023-07-02 13:23:12,600:INFO:                pyod: 1.0.9
2023-07-02 13:23:12,600:INFO:            imblearn: 0.10.1
2023-07-02 13:23:12,600:INFO:   category_encoders: 2.6.0
2023-07-02 13:23:12,600:INFO:            lightgbm: 3.3.5
2023-07-02 13:23:12,600:INFO:               numba: 0.55.1
2023-07-02 13:23:12,600:INFO:            requests: 2.28.1
2023-07-02 13:23:12,600:INFO:          matplotlib: 3.5.2
2023-07-02 13:23:12,600:INFO:          scikitplot: 0.3.7
2023-07-02 13:23:12,600:INFO:         yellowbrick: 1.5
2023-07-02 13:23:12,600:INFO:              plotly: 5.9.0
2023-07-02 13:23:12,600:INFO:             kaleido: 0.2.1
2023-07-02 13:23:12,600:INFO:         statsmodels: 0.13.2
2023-07-02 13:23:12,600:INFO:              sktime: 0.16.1
2023-07-02 13:23:12,600:INFO:               tbats: 1.1.2
2023-07-02 13:23:12,600:INFO:            pmdarima: 2.0.3
2023-07-02 13:23:12,600:INFO:              psutil: 5.9.0
2023-07-02 13:23:12,600:INFO:PyCaret optional dependencies:
2023-07-02 13:23:13,929:INFO:                shap: 0.41.0
2023-07-02 13:23:13,929:INFO:           interpret: Not installed
2023-07-02 13:23:13,929:INFO:                umap: Not installed
2023-07-02 13:23:13,929:INFO:    pandas_profiling: Not installed
2023-07-02 13:23:13,929:INFO:  explainerdashboard: Not installed
2023-07-02 13:23:13,929:INFO:             autoviz: Not installed
2023-07-02 13:23:13,929:INFO:           fairlearn: Not installed
2023-07-02 13:23:13,929:INFO:             xgboost: Not installed
2023-07-02 13:23:13,929:INFO:            catboost: Not installed
2023-07-02 13:23:13,930:INFO:              kmodes: Not installed
2023-07-02 13:23:13,930:INFO:             mlxtend: Not installed
2023-07-02 13:23:13,930:INFO:       statsforecast: Not installed
2023-07-02 13:23:13,930:INFO:        tune_sklearn: 0.4.5
2023-07-02 13:23:13,930:INFO:                 ray: 2.3.1
2023-07-02 13:23:13,930:INFO:            hyperopt: Not installed
2023-07-02 13:23:13,930:INFO:              optuna: 3.1.0
2023-07-02 13:23:13,930:INFO:               skopt: Not installed
2023-07-02 13:23:13,930:INFO:              mlflow: 2.2.2
2023-07-02 13:23:13,930:INFO:              gradio: 3.23.0
2023-07-02 13:23:13,930:INFO:             fastapi: 0.95.0
2023-07-02 13:23:13,930:INFO:             uvicorn: 0.21.1
2023-07-02 13:23:13,930:INFO:              m2cgen: Not installed
2023-07-02 13:23:13,930:INFO:           evidently: Not installed
2023-07-02 13:23:13,930:INFO:               fugue: Not installed
2023-07-02 13:23:13,930:INFO:           streamlit: 1.20.0
2023-07-02 13:23:13,930:INFO:             prophet: Not installed
2023-07-02 13:23:13,930:INFO:None
2023-07-02 13:23:13,930:INFO:Set up data.
2023-07-02 13:23:13,936:INFO:Set up train/test split.
2023-07-02 13:23:13,940:INFO:Set up index.
2023-07-02 13:23:13,940:INFO:Set up folding strategy.
2023-07-02 13:23:13,940:INFO:Assigning column types.
2023-07-02 13:23:13,943:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 13:23:13,990:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:23:13,994:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:23:14,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:23:14,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:23:14,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,241:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 13:23:14,289:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:23:14,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:23:14,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,398:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 13:23:14,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,555:INFO:Preparing preprocessing pipeline...
2023-07-02 13:23:14,556:INFO:Set up simple imputation.
2023-07-02 13:23:14,556:INFO:Set up feature normalization.
2023-07-02 13:23:14,580:INFO:Finished creating preprocessing pipeline.
2023-07-02 13:23:14,585:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strate...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 13:23:14,586:INFO:Creating final display dataframe.
2023-07-02 13:23:14,658:INFO:Setup _display_container:                     Description             Value
0                    Session id              2826
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (614, 9)
6    Transformed test set shape          (154, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              15ce
2023-07-02 13:23:14,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:23:14,827:INFO:setup() successfully completed in 2.9s...............
2023-07-02 13:23:14,832:INFO:Initializing compare_models()
2023-07-02 13:23:14,832:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 13:23:14,833:INFO:Checking exceptions
2023-07-02 13:23:14,838:INFO:Preparing display monitor
2023-07-02 13:23:14,875:INFO:Initializing Logistic Regression
2023-07-02 13:23:14,876:INFO:Total runtime is 1.6526381174723306e-05 minutes
2023-07-02 13:23:14,880:INFO:SubProcess create_model() called ==================================
2023-07-02 13:23:14,880:INFO:Initializing create_model()
2023-07-02 13:23:14,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:23:14,881:INFO:Checking exceptions
2023-07-02 13:23:14,881:INFO:Importing libraries
2023-07-02 13:23:14,881:INFO:Copying training dataset
2023-07-02 13:23:14,885:INFO:Defining folds
2023-07-02 13:23:14,885:INFO:Declaring metric variables
2023-07-02 13:23:14,888:INFO:Importing untrained model
2023-07-02 13:23:14,892:INFO:Logistic Regression Imported successfully
2023-07-02 13:23:14,900:INFO:Starting cross validation
2023-07-02 13:23:14,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:23:30,823:INFO:Calculating mean and std
2023-07-02 13:23:30,825:INFO:Creating metrics dataframe
2023-07-02 13:23:31,910:INFO:Uploading results into container
2023-07-02 13:23:31,911:INFO:Uploading model into container now
2023-07-02 13:23:31,912:INFO:_master_model_container: 1
2023-07-02 13:23:31,912:INFO:_display_container: 2
2023-07-02 13:23:31,912:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2826, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:23:31,912:INFO:create_model() successfully completed......................................
2023-07-02 13:23:32,027:INFO:SubProcess create_model() end ==================================
2023-07-02 13:23:32,028:INFO:Creating metrics dataframe
2023-07-02 13:23:32,036:INFO:Initializing K Neighbors Classifier
2023-07-02 13:23:32,036:INFO:Total runtime is 0.28601481119791666 minutes
2023-07-02 13:23:32,040:INFO:SubProcess create_model() called ==================================
2023-07-02 13:23:32,040:INFO:Initializing create_model()
2023-07-02 13:23:32,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:23:32,041:INFO:Checking exceptions
2023-07-02 13:23:32,041:INFO:Importing libraries
2023-07-02 13:23:32,041:INFO:Copying training dataset
2023-07-02 13:23:32,045:INFO:Defining folds
2023-07-02 13:23:32,046:INFO:Declaring metric variables
2023-07-02 13:23:32,050:INFO:Importing untrained model
2023-07-02 13:23:32,055:INFO:K Neighbors Classifier Imported successfully
2023-07-02 13:23:32,063:INFO:Starting cross validation
2023-07-02 13:23:32,065:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:23:32,189:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:32,193:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:32,203:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:32,210:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:32,219:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:32,226:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:32,230:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:32,234:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:36,050:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:36,060:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:23:40,417:INFO:Calculating mean and std
2023-07-02 13:23:40,419:INFO:Creating metrics dataframe
2023-07-02 13:23:41,466:INFO:Uploading results into container
2023-07-02 13:23:41,467:INFO:Uploading model into container now
2023-07-02 13:23:41,468:INFO:_master_model_container: 2
2023-07-02 13:23:41,468:INFO:_display_container: 2
2023-07-02 13:23:41,468:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 13:23:41,468:INFO:create_model() successfully completed......................................
2023-07-02 13:23:41,581:INFO:SubProcess create_model() end ==================================
2023-07-02 13:23:41,581:INFO:Creating metrics dataframe
2023-07-02 13:23:41,590:INFO:Initializing Naive Bayes
2023-07-02 13:23:41,591:INFO:Total runtime is 0.4452728748321533 minutes
2023-07-02 13:23:41,594:INFO:SubProcess create_model() called ==================================
2023-07-02 13:23:41,595:INFO:Initializing create_model()
2023-07-02 13:23:41,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:23:41,595:INFO:Checking exceptions
2023-07-02 13:23:41,595:INFO:Importing libraries
2023-07-02 13:23:41,595:INFO:Copying training dataset
2023-07-02 13:23:41,600:INFO:Defining folds
2023-07-02 13:23:41,600:INFO:Declaring metric variables
2023-07-02 13:23:41,605:INFO:Importing untrained model
2023-07-02 13:23:41,612:INFO:Naive Bayes Imported successfully
2023-07-02 13:23:41,621:INFO:Starting cross validation
2023-07-02 13:23:41,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:23:49,139:INFO:Calculating mean and std
2023-07-02 13:23:49,141:INFO:Creating metrics dataframe
2023-07-02 13:23:50,160:INFO:Uploading results into container
2023-07-02 13:23:50,161:INFO:Uploading model into container now
2023-07-02 13:23:50,162:INFO:_master_model_container: 3
2023-07-02 13:23:50,163:INFO:_display_container: 2
2023-07-02 13:23:50,163:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 13:23:50,163:INFO:create_model() successfully completed......................................
2023-07-02 13:23:50,276:INFO:SubProcess create_model() end ==================================
2023-07-02 13:23:50,276:INFO:Creating metrics dataframe
2023-07-02 13:23:50,285:INFO:Initializing Decision Tree Classifier
2023-07-02 13:23:50,285:INFO:Total runtime is 0.5901756048202514 minutes
2023-07-02 13:23:50,289:INFO:SubProcess create_model() called ==================================
2023-07-02 13:23:50,289:INFO:Initializing create_model()
2023-07-02 13:23:50,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:23:50,290:INFO:Checking exceptions
2023-07-02 13:23:50,290:INFO:Importing libraries
2023-07-02 13:23:50,290:INFO:Copying training dataset
2023-07-02 13:23:50,294:INFO:Defining folds
2023-07-02 13:23:50,294:INFO:Declaring metric variables
2023-07-02 13:23:50,299:INFO:Importing untrained model
2023-07-02 13:23:50,304:INFO:Decision Tree Classifier Imported successfully
2023-07-02 13:23:50,314:INFO:Starting cross validation
2023-07-02 13:23:50,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:23:58,448:INFO:Calculating mean and std
2023-07-02 13:23:58,450:INFO:Creating metrics dataframe
2023-07-02 13:23:59,501:INFO:Uploading results into container
2023-07-02 13:23:59,502:INFO:Uploading model into container now
2023-07-02 13:23:59,502:INFO:_master_model_container: 4
2023-07-02 13:23:59,502:INFO:_display_container: 2
2023-07-02 13:23:59,503:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2826, splitter='best')
2023-07-02 13:23:59,503:INFO:create_model() successfully completed......................................
2023-07-02 13:23:59,621:INFO:SubProcess create_model() end ==================================
2023-07-02 13:23:59,621:INFO:Creating metrics dataframe
2023-07-02 13:23:59,634:INFO:Initializing SVM - Linear Kernel
2023-07-02 13:23:59,635:INFO:Total runtime is 0.7460092544555663 minutes
2023-07-02 13:23:59,639:INFO:SubProcess create_model() called ==================================
2023-07-02 13:23:59,640:INFO:Initializing create_model()
2023-07-02 13:23:59,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:23:59,640:INFO:Checking exceptions
2023-07-02 13:23:59,641:INFO:Importing libraries
2023-07-02 13:23:59,641:INFO:Copying training dataset
2023-07-02 13:23:59,648:INFO:Defining folds
2023-07-02 13:23:59,649:INFO:Declaring metric variables
2023-07-02 13:23:59,654:INFO:Importing untrained model
2023-07-02 13:23:59,661:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 13:23:59,680:INFO:Starting cross validation
2023-07-02 13:23:59,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:23:59,788:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,795:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,806:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,815:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,826:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,828:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,840:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,851:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,857:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:23:59,864:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:24:07,306:INFO:Calculating mean and std
2023-07-02 13:24:07,308:INFO:Creating metrics dataframe
2023-07-02 13:24:08,407:INFO:Uploading results into container
2023-07-02 13:24:08,408:INFO:Uploading model into container now
2023-07-02 13:24:08,408:INFO:_master_model_container: 5
2023-07-02 13:24:08,408:INFO:_display_container: 2
2023-07-02 13:24:08,409:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2826, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 13:24:08,409:INFO:create_model() successfully completed......................................
2023-07-02 13:24:08,545:INFO:SubProcess create_model() end ==================================
2023-07-02 13:24:08,545:INFO:Creating metrics dataframe
2023-07-02 13:24:08,555:INFO:Initializing Ridge Classifier
2023-07-02 13:24:08,555:INFO:Total runtime is 0.894677722454071 minutes
2023-07-02 13:24:08,558:INFO:SubProcess create_model() called ==================================
2023-07-02 13:24:08,559:INFO:Initializing create_model()
2023-07-02 13:24:08,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:24:08,559:INFO:Checking exceptions
2023-07-02 13:24:08,559:INFO:Importing libraries
2023-07-02 13:24:08,559:INFO:Copying training dataset
2023-07-02 13:24:08,564:INFO:Defining folds
2023-07-02 13:24:08,565:INFO:Declaring metric variables
2023-07-02 13:24:08,569:INFO:Importing untrained model
2023-07-02 13:24:08,574:INFO:Ridge Classifier Imported successfully
2023-07-02 13:24:08,587:INFO:Starting cross validation
2023-07-02 13:24:08,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:24:08,696:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,700:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,719:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,722:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,724:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,733:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,740:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,747:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,757:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:08,763:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:24:16,310:INFO:Calculating mean and std
2023-07-02 13:24:16,312:INFO:Creating metrics dataframe
2023-07-02 13:24:17,336:INFO:Uploading results into container
2023-07-02 13:24:17,337:INFO:Uploading model into container now
2023-07-02 13:24:17,338:INFO:_master_model_container: 6
2023-07-02 13:24:17,338:INFO:_display_container: 2
2023-07-02 13:24:17,338:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2826, solver='auto', tol=0.001)
2023-07-02 13:24:17,338:INFO:create_model() successfully completed......................................
2023-07-02 13:24:17,453:INFO:SubProcess create_model() end ==================================
2023-07-02 13:24:17,453:INFO:Creating metrics dataframe
2023-07-02 13:24:17,464:INFO:Initializing Random Forest Classifier
2023-07-02 13:24:17,464:INFO:Total runtime is 1.0431567748387653 minutes
2023-07-02 13:24:17,468:INFO:SubProcess create_model() called ==================================
2023-07-02 13:24:17,469:INFO:Initializing create_model()
2023-07-02 13:24:17,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:24:17,469:INFO:Checking exceptions
2023-07-02 13:24:17,469:INFO:Importing libraries
2023-07-02 13:24:17,469:INFO:Copying training dataset
2023-07-02 13:24:17,474:INFO:Defining folds
2023-07-02 13:24:17,475:INFO:Declaring metric variables
2023-07-02 13:24:17,478:INFO:Importing untrained model
2023-07-02 13:24:17,482:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:24:17,491:INFO:Starting cross validation
2023-07-02 13:24:17,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:24:26,069:INFO:Calculating mean and std
2023-07-02 13:24:26,071:INFO:Creating metrics dataframe
2023-07-02 13:24:27,655:INFO:Uploading results into container
2023-07-02 13:24:27,657:INFO:Uploading model into container now
2023-07-02 13:24:27,658:INFO:_master_model_container: 7
2023-07-02 13:24:27,658:INFO:_display_container: 2
2023-07-02 13:24:27,659:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:24:27,659:INFO:create_model() successfully completed......................................
2023-07-02 13:24:27,788:INFO:SubProcess create_model() end ==================================
2023-07-02 13:24:27,788:INFO:Creating metrics dataframe
2023-07-02 13:24:27,798:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 13:24:27,798:INFO:Total runtime is 1.215389839808146 minutes
2023-07-02 13:24:27,802:INFO:SubProcess create_model() called ==================================
2023-07-02 13:24:27,802:INFO:Initializing create_model()
2023-07-02 13:24:27,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:24:27,802:INFO:Checking exceptions
2023-07-02 13:24:27,802:INFO:Importing libraries
2023-07-02 13:24:27,803:INFO:Copying training dataset
2023-07-02 13:24:27,806:INFO:Defining folds
2023-07-02 13:24:27,807:INFO:Declaring metric variables
2023-07-02 13:24:27,813:INFO:Importing untrained model
2023-07-02 13:24:27,817:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 13:24:27,827:INFO:Starting cross validation
2023-07-02 13:24:27,828:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:24:35,473:INFO:Calculating mean and std
2023-07-02 13:24:35,474:INFO:Creating metrics dataframe
2023-07-02 13:24:36,507:INFO:Uploading results into container
2023-07-02 13:24:36,508:INFO:Uploading model into container now
2023-07-02 13:24:36,509:INFO:_master_model_container: 8
2023-07-02 13:24:36,509:INFO:_display_container: 2
2023-07-02 13:24:36,509:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 13:24:36,509:INFO:create_model() successfully completed......................................
2023-07-02 13:24:36,624:INFO:SubProcess create_model() end ==================================
2023-07-02 13:24:36,624:INFO:Creating metrics dataframe
2023-07-02 13:24:36,638:INFO:Initializing Ada Boost Classifier
2023-07-02 13:24:36,638:INFO:Total runtime is 1.3627214868863422 minutes
2023-07-02 13:24:36,641:INFO:SubProcess create_model() called ==================================
2023-07-02 13:24:36,641:INFO:Initializing create_model()
2023-07-02 13:24:36,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:24:36,642:INFO:Checking exceptions
2023-07-02 13:24:36,642:INFO:Importing libraries
2023-07-02 13:24:36,642:INFO:Copying training dataset
2023-07-02 13:24:36,646:INFO:Defining folds
2023-07-02 13:24:36,646:INFO:Declaring metric variables
2023-07-02 13:24:36,650:INFO:Importing untrained model
2023-07-02 13:24:36,654:INFO:Ada Boost Classifier Imported successfully
2023-07-02 13:24:36,668:INFO:Starting cross validation
2023-07-02 13:24:36,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:24:44,920:INFO:Calculating mean and std
2023-07-02 13:24:44,922:INFO:Creating metrics dataframe
2023-07-02 13:24:45,960:INFO:Uploading results into container
2023-07-02 13:24:45,961:INFO:Uploading model into container now
2023-07-02 13:24:45,962:INFO:_master_model_container: 9
2023-07-02 13:24:45,962:INFO:_display_container: 2
2023-07-02 13:24:45,962:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2826)
2023-07-02 13:24:45,962:INFO:create_model() successfully completed......................................
2023-07-02 13:24:46,075:INFO:SubProcess create_model() end ==================================
2023-07-02 13:24:46,076:INFO:Creating metrics dataframe
2023-07-02 13:24:46,088:INFO:Initializing Gradient Boosting Classifier
2023-07-02 13:24:46,088:INFO:Total runtime is 1.5202309727668761 minutes
2023-07-02 13:24:46,093:INFO:SubProcess create_model() called ==================================
2023-07-02 13:24:46,093:INFO:Initializing create_model()
2023-07-02 13:24:46,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:24:46,094:INFO:Checking exceptions
2023-07-02 13:24:46,094:INFO:Importing libraries
2023-07-02 13:24:46,094:INFO:Copying training dataset
2023-07-02 13:24:46,098:INFO:Defining folds
2023-07-02 13:24:46,098:INFO:Declaring metric variables
2023-07-02 13:24:46,102:INFO:Importing untrained model
2023-07-02 13:24:46,107:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 13:24:46,117:INFO:Starting cross validation
2023-07-02 13:24:46,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:24:54,188:INFO:Calculating mean and std
2023-07-02 13:24:54,189:INFO:Creating metrics dataframe
2023-07-02 13:24:55,227:INFO:Uploading results into container
2023-07-02 13:24:55,228:INFO:Uploading model into container now
2023-07-02 13:24:55,228:INFO:_master_model_container: 10
2023-07-02 13:24:55,228:INFO:_display_container: 2
2023-07-02 13:24:55,229:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2826, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 13:24:55,229:INFO:create_model() successfully completed......................................
2023-07-02 13:24:55,341:INFO:SubProcess create_model() end ==================================
2023-07-02 13:24:55,341:INFO:Creating metrics dataframe
2023-07-02 13:24:55,352:INFO:Initializing Linear Discriminant Analysis
2023-07-02 13:24:55,352:INFO:Total runtime is 1.6746305068333942 minutes
2023-07-02 13:24:55,356:INFO:SubProcess create_model() called ==================================
2023-07-02 13:24:55,356:INFO:Initializing create_model()
2023-07-02 13:24:55,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:24:55,357:INFO:Checking exceptions
2023-07-02 13:24:55,357:INFO:Importing libraries
2023-07-02 13:24:55,357:INFO:Copying training dataset
2023-07-02 13:24:55,361:INFO:Defining folds
2023-07-02 13:24:55,361:INFO:Declaring metric variables
2023-07-02 13:24:55,364:INFO:Importing untrained model
2023-07-02 13:24:55,369:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:24:55,380:INFO:Starting cross validation
2023-07-02 13:24:55,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:25:03,652:INFO:Calculating mean and std
2023-07-02 13:25:03,654:INFO:Creating metrics dataframe
2023-07-02 13:25:04,718:INFO:Uploading results into container
2023-07-02 13:25:04,719:INFO:Uploading model into container now
2023-07-02 13:25:04,719:INFO:_master_model_container: 11
2023-07-02 13:25:04,720:INFO:_display_container: 2
2023-07-02 13:25:04,720:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:25:04,720:INFO:create_model() successfully completed......................................
2023-07-02 13:25:04,854:INFO:SubProcess create_model() end ==================================
2023-07-02 13:25:04,854:INFO:Creating metrics dataframe
2023-07-02 13:25:04,867:INFO:Initializing Extra Trees Classifier
2023-07-02 13:25:04,867:INFO:Total runtime is 1.8332042853037516 minutes
2023-07-02 13:25:04,872:INFO:SubProcess create_model() called ==================================
2023-07-02 13:25:04,872:INFO:Initializing create_model()
2023-07-02 13:25:04,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:25:04,873:INFO:Checking exceptions
2023-07-02 13:25:04,873:INFO:Importing libraries
2023-07-02 13:25:04,873:INFO:Copying training dataset
2023-07-02 13:25:04,881:INFO:Defining folds
2023-07-02 13:25:04,881:INFO:Declaring metric variables
2023-07-02 13:25:04,886:INFO:Importing untrained model
2023-07-02 13:25:04,891:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:25:04,901:INFO:Starting cross validation
2023-07-02 13:25:04,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:25:13,613:INFO:Calculating mean and std
2023-07-02 13:25:13,615:INFO:Creating metrics dataframe
2023-07-02 13:25:14,870:INFO:Uploading results into container
2023-07-02 13:25:14,871:INFO:Uploading model into container now
2023-07-02 13:25:14,872:INFO:_master_model_container: 12
2023-07-02 13:25:14,872:INFO:_display_container: 2
2023-07-02 13:25:14,872:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:25:14,872:INFO:create_model() successfully completed......................................
2023-07-02 13:25:15,005:INFO:SubProcess create_model() end ==================================
2023-07-02 13:25:15,005:INFO:Creating metrics dataframe
2023-07-02 13:25:15,019:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 13:25:15,019:INFO:Total runtime is 2.002413026491801 minutes
2023-07-02 13:25:15,023:INFO:SubProcess create_model() called ==================================
2023-07-02 13:25:15,023:INFO:Initializing create_model()
2023-07-02 13:25:15,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:25:15,024:INFO:Checking exceptions
2023-07-02 13:25:15,024:INFO:Importing libraries
2023-07-02 13:25:15,024:INFO:Copying training dataset
2023-07-02 13:25:15,029:INFO:Defining folds
2023-07-02 13:25:15,029:INFO:Declaring metric variables
2023-07-02 13:25:15,033:INFO:Importing untrained model
2023-07-02 13:25:15,040:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 13:25:15,050:INFO:Starting cross validation
2023-07-02 13:25:15,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:25:24,831:INFO:Calculating mean and std
2023-07-02 13:25:24,833:INFO:Creating metrics dataframe
2023-07-02 13:25:25,899:INFO:Uploading results into container
2023-07-02 13:25:25,900:INFO:Uploading model into container now
2023-07-02 13:25:25,901:INFO:_master_model_container: 13
2023-07-02 13:25:25,901:INFO:_display_container: 2
2023-07-02 13:25:25,901:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2826, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 13:25:25,901:INFO:create_model() successfully completed......................................
2023-07-02 13:25:26,017:INFO:SubProcess create_model() end ==================================
2023-07-02 13:25:26,018:INFO:Creating metrics dataframe
2023-07-02 13:25:26,030:INFO:Initializing Dummy Classifier
2023-07-02 13:25:26,030:INFO:Total runtime is 2.185925463835398 minutes
2023-07-02 13:25:26,035:INFO:SubProcess create_model() called ==================================
2023-07-02 13:25:26,035:INFO:Initializing create_model()
2023-07-02 13:25:26,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D920888E0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:25:26,036:INFO:Checking exceptions
2023-07-02 13:25:26,036:INFO:Importing libraries
2023-07-02 13:25:26,036:INFO:Copying training dataset
2023-07-02 13:25:26,041:INFO:Defining folds
2023-07-02 13:25:26,041:INFO:Declaring metric variables
2023-07-02 13:25:26,046:INFO:Importing untrained model
2023-07-02 13:25:26,054:INFO:Dummy Classifier Imported successfully
2023-07-02 13:25:26,063:INFO:Starting cross validation
2023-07-02 13:25:26,064:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:25:26,171:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,190:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,199:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,201:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,209:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,216:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,223:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,231:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,237:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:26,243:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:25:34,061:INFO:Calculating mean and std
2023-07-02 13:25:34,063:INFO:Creating metrics dataframe
2023-07-02 13:25:35,120:INFO:Uploading results into container
2023-07-02 13:25:35,121:INFO:Uploading model into container now
2023-07-02 13:25:35,122:INFO:_master_model_container: 14
2023-07-02 13:25:35,123:INFO:_display_container: 2
2023-07-02 13:25:35,123:INFO:DummyClassifier(constant=None, random_state=2826, strategy='prior')
2023-07-02 13:25:35,123:INFO:create_model() successfully completed......................................
2023-07-02 13:25:35,237:INFO:SubProcess create_model() end ==================================
2023-07-02 13:25:35,237:INFO:Creating metrics dataframe
2023-07-02 13:25:35,261:INFO:Initializing create_model()
2023-07-02 13:25:35,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:25:35,262:INFO:Checking exceptions
2023-07-02 13:25:35,265:INFO:Importing libraries
2023-07-02 13:25:35,265:INFO:Copying training dataset
2023-07-02 13:25:35,270:INFO:Defining folds
2023-07-02 13:25:35,270:INFO:Declaring metric variables
2023-07-02 13:25:35,271:INFO:Importing untrained model
2023-07-02 13:25:35,271:INFO:Declaring custom model
2023-07-02 13:25:35,272:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:25:35,273:INFO:Cross validation set to False
2023-07-02 13:25:35,273:INFO:Fitting Model
2023-07-02 13:25:36,234:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:25:36,235:INFO:create_model() successfully completed......................................
2023-07-02 13:25:36,376:INFO:_master_model_container: 14
2023-07-02 13:25:36,376:INFO:_display_container: 2
2023-07-02 13:25:36,376:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:25:36,377:INFO:compare_models() successfully completed......................................
2023-07-02 13:25:36,390:INFO:Initializing create_model()
2023-07-02 13:25:36,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:25:36,390:INFO:Checking exceptions
2023-07-02 13:25:36,419:INFO:Importing libraries
2023-07-02 13:25:36,419:INFO:Copying training dataset
2023-07-02 13:25:36,424:INFO:Defining folds
2023-07-02 13:25:36,424:INFO:Declaring metric variables
2023-07-02 13:25:36,430:INFO:Importing untrained model
2023-07-02 13:25:36,434:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:25:36,440:INFO:Starting cross validation
2023-07-02 13:25:36,441:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:25:44,620:INFO:Calculating mean and std
2023-07-02 13:25:44,622:INFO:Creating metrics dataframe
2023-07-02 13:25:44,628:INFO:Finalizing model
2023-07-02 13:25:46,236:INFO:Uploading results into container
2023-07-02 13:25:46,237:INFO:Uploading model into container now
2023-07-02 13:25:46,248:INFO:_master_model_container: 15
2023-07-02 13:25:46,248:INFO:_display_container: 3
2023-07-02 13:25:46,249:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:25:46,249:INFO:create_model() successfully completed......................................
2023-07-02 13:25:46,405:INFO:Initializing tune_model()
2023-07-02 13:25:46,405:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>)
2023-07-02 13:25:46,405:INFO:Checking exceptions
2023-07-02 13:25:46,434:INFO:Copying training dataset
2023-07-02 13:25:46,439:INFO:Checking base model
2023-07-02 13:25:46,439:INFO:Base model : Random Forest Classifier
2023-07-02 13:25:46,443:INFO:Declaring metric variables
2023-07-02 13:25:46,447:INFO:Defining Hyperparameters
2023-07-02 13:25:46,578:INFO:Tuning with n_jobs=-1
2023-07-02 13:25:46,578:INFO:Initializing RandomizedSearchCV
2023-07-02 13:27:22,657:INFO:best_params: {'actual_estimator__n_estimators': 180, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2023-07-02 13:27:22,659:INFO:Hyperparameter search completed
2023-07-02 13:27:22,659:INFO:SubProcess create_model() called ==================================
2023-07-02 13:27:22,660:INFO:Initializing create_model()
2023-07-02 13:27:22,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D8ECADEB0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 180, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2023-07-02 13:27:22,661:INFO:Checking exceptions
2023-07-02 13:27:22,661:INFO:Importing libraries
2023-07-02 13:27:22,662:INFO:Copying training dataset
2023-07-02 13:27:22,667:INFO:Defining folds
2023-07-02 13:27:22,668:INFO:Declaring metric variables
2023-07-02 13:27:22,672:INFO:Importing untrained model
2023-07-02 13:27:22,672:INFO:Declaring custom model
2023-07-02 13:27:22,677:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:27:22,686:INFO:Starting cross validation
2023-07-02 13:27:22,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:27:31,725:INFO:Calculating mean and std
2023-07-02 13:27:31,727:INFO:Creating metrics dataframe
2023-07-02 13:27:31,735:INFO:Finalizing model
2023-07-02 13:27:33,368:INFO:Uploading results into container
2023-07-02 13:27:33,369:INFO:Uploading model into container now
2023-07-02 13:27:33,370:INFO:_master_model_container: 16
2023-07-02 13:27:33,370:INFO:_display_container: 4
2023-07-02 13:27:33,370:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=6, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=180, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:27:33,370:INFO:create_model() successfully completed......................................
2023-07-02 13:27:33,488:INFO:SubProcess create_model() end ==================================
2023-07-02 13:27:33,489:INFO:choose_better activated
2023-07-02 13:27:33,491:INFO:SubProcess create_model() called ==================================
2023-07-02 13:27:33,493:INFO:Initializing create_model()
2023-07-02 13:27:33,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:27:33,494:INFO:Checking exceptions
2023-07-02 13:27:33,496:INFO:Importing libraries
2023-07-02 13:27:33,496:INFO:Copying training dataset
2023-07-02 13:27:33,499:INFO:Defining folds
2023-07-02 13:27:33,499:INFO:Declaring metric variables
2023-07-02 13:27:33,499:INFO:Importing untrained model
2023-07-02 13:27:33,499:INFO:Declaring custom model
2023-07-02 13:27:33,500:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:27:33,500:INFO:Starting cross validation
2023-07-02 13:27:33,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:27:42,343:INFO:Calculating mean and std
2023-07-02 13:27:42,343:INFO:Creating metrics dataframe
2023-07-02 13:27:42,345:INFO:Finalizing model
2023-07-02 13:27:43,518:INFO:Uploading results into container
2023-07-02 13:27:43,519:INFO:Uploading model into container now
2023-07-02 13:27:43,519:INFO:_master_model_container: 17
2023-07-02 13:27:43,519:INFO:_display_container: 5
2023-07-02 13:27:43,519:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:27:43,520:INFO:create_model() successfully completed......................................
2023-07-02 13:27:43,629:INFO:SubProcess create_model() end ==================================
2023-07-02 13:27:43,630:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False) result for Accuracy is 0.7704
2023-07-02 13:27:43,631:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=6, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=180, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False) result for Accuracy is 0.7606
2023-07-02 13:27:43,631:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False) is best model
2023-07-02 13:27:43,631:INFO:choose_better completed
2023-07-02 13:27:43,631:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-07-02 13:27:43,641:INFO:_master_model_container: 17
2023-07-02 13:27:43,641:INFO:_display_container: 4
2023-07-02 13:27:43,642:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:27:43,642:INFO:tune_model() successfully completed......................................
2023-07-02 13:27:44,523:INFO:Initializing plot_model()
2023-07-02 13:27:44,523:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:27:44,523:INFO:Checking exceptions
2023-07-02 13:27:44,545:INFO:Preloading libraries
2023-07-02 13:27:44,553:INFO:Copying training dataset
2023-07-02 13:27:44,553:INFO:Plot type: manifold
2023-07-02 13:27:44,723:INFO:Fitting & Transforming Model
2023-07-02 13:27:44,726:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 13:27:44,767:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 13:27:47,558:INFO:Visual Rendered Successfully
2023-07-02 13:27:47,715:INFO:plot_model() successfully completed......................................
2023-07-02 13:27:47,760:INFO:Initializing plot_model()
2023-07-02 13:27:47,761:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:27:47,761:INFO:Checking exceptions
2023-07-02 13:27:47,794:INFO:Preloading libraries
2023-07-02 13:27:47,808:INFO:Copying training dataset
2023-07-02 13:27:47,808:INFO:Plot type: feature
2023-07-02 13:27:47,809:WARNING:No coef_ found. Trying feature_importances_
2023-07-02 13:27:48,032:INFO:Visual Rendered Successfully
2023-07-02 13:27:48,197:INFO:plot_model() successfully completed......................................
2023-07-02 13:27:48,215:INFO:Initializing plot_model()
2023-07-02 13:27:48,216:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:27:48,216:INFO:Checking exceptions
2023-07-02 13:27:48,253:INFO:Preloading libraries
2023-07-02 13:27:48,266:INFO:Copying training dataset
2023-07-02 13:27:48,266:INFO:Plot type: confusion_matrix
2023-07-02 13:27:48,397:INFO:Fitting Model
2023-07-02 13:27:48,398:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 13:27:48,399:INFO:Scoring test/hold-out set
2023-07-02 13:27:48,583:INFO:Visual Rendered Successfully
2023-07-02 13:27:48,728:INFO:plot_model() successfully completed......................................
2023-07-02 13:27:48,747:INFO:Initializing plot_model()
2023-07-02 13:27:48,747:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:27:48,747:INFO:Checking exceptions
2023-07-02 13:27:48,768:INFO:Preloading libraries
2023-07-02 13:27:48,775:INFO:Copying training dataset
2023-07-02 13:27:48,775:INFO:Plot type: auc
2023-07-02 13:27:48,850:INFO:Fitting Model
2023-07-02 13:27:48,850:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 13:27:48,850:INFO:Scoring test/hold-out set
2023-07-02 13:27:49,062:INFO:Visual Rendered Successfully
2023-07-02 13:27:49,184:INFO:plot_model() successfully completed......................................
2023-07-02 13:27:49,203:INFO:Initializing plot_model()
2023-07-02 13:27:49,203:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:27:49,203:INFO:Checking exceptions
2023-07-02 13:27:49,223:INFO:Preloading libraries
2023-07-02 13:27:49,230:INFO:Copying training dataset
2023-07-02 13:27:49,230:INFO:Plot type: pr
2023-07-02 13:27:49,304:INFO:Fitting Model
2023-07-02 13:27:49,304:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 13:27:49,304:INFO:Scoring test/hold-out set
2023-07-02 13:27:49,476:INFO:Visual Rendered Successfully
2023-07-02 13:27:49,607:INFO:plot_model() successfully completed......................................
2023-07-02 13:27:49,625:INFO:Initializing predict_model()
2023-07-02 13:27:49,625:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000020D921CFA60>)
2023-07-02 13:27:49,625:INFO:Checking exceptions
2023-07-02 13:27:49,625:INFO:Preloading libraries
2023-07-02 13:27:49,864:INFO:Initializing finalize_model()
2023-07-02 13:27:49,864:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 13:27:49,865:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:27:49,871:INFO:Initializing create_model()
2023-07-02 13:27:49,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2826, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 13:27:49,871:INFO:Checking exceptions
2023-07-02 13:27:49,875:INFO:Importing libraries
2023-07-02 13:27:49,875:INFO:Copying training dataset
2023-07-02 13:27:49,876:INFO:Defining folds
2023-07-02 13:27:49,876:INFO:Declaring metric variables
2023-07-02 13:27:49,876:INFO:Importing untrained model
2023-07-02 13:27:49,876:INFO:Declaring custom model
2023-07-02 13:27:49,878:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:27:49,879:INFO:Cross validation set to False
2023-07-02 13:27:49,879:INFO:Fitting Model
2023-07-02 13:27:50,261:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strate...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='auto',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=2826,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-07-02 13:27:50,261:INFO:create_model() successfully completed......................................
2023-07-02 13:27:50,411:INFO:_master_model_container: 17
2023-07-02 13:27:50,411:INFO:_display_container: 5
2023-07-02 13:27:50,417:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strate...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='auto',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=2826,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-07-02 13:27:50,417:INFO:finalize_model() successfully completed......................................
2023-07-02 13:28:44,885:INFO:Initializing create_model()
2023-07-02 13:28:44,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:28:44,885:INFO:Checking exceptions
2023-07-02 13:28:44,923:INFO:Importing libraries
2023-07-02 13:28:44,924:INFO:Copying training dataset
2023-07-02 13:28:44,930:INFO:Defining folds
2023-07-02 13:28:44,931:INFO:Declaring metric variables
2023-07-02 13:28:44,935:INFO:Importing untrained model
2023-07-02 13:28:44,940:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:28:44,952:INFO:Starting cross validation
2023-07-02 13:28:44,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:28:53,518:INFO:Calculating mean and std
2023-07-02 13:28:53,520:INFO:Creating metrics dataframe
2023-07-02 13:28:53,526:INFO:Finalizing model
2023-07-02 13:28:54,722:INFO:Uploading results into container
2023-07-02 13:28:54,723:INFO:Uploading model into container now
2023-07-02 13:28:54,735:INFO:_master_model_container: 18
2023-07-02 13:28:54,735:INFO:_display_container: 6
2023-07-02 13:28:54,736:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:28:54,736:INFO:create_model() successfully completed......................................
2023-07-02 13:29:04,276:INFO:Initializing tune_model()
2023-07-02 13:29:04,276:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>)
2023-07-02 13:29:04,276:INFO:Checking exceptions
2023-07-02 13:29:04,306:INFO:Copying training dataset
2023-07-02 13:29:04,310:INFO:Checking base model
2023-07-02 13:29:04,310:INFO:Base model : Extra Trees Classifier
2023-07-02 13:29:04,315:INFO:Declaring metric variables
2023-07-02 13:29:04,319:INFO:Defining Hyperparameters
2023-07-02 13:29:04,440:INFO:Tuning with n_jobs=-1
2023-07-02 13:29:04,440:INFO:Initializing RandomizedSearchCV
2023-07-02 13:30:42,944:INFO:best_params: {'actual_estimator__n_estimators': 180, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2023-07-02 13:30:42,945:INFO:Hyperparameter search completed
2023-07-02 13:30:42,945:INFO:SubProcess create_model() called ==================================
2023-07-02 13:30:42,946:INFO:Initializing create_model()
2023-07-02 13:30:42,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D91E7D160>, model_only=True, return_train_score=False, kwargs={'n_estimators': 180, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2023-07-02 13:30:42,946:INFO:Checking exceptions
2023-07-02 13:30:42,946:INFO:Importing libraries
2023-07-02 13:30:42,947:INFO:Copying training dataset
2023-07-02 13:30:42,950:INFO:Defining folds
2023-07-02 13:30:42,951:INFO:Declaring metric variables
2023-07-02 13:30:42,956:INFO:Importing untrained model
2023-07-02 13:30:42,956:INFO:Declaring custom model
2023-07-02 13:30:42,961:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:30:42,968:INFO:Starting cross validation
2023-07-02 13:30:42,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:30:52,500:INFO:Calculating mean and std
2023-07-02 13:30:52,502:INFO:Creating metrics dataframe
2023-07-02 13:30:52,509:INFO:Finalizing model
2023-07-02 13:30:54,226:INFO:Uploading results into container
2023-07-02 13:30:54,226:INFO:Uploading model into container now
2023-07-02 13:30:54,227:INFO:_master_model_container: 19
2023-07-02 13:30:54,227:INFO:_display_container: 7
2023-07-02 13:30:54,228:INFO:ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                     criterion='entropy', max_depth=6, max_features='log2',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=3,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=180, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:30:54,228:INFO:create_model() successfully completed......................................
2023-07-02 13:30:54,348:INFO:SubProcess create_model() end ==================================
2023-07-02 13:30:54,348:INFO:choose_better activated
2023-07-02 13:30:54,352:INFO:SubProcess create_model() called ==================================
2023-07-02 13:30:54,352:INFO:Initializing create_model()
2023-07-02 13:30:54,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:30:54,353:INFO:Checking exceptions
2023-07-02 13:30:54,355:INFO:Importing libraries
2023-07-02 13:30:54,355:INFO:Copying training dataset
2023-07-02 13:30:54,358:INFO:Defining folds
2023-07-02 13:30:54,358:INFO:Declaring metric variables
2023-07-02 13:30:54,358:INFO:Importing untrained model
2023-07-02 13:30:54,358:INFO:Declaring custom model
2023-07-02 13:30:54,359:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:30:54,359:INFO:Starting cross validation
2023-07-02 13:30:54,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:31:03,340:INFO:Calculating mean and std
2023-07-02 13:31:03,341:INFO:Creating metrics dataframe
2023-07-02 13:31:03,343:INFO:Finalizing model
2023-07-02 13:31:04,687:INFO:Uploading results into container
2023-07-02 13:31:04,688:INFO:Uploading model into container now
2023-07-02 13:31:04,689:INFO:_master_model_container: 20
2023-07-02 13:31:04,689:INFO:_display_container: 8
2023-07-02 13:31:04,689:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:31:04,689:INFO:create_model() successfully completed......................................
2023-07-02 13:31:04,813:INFO:SubProcess create_model() end ==================================
2023-07-02 13:31:04,813:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False) result for Accuracy is 0.785
2023-07-02 13:31:04,814:INFO:ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                     criterion='entropy', max_depth=6, max_features='log2',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=3,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=180, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False) result for Accuracy is 0.7622
2023-07-02 13:31:04,814:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False) is best model
2023-07-02 13:31:04,814:INFO:choose_better completed
2023-07-02 13:31:04,814:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-07-02 13:31:04,824:INFO:_master_model_container: 20
2023-07-02 13:31:04,825:INFO:_display_container: 7
2023-07-02 13:31:04,825:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False)
2023-07-02 13:31:04,826:INFO:tune_model() successfully completed......................................
2023-07-02 13:31:11,361:INFO:Initializing plot_model()
2023-07-02 13:31:11,361:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:31:11,362:INFO:Checking exceptions
2023-07-02 13:31:11,386:INFO:Preloading libraries
2023-07-02 13:31:11,396:INFO:Copying training dataset
2023-07-02 13:31:11,396:INFO:Plot type: manifold
2023-07-02 13:31:11,476:INFO:Fitting & Transforming Model
2023-07-02 13:31:11,476:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 13:31:11,505:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 13:31:13,534:INFO:Visual Rendered Successfully
2023-07-02 13:31:13,657:INFO:plot_model() successfully completed......................................
2023-07-02 13:31:15,198:INFO:Initializing plot_model()
2023-07-02 13:31:15,198:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:31:15,198:INFO:Checking exceptions
2023-07-02 13:31:15,223:INFO:Preloading libraries
2023-07-02 13:31:15,232:INFO:Copying training dataset
2023-07-02 13:31:15,233:INFO:Plot type: confusion_matrix
2023-07-02 13:31:15,302:INFO:Fitting Model
2023-07-02 13:31:15,302:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-07-02 13:31:15,302:INFO:Scoring test/hold-out set
2023-07-02 13:31:15,430:INFO:Visual Rendered Successfully
2023-07-02 13:31:15,549:INFO:plot_model() successfully completed......................................
2023-07-02 13:31:23,673:INFO:Initializing plot_model()
2023-07-02 13:31:23,673:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:31:23,673:INFO:Checking exceptions
2023-07-02 13:31:23,696:INFO:Preloading libraries
2023-07-02 13:31:23,706:INFO:Copying training dataset
2023-07-02 13:31:23,706:INFO:Plot type: feature
2023-07-02 13:31:23,707:WARNING:No coef_ found. Trying feature_importances_
2023-07-02 13:31:23,835:INFO:Visual Rendered Successfully
2023-07-02 13:31:23,950:INFO:plot_model() successfully completed......................................
2023-07-02 13:31:35,263:INFO:Initializing plot_model()
2023-07-02 13:31:35,263:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:31:35,263:INFO:Checking exceptions
2023-07-02 13:31:35,288:INFO:Preloading libraries
2023-07-02 13:31:35,297:INFO:Copying training dataset
2023-07-02 13:31:35,297:INFO:Plot type: auc
2023-07-02 13:31:35,366:INFO:Fitting Model
2023-07-02 13:31:35,366:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-07-02 13:31:35,366:INFO:Scoring test/hold-out set
2023-07-02 13:31:35,548:INFO:Visual Rendered Successfully
2023-07-02 13:31:35,665:INFO:plot_model() successfully completed......................................
2023-07-02 13:31:39,607:INFO:Initializing plot_model()
2023-07-02 13:31:39,608:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2826, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D8F7EE2E0>, system=True)
2023-07-02 13:31:39,608:INFO:Checking exceptions
2023-07-02 13:31:39,638:INFO:Preloading libraries
2023-07-02 13:31:39,647:INFO:Copying training dataset
2023-07-02 13:31:39,647:INFO:Plot type: pr
2023-07-02 13:31:39,719:INFO:Fitting Model
2023-07-02 13:31:39,719:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-07-02 13:31:39,720:INFO:Scoring test/hold-out set
2023-07-02 13:31:39,880:INFO:Visual Rendered Successfully
2023-07-02 13:31:40,046:INFO:plot_model() successfully completed......................................
2023-07-02 13:32:09,073:INFO:PyCaret ClassificationExperiment
2023-07-02 13:32:09,073:INFO:Logging name: clf-default-name
2023-07-02 13:32:09,074:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 13:32:09,074:INFO:version 3.0.0
2023-07-02 13:32:09,074:INFO:Initializing setup()
2023-07-02 13:32:09,074:INFO:self.USI: 4201
2023-07-02 13:32:09,074:INFO:self._variable_keys: {'fold_shuffle_param', 'html_param', 'memory', '_ml_usecase', 'USI', 'seed', 'idx', 'gpu_param', 'is_multiclass', 'y_train', 'fold_generator', 'target_param', 'logging_param', 'X_train', 'pipeline', 'data', 'gpu_n_jobs_param', 'n_jobs_param', 'y', 'fix_imbalance', 'X_test', 'fold_groups_param', 'log_plots_param', 'X', 'exp_id', 'exp_name_log', '_available_plots', 'y_test'}
2023-07-02 13:32:09,074:INFO:Checking environment
2023-07-02 13:32:09,074:INFO:python_version: 3.9.13
2023-07-02 13:32:09,074:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 13:32:09,074:INFO:machine: AMD64
2023-07-02 13:32:09,074:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 13:32:09,074:INFO:Memory: svmem(total=16456249344, available=2479017984, percent=84.9, used=13977231360, free=2479017984)
2023-07-02 13:32:09,074:INFO:Physical Core: 6
2023-07-02 13:32:09,074:INFO:Logical Core: 12
2023-07-02 13:32:09,074:INFO:Checking libraries
2023-07-02 13:32:09,074:INFO:System:
2023-07-02 13:32:09,074:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 13:32:09,074:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 13:32:09,074:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 13:32:09,074:INFO:PyCaret required dependencies:
2023-07-02 13:32:09,074:INFO:                 pip: 22.2.2
2023-07-02 13:32:09,075:INFO:          setuptools: 63.4.1
2023-07-02 13:32:09,075:INFO:             pycaret: 3.0.0
2023-07-02 13:32:09,075:INFO:             IPython: 7.31.1
2023-07-02 13:32:09,075:INFO:          ipywidgets: 7.6.5
2023-07-02 13:32:09,075:INFO:                tqdm: 4.64.1
2023-07-02 13:32:09,075:INFO:               numpy: 1.21.5
2023-07-02 13:32:09,075:INFO:              pandas: 1.4.4
2023-07-02 13:32:09,075:INFO:              jinja2: 3.1.2
2023-07-02 13:32:09,075:INFO:               scipy: 1.9.1
2023-07-02 13:32:09,075:INFO:              joblib: 1.2.0
2023-07-02 13:32:09,075:INFO:             sklearn: 1.0.2
2023-07-02 13:32:09,075:INFO:                pyod: 1.0.9
2023-07-02 13:32:09,075:INFO:            imblearn: 0.10.1
2023-07-02 13:32:09,075:INFO:   category_encoders: 2.6.0
2023-07-02 13:32:09,075:INFO:            lightgbm: 3.3.5
2023-07-02 13:32:09,075:INFO:               numba: 0.55.1
2023-07-02 13:32:09,075:INFO:            requests: 2.28.1
2023-07-02 13:32:09,075:INFO:          matplotlib: 3.5.2
2023-07-02 13:32:09,075:INFO:          scikitplot: 0.3.7
2023-07-02 13:32:09,075:INFO:         yellowbrick: 1.5
2023-07-02 13:32:09,075:INFO:              plotly: 5.9.0
2023-07-02 13:32:09,075:INFO:             kaleido: 0.2.1
2023-07-02 13:32:09,075:INFO:         statsmodels: 0.13.2
2023-07-02 13:32:09,075:INFO:              sktime: 0.16.1
2023-07-02 13:32:09,075:INFO:               tbats: 1.1.2
2023-07-02 13:32:09,075:INFO:            pmdarima: 2.0.3
2023-07-02 13:32:09,076:INFO:              psutil: 5.9.0
2023-07-02 13:32:09,076:INFO:PyCaret optional dependencies:
2023-07-02 13:32:09,076:INFO:                shap: 0.41.0
2023-07-02 13:32:09,076:INFO:           interpret: Not installed
2023-07-02 13:32:09,076:INFO:                umap: Not installed
2023-07-02 13:32:09,076:INFO:    pandas_profiling: Not installed
2023-07-02 13:32:09,076:INFO:  explainerdashboard: Not installed
2023-07-02 13:32:09,076:INFO:             autoviz: Not installed
2023-07-02 13:32:09,076:INFO:           fairlearn: Not installed
2023-07-02 13:32:09,076:INFO:             xgboost: Not installed
2023-07-02 13:32:09,076:INFO:            catboost: Not installed
2023-07-02 13:32:09,076:INFO:              kmodes: Not installed
2023-07-02 13:32:09,076:INFO:             mlxtend: Not installed
2023-07-02 13:32:09,076:INFO:       statsforecast: Not installed
2023-07-02 13:32:09,076:INFO:        tune_sklearn: 0.4.5
2023-07-02 13:32:09,076:INFO:                 ray: 2.3.1
2023-07-02 13:32:09,076:INFO:            hyperopt: Not installed
2023-07-02 13:32:09,076:INFO:              optuna: 3.1.0
2023-07-02 13:32:09,076:INFO:               skopt: Not installed
2023-07-02 13:32:09,076:INFO:              mlflow: 2.2.2
2023-07-02 13:32:09,076:INFO:              gradio: 3.23.0
2023-07-02 13:32:09,077:INFO:             fastapi: 0.95.0
2023-07-02 13:32:09,077:INFO:             uvicorn: 0.21.1
2023-07-02 13:32:09,077:INFO:              m2cgen: Not installed
2023-07-02 13:32:09,077:INFO:           evidently: Not installed
2023-07-02 13:32:09,077:INFO:               fugue: Not installed
2023-07-02 13:32:09,077:INFO:           streamlit: 1.20.0
2023-07-02 13:32:09,077:INFO:             prophet: Not installed
2023-07-02 13:32:09,077:INFO:None
2023-07-02 13:32:09,077:INFO:Set up data.
2023-07-02 13:32:09,081:INFO:Set up train/test split.
2023-07-02 13:32:09,085:INFO:Set up index.
2023-07-02 13:32:09,085:INFO:Set up folding strategy.
2023-07-02 13:32:09,086:INFO:Assigning column types.
2023-07-02 13:32:09,089:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 13:32:09,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:32:09,149:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:32:09,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,236:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:32:09,237:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:32:09,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,273:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 13:32:09,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:32:09,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,404:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:32:09,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,435:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 13:32:09,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,597:INFO:Preparing preprocessing pipeline...
2023-07-02 13:32:09,598:INFO:Set up simple imputation.
2023-07-02 13:32:09,599:INFO:Set up feature normalization.
2023-07-02 13:32:09,624:INFO:Finished creating preprocessing pipeline.
2023-07-02 13:32:09,628:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 13:32:09,628:INFO:Creating final display dataframe.
2023-07-02 13:32:09,719:INFO:Setup _display_container:                     Description             Value
0                    Session id              5720
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 8)
4        Transformed data shape          (768, 8)
5   Transformed train set shape          (614, 8)
6    Transformed test set shape          (154, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4201
2023-07-02 13:32:09,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:32:09,907:INFO:setup() successfully completed in 1.7s...............
2023-07-02 13:32:13,413:INFO:Initializing compare_models()
2023-07-02 13:32:13,413:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 13:32:13,413:INFO:Checking exceptions
2023-07-02 13:32:13,417:INFO:Preparing display monitor
2023-07-02 13:32:13,460:INFO:Initializing Logistic Regression
2023-07-02 13:32:13,460:INFO:Total runtime is 0.0 minutes
2023-07-02 13:32:13,464:INFO:SubProcess create_model() called ==================================
2023-07-02 13:32:13,465:INFO:Initializing create_model()
2023-07-02 13:32:13,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:32:13,465:INFO:Checking exceptions
2023-07-02 13:32:13,465:INFO:Importing libraries
2023-07-02 13:32:13,465:INFO:Copying training dataset
2023-07-02 13:32:13,470:INFO:Defining folds
2023-07-02 13:32:13,470:INFO:Declaring metric variables
2023-07-02 13:32:13,473:INFO:Importing untrained model
2023-07-02 13:32:13,477:INFO:Logistic Regression Imported successfully
2023-07-02 13:32:13,486:INFO:Starting cross validation
2023-07-02 13:32:13,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:32:23,562:INFO:Calculating mean and std
2023-07-02 13:32:23,563:INFO:Creating metrics dataframe
2023-07-02 13:32:24,869:INFO:Uploading results into container
2023-07-02 13:32:24,870:INFO:Uploading model into container now
2023-07-02 13:32:24,871:INFO:_master_model_container: 1
2023-07-02 13:32:24,871:INFO:_display_container: 2
2023-07-02 13:32:24,872:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5720, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:32:24,872:INFO:create_model() successfully completed......................................
2023-07-02 13:32:25,004:INFO:SubProcess create_model() end ==================================
2023-07-02 13:32:25,005:INFO:Creating metrics dataframe
2023-07-02 13:32:25,016:INFO:Initializing K Neighbors Classifier
2023-07-02 13:32:25,016:INFO:Total runtime is 0.19259352286656697 minutes
2023-07-02 13:32:25,020:INFO:SubProcess create_model() called ==================================
2023-07-02 13:32:25,021:INFO:Initializing create_model()
2023-07-02 13:32:25,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:32:25,021:INFO:Checking exceptions
2023-07-02 13:32:25,022:INFO:Importing libraries
2023-07-02 13:32:25,022:INFO:Copying training dataset
2023-07-02 13:32:25,027:INFO:Defining folds
2023-07-02 13:32:25,028:INFO:Declaring metric variables
2023-07-02 13:32:25,033:INFO:Importing untrained model
2023-07-02 13:32:25,037:INFO:K Neighbors Classifier Imported successfully
2023-07-02 13:32:25,048:INFO:Starting cross validation
2023-07-02 13:32:25,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:32:25,169:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,177:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,180:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,191:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,198:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,208:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,214:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,218:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,225:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:25,226:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:32:37,072:INFO:Calculating mean and std
2023-07-02 13:32:37,074:INFO:Creating metrics dataframe
2023-07-02 13:32:38,787:INFO:Uploading results into container
2023-07-02 13:32:38,789:INFO:Uploading model into container now
2023-07-02 13:32:38,789:INFO:_master_model_container: 2
2023-07-02 13:32:38,789:INFO:_display_container: 2
2023-07-02 13:32:38,790:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 13:32:38,790:INFO:create_model() successfully completed......................................
2023-07-02 13:32:38,937:INFO:SubProcess create_model() end ==================================
2023-07-02 13:32:38,938:INFO:Creating metrics dataframe
2023-07-02 13:32:38,949:INFO:Initializing Naive Bayes
2023-07-02 13:32:38,949:INFO:Total runtime is 0.42481953303019204 minutes
2023-07-02 13:32:38,954:INFO:SubProcess create_model() called ==================================
2023-07-02 13:32:38,954:INFO:Initializing create_model()
2023-07-02 13:32:38,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:32:38,955:INFO:Checking exceptions
2023-07-02 13:32:38,955:INFO:Importing libraries
2023-07-02 13:32:38,955:INFO:Copying training dataset
2023-07-02 13:32:38,960:INFO:Defining folds
2023-07-02 13:32:38,961:INFO:Declaring metric variables
2023-07-02 13:32:38,968:INFO:Importing untrained model
2023-07-02 13:32:38,974:INFO:Naive Bayes Imported successfully
2023-07-02 13:32:38,988:INFO:Starting cross validation
2023-07-02 13:32:38,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:32:48,788:INFO:Calculating mean and std
2023-07-02 13:32:48,789:INFO:Creating metrics dataframe
2023-07-02 13:32:49,992:INFO:Uploading results into container
2023-07-02 13:32:49,993:INFO:Uploading model into container now
2023-07-02 13:32:49,993:INFO:_master_model_container: 3
2023-07-02 13:32:49,994:INFO:_display_container: 2
2023-07-02 13:32:49,994:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 13:32:49,994:INFO:create_model() successfully completed......................................
2023-07-02 13:32:50,113:INFO:SubProcess create_model() end ==================================
2023-07-02 13:32:50,113:INFO:Creating metrics dataframe
2023-07-02 13:32:50,121:INFO:Initializing Decision Tree Classifier
2023-07-02 13:32:50,121:INFO:Total runtime is 0.6110141754150391 minutes
2023-07-02 13:32:50,124:INFO:SubProcess create_model() called ==================================
2023-07-02 13:32:50,125:INFO:Initializing create_model()
2023-07-02 13:32:50,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:32:50,125:INFO:Checking exceptions
2023-07-02 13:32:50,125:INFO:Importing libraries
2023-07-02 13:32:50,125:INFO:Copying training dataset
2023-07-02 13:32:50,130:INFO:Defining folds
2023-07-02 13:32:50,130:INFO:Declaring metric variables
2023-07-02 13:32:50,135:INFO:Importing untrained model
2023-07-02 13:32:50,139:INFO:Decision Tree Classifier Imported successfully
2023-07-02 13:32:50,147:INFO:Starting cross validation
2023-07-02 13:32:50,149:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:32:58,911:INFO:Calculating mean and std
2023-07-02 13:32:58,912:INFO:Creating metrics dataframe
2023-07-02 13:33:00,257:INFO:Uploading results into container
2023-07-02 13:33:00,258:INFO:Uploading model into container now
2023-07-02 13:33:00,258:INFO:_master_model_container: 4
2023-07-02 13:33:00,258:INFO:_display_container: 2
2023-07-02 13:33:00,259:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5720, splitter='best')
2023-07-02 13:33:00,259:INFO:create_model() successfully completed......................................
2023-07-02 13:33:00,378:INFO:SubProcess create_model() end ==================================
2023-07-02 13:33:00,378:INFO:Creating metrics dataframe
2023-07-02 13:33:00,388:INFO:Initializing SVM - Linear Kernel
2023-07-02 13:33:00,388:INFO:Total runtime is 0.7821276903152466 minutes
2023-07-02 13:33:00,392:INFO:SubProcess create_model() called ==================================
2023-07-02 13:33:00,392:INFO:Initializing create_model()
2023-07-02 13:33:00,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:33:00,392:INFO:Checking exceptions
2023-07-02 13:33:00,392:INFO:Importing libraries
2023-07-02 13:33:00,393:INFO:Copying training dataset
2023-07-02 13:33:00,397:INFO:Defining folds
2023-07-02 13:33:00,398:INFO:Declaring metric variables
2023-07-02 13:33:00,403:INFO:Importing untrained model
2023-07-02 13:33:00,407:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 13:33:00,415:INFO:Starting cross validation
2023-07-02 13:33:00,416:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:33:00,498:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,505:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,512:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,533:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,539:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,553:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,553:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,567:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:00,569:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:33:09,101:INFO:Calculating mean and std
2023-07-02 13:33:09,102:INFO:Creating metrics dataframe
2023-07-02 13:33:10,315:INFO:Uploading results into container
2023-07-02 13:33:10,316:INFO:Uploading model into container now
2023-07-02 13:33:10,316:INFO:_master_model_container: 5
2023-07-02 13:33:10,316:INFO:_display_container: 2
2023-07-02 13:33:10,317:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5720, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 13:33:10,317:INFO:create_model() successfully completed......................................
2023-07-02 13:33:10,434:INFO:SubProcess create_model() end ==================================
2023-07-02 13:33:10,434:INFO:Creating metrics dataframe
2023-07-02 13:33:10,443:INFO:Initializing Ridge Classifier
2023-07-02 13:33:10,444:INFO:Total runtime is 0.9497256278991699 minutes
2023-07-02 13:33:10,447:INFO:SubProcess create_model() called ==================================
2023-07-02 13:33:10,447:INFO:Initializing create_model()
2023-07-02 13:33:10,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:33:10,447:INFO:Checking exceptions
2023-07-02 13:33:10,448:INFO:Importing libraries
2023-07-02 13:33:10,448:INFO:Copying training dataset
2023-07-02 13:33:10,453:INFO:Defining folds
2023-07-02 13:33:10,453:INFO:Declaring metric variables
2023-07-02 13:33:10,457:INFO:Importing untrained model
2023-07-02 13:33:10,462:INFO:Ridge Classifier Imported successfully
2023-07-02 13:33:10,471:INFO:Starting cross validation
2023-07-02 13:33:10,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:33:10,549:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,563:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,565:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,576:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,597:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,601:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,611:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,615:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:10,625:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:33:19,048:INFO:Calculating mean and std
2023-07-02 13:33:19,050:INFO:Creating metrics dataframe
2023-07-02 13:33:20,247:INFO:Uploading results into container
2023-07-02 13:33:20,248:INFO:Uploading model into container now
2023-07-02 13:33:20,249:INFO:_master_model_container: 6
2023-07-02 13:33:20,249:INFO:_display_container: 2
2023-07-02 13:33:20,250:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=5720, solver='auto', tol=0.001)
2023-07-02 13:33:20,250:INFO:create_model() successfully completed......................................
2023-07-02 13:33:20,366:INFO:SubProcess create_model() end ==================================
2023-07-02 13:33:20,366:INFO:Creating metrics dataframe
2023-07-02 13:33:20,375:INFO:Initializing Random Forest Classifier
2023-07-02 13:33:20,376:INFO:Total runtime is 1.1152729312578837 minutes
2023-07-02 13:33:20,379:INFO:SubProcess create_model() called ==================================
2023-07-02 13:33:20,380:INFO:Initializing create_model()
2023-07-02 13:33:20,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:33:20,380:INFO:Checking exceptions
2023-07-02 13:33:20,380:INFO:Importing libraries
2023-07-02 13:33:20,380:INFO:Copying training dataset
2023-07-02 13:33:20,384:INFO:Defining folds
2023-07-02 13:33:20,384:INFO:Declaring metric variables
2023-07-02 13:33:20,388:INFO:Importing untrained model
2023-07-02 13:33:20,393:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:33:20,403:INFO:Starting cross validation
2023-07-02 13:33:20,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:33:29,782:INFO:Calculating mean and std
2023-07-02 13:33:29,783:INFO:Creating metrics dataframe
2023-07-02 13:33:31,087:INFO:Uploading results into container
2023-07-02 13:33:31,088:INFO:Uploading model into container now
2023-07-02 13:33:31,089:INFO:_master_model_container: 7
2023-07-02 13:33:31,089:INFO:_display_container: 2
2023-07-02 13:33:31,089:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5720, verbose=0, warm_start=False)
2023-07-02 13:33:31,089:INFO:create_model() successfully completed......................................
2023-07-02 13:33:31,208:INFO:SubProcess create_model() end ==================================
2023-07-02 13:33:31,209:INFO:Creating metrics dataframe
2023-07-02 13:33:31,219:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 13:33:31,219:INFO:Total runtime is 1.295987848440806 minutes
2023-07-02 13:33:31,223:INFO:SubProcess create_model() called ==================================
2023-07-02 13:33:31,223:INFO:Initializing create_model()
2023-07-02 13:33:31,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:33:31,223:INFO:Checking exceptions
2023-07-02 13:33:31,223:INFO:Importing libraries
2023-07-02 13:33:31,224:INFO:Copying training dataset
2023-07-02 13:33:31,228:INFO:Defining folds
2023-07-02 13:33:31,228:INFO:Declaring metric variables
2023-07-02 13:33:31,233:INFO:Importing untrained model
2023-07-02 13:33:31,238:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 13:33:31,247:INFO:Starting cross validation
2023-07-02 13:33:31,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:33:39,574:INFO:Calculating mean and std
2023-07-02 13:33:39,576:INFO:Creating metrics dataframe
2023-07-02 13:33:40,780:INFO:Uploading results into container
2023-07-02 13:33:40,781:INFO:Uploading model into container now
2023-07-02 13:33:40,782:INFO:_master_model_container: 8
2023-07-02 13:33:40,782:INFO:_display_container: 2
2023-07-02 13:33:40,782:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 13:33:40,782:INFO:create_model() successfully completed......................................
2023-07-02 13:33:40,902:INFO:SubProcess create_model() end ==================================
2023-07-02 13:33:40,902:INFO:Creating metrics dataframe
2023-07-02 13:33:40,914:INFO:Initializing Ada Boost Classifier
2023-07-02 13:33:40,914:INFO:Total runtime is 1.4575612743695576 minutes
2023-07-02 13:33:40,917:INFO:SubProcess create_model() called ==================================
2023-07-02 13:33:40,918:INFO:Initializing create_model()
2023-07-02 13:33:40,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:33:40,918:INFO:Checking exceptions
2023-07-02 13:33:40,918:INFO:Importing libraries
2023-07-02 13:33:40,918:INFO:Copying training dataset
2023-07-02 13:33:40,922:INFO:Defining folds
2023-07-02 13:33:40,922:INFO:Declaring metric variables
2023-07-02 13:33:40,926:INFO:Importing untrained model
2023-07-02 13:33:40,930:INFO:Ada Boost Classifier Imported successfully
2023-07-02 13:33:40,939:INFO:Starting cross validation
2023-07-02 13:33:40,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:33:50,246:INFO:Calculating mean and std
2023-07-02 13:33:50,247:INFO:Creating metrics dataframe
2023-07-02 13:33:51,562:INFO:Uploading results into container
2023-07-02 13:33:51,563:INFO:Uploading model into container now
2023-07-02 13:33:51,564:INFO:_master_model_container: 9
2023-07-02 13:33:51,564:INFO:_display_container: 2
2023-07-02 13:33:51,565:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5720)
2023-07-02 13:33:51,565:INFO:create_model() successfully completed......................................
2023-07-02 13:33:51,698:INFO:SubProcess create_model() end ==================================
2023-07-02 13:33:51,698:INFO:Creating metrics dataframe
2023-07-02 13:33:51,709:INFO:Initializing Gradient Boosting Classifier
2023-07-02 13:33:51,709:INFO:Total runtime is 1.63748087088267 minutes
2023-07-02 13:33:51,714:INFO:SubProcess create_model() called ==================================
2023-07-02 13:33:51,714:INFO:Initializing create_model()
2023-07-02 13:33:51,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:33:51,714:INFO:Checking exceptions
2023-07-02 13:33:51,714:INFO:Importing libraries
2023-07-02 13:33:51,714:INFO:Copying training dataset
2023-07-02 13:33:51,719:INFO:Defining folds
2023-07-02 13:33:51,720:INFO:Declaring metric variables
2023-07-02 13:33:51,726:INFO:Importing untrained model
2023-07-02 13:33:51,734:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 13:33:51,744:INFO:Starting cross validation
2023-07-02 13:33:51,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:34:00,693:INFO:Calculating mean and std
2023-07-02 13:34:00,694:INFO:Creating metrics dataframe
2023-07-02 13:34:02,049:INFO:Uploading results into container
2023-07-02 13:34:02,050:INFO:Uploading model into container now
2023-07-02 13:34:02,051:INFO:_master_model_container: 10
2023-07-02 13:34:02,051:INFO:_display_container: 2
2023-07-02 13:34:02,051:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5720, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 13:34:02,051:INFO:create_model() successfully completed......................................
2023-07-02 13:34:02,176:INFO:SubProcess create_model() end ==================================
2023-07-02 13:34:02,176:INFO:Creating metrics dataframe
2023-07-02 13:34:02,187:INFO:Initializing Linear Discriminant Analysis
2023-07-02 13:34:02,187:INFO:Total runtime is 1.8121240615844725 minutes
2023-07-02 13:34:02,190:INFO:SubProcess create_model() called ==================================
2023-07-02 13:34:02,191:INFO:Initializing create_model()
2023-07-02 13:34:02,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:34:02,192:INFO:Checking exceptions
2023-07-02 13:34:02,192:INFO:Importing libraries
2023-07-02 13:34:02,192:INFO:Copying training dataset
2023-07-02 13:34:02,196:INFO:Defining folds
2023-07-02 13:34:02,197:INFO:Declaring metric variables
2023-07-02 13:34:02,201:INFO:Importing untrained model
2023-07-02 13:34:02,205:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:34:02,214:INFO:Starting cross validation
2023-07-02 13:34:02,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:34:10,699:INFO:Calculating mean and std
2023-07-02 13:34:10,701:INFO:Creating metrics dataframe
2023-07-02 13:34:11,908:INFO:Uploading results into container
2023-07-02 13:34:11,909:INFO:Uploading model into container now
2023-07-02 13:34:11,909:INFO:_master_model_container: 11
2023-07-02 13:34:11,910:INFO:_display_container: 2
2023-07-02 13:34:11,910:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:34:11,910:INFO:create_model() successfully completed......................................
2023-07-02 13:34:12,029:INFO:SubProcess create_model() end ==================================
2023-07-02 13:34:12,029:INFO:Creating metrics dataframe
2023-07-02 13:34:12,041:INFO:Initializing Extra Trees Classifier
2023-07-02 13:34:12,041:INFO:Total runtime is 1.9763528227806089 minutes
2023-07-02 13:34:12,044:INFO:SubProcess create_model() called ==================================
2023-07-02 13:34:12,045:INFO:Initializing create_model()
2023-07-02 13:34:12,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:34:12,045:INFO:Checking exceptions
2023-07-02 13:34:12,045:INFO:Importing libraries
2023-07-02 13:34:12,045:INFO:Copying training dataset
2023-07-02 13:34:12,049:INFO:Defining folds
2023-07-02 13:34:12,049:INFO:Declaring metric variables
2023-07-02 13:34:12,055:INFO:Importing untrained model
2023-07-02 13:34:12,060:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:34:12,068:INFO:Starting cross validation
2023-07-02 13:34:12,070:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:34:21,591:INFO:Calculating mean and std
2023-07-02 13:34:21,593:INFO:Creating metrics dataframe
2023-07-02 13:34:22,815:INFO:Uploading results into container
2023-07-02 13:34:22,816:INFO:Uploading model into container now
2023-07-02 13:34:22,817:INFO:_master_model_container: 12
2023-07-02 13:34:22,817:INFO:_display_container: 2
2023-07-02 13:34:22,818:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5720, verbose=0, warm_start=False)
2023-07-02 13:34:22,818:INFO:create_model() successfully completed......................................
2023-07-02 13:34:22,937:INFO:SubProcess create_model() end ==================================
2023-07-02 13:34:22,937:INFO:Creating metrics dataframe
2023-07-02 13:34:22,949:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 13:34:22,949:INFO:Total runtime is 2.158152186870575 minutes
2023-07-02 13:34:22,953:INFO:SubProcess create_model() called ==================================
2023-07-02 13:34:22,953:INFO:Initializing create_model()
2023-07-02 13:34:22,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:34:22,954:INFO:Checking exceptions
2023-07-02 13:34:22,954:INFO:Importing libraries
2023-07-02 13:34:22,954:INFO:Copying training dataset
2023-07-02 13:34:22,958:INFO:Defining folds
2023-07-02 13:34:22,959:INFO:Declaring metric variables
2023-07-02 13:34:22,962:INFO:Importing untrained model
2023-07-02 13:34:22,967:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 13:34:22,978:INFO:Starting cross validation
2023-07-02 13:34:22,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:34:31,800:INFO:Calculating mean and std
2023-07-02 13:34:31,802:INFO:Creating metrics dataframe
2023-07-02 13:34:33,097:INFO:Uploading results into container
2023-07-02 13:34:33,098:INFO:Uploading model into container now
2023-07-02 13:34:33,099:INFO:_master_model_container: 13
2023-07-02 13:34:33,099:INFO:_display_container: 2
2023-07-02 13:34:33,099:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5720, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 13:34:33,100:INFO:create_model() successfully completed......................................
2023-07-02 13:34:33,229:INFO:SubProcess create_model() end ==================================
2023-07-02 13:34:33,230:INFO:Creating metrics dataframe
2023-07-02 13:34:33,243:INFO:Initializing Dummy Classifier
2023-07-02 13:34:33,243:INFO:Total runtime is 2.3297233978907266 minutes
2023-07-02 13:34:33,248:INFO:SubProcess create_model() called ==================================
2023-07-02 13:34:33,248:INFO:Initializing create_model()
2023-07-02 13:34:33,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D919D7B50>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:34:33,249:INFO:Checking exceptions
2023-07-02 13:34:33,249:INFO:Importing libraries
2023-07-02 13:34:33,249:INFO:Copying training dataset
2023-07-02 13:34:33,255:INFO:Defining folds
2023-07-02 13:34:33,256:INFO:Declaring metric variables
2023-07-02 13:34:33,260:INFO:Importing untrained model
2023-07-02 13:34:33,265:INFO:Dummy Classifier Imported successfully
2023-07-02 13:34:33,275:INFO:Starting cross validation
2023-07-02 13:34:33,277:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:34:33,415:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,417:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,432:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,437:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,440:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,456:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,456:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,473:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,479:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:33,490:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:34:42,066:INFO:Calculating mean and std
2023-07-02 13:34:42,068:INFO:Creating metrics dataframe
2023-07-02 13:34:43,283:INFO:Uploading results into container
2023-07-02 13:34:43,284:INFO:Uploading model into container now
2023-07-02 13:34:43,284:INFO:_master_model_container: 14
2023-07-02 13:34:43,284:INFO:_display_container: 2
2023-07-02 13:34:43,285:INFO:DummyClassifier(constant=None, random_state=5720, strategy='prior')
2023-07-02 13:34:43,285:INFO:create_model() successfully completed......................................
2023-07-02 13:34:43,412:INFO:SubProcess create_model() end ==================================
2023-07-02 13:34:43,412:INFO:Creating metrics dataframe
2023-07-02 13:34:43,433:INFO:Initializing create_model()
2023-07-02 13:34:43,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:34:43,433:INFO:Checking exceptions
2023-07-02 13:34:43,435:INFO:Importing libraries
2023-07-02 13:34:43,435:INFO:Copying training dataset
2023-07-02 13:34:43,438:INFO:Defining folds
2023-07-02 13:34:43,438:INFO:Declaring metric variables
2023-07-02 13:34:43,438:INFO:Importing untrained model
2023-07-02 13:34:43,438:INFO:Declaring custom model
2023-07-02 13:34:43,439:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:34:43,440:INFO:Cross validation set to False
2023-07-02 13:34:43,440:INFO:Fitting Model
2023-07-02 13:34:44,245:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:34:44,246:INFO:create_model() successfully completed......................................
2023-07-02 13:34:44,388:INFO:_master_model_container: 14
2023-07-02 13:34:44,388:INFO:_display_container: 2
2023-07-02 13:34:44,389:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:34:44,389:INFO:compare_models() successfully completed......................................
2023-07-02 13:34:56,227:INFO:Initializing create_model()
2023-07-02 13:34:56,227:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:34:56,227:INFO:Checking exceptions
2023-07-02 13:34:56,257:INFO:Importing libraries
2023-07-02 13:34:56,257:INFO:Copying training dataset
2023-07-02 13:34:56,266:INFO:Defining folds
2023-07-02 13:34:56,267:INFO:Declaring metric variables
2023-07-02 13:34:56,272:INFO:Importing untrained model
2023-07-02 13:34:56,276:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:34:56,284:INFO:Starting cross validation
2023-07-02 13:34:56,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:35:04,708:INFO:Calculating mean and std
2023-07-02 13:35:04,710:INFO:Creating metrics dataframe
2023-07-02 13:35:04,717:INFO:Finalizing model
2023-07-02 13:35:06,155:INFO:Uploading results into container
2023-07-02 13:35:06,157:INFO:Uploading model into container now
2023-07-02 13:35:06,167:INFO:_master_model_container: 15
2023-07-02 13:35:06,168:INFO:_display_container: 3
2023-07-02 13:35:06,168:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:35:06,169:INFO:create_model() successfully completed......................................
2023-07-02 13:35:12,914:INFO:Initializing tune_model()
2023-07-02 13:35:12,914:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>)
2023-07-02 13:35:12,914:INFO:Checking exceptions
2023-07-02 13:35:12,943:INFO:Copying training dataset
2023-07-02 13:35:12,945:INFO:Checking base model
2023-07-02 13:35:12,946:INFO:Base model : Linear Discriminant Analysis
2023-07-02 13:35:12,950:INFO:Declaring metric variables
2023-07-02 13:35:12,954:INFO:Defining Hyperparameters
2023-07-02 13:35:13,078:INFO:Tuning with n_jobs=-1
2023-07-02 13:35:13,078:INFO:Initializing RandomizedSearchCV
2023-07-02 13:36:44,419:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 'empirical'}
2023-07-02 13:36:44,420:INFO:Hyperparameter search completed
2023-07-02 13:36:44,420:INFO:SubProcess create_model() called ==================================
2023-07-02 13:36:44,421:INFO:Initializing create_model()
2023-07-02 13:36:44,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D921D8520>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 'empirical'})
2023-07-02 13:36:44,421:INFO:Checking exceptions
2023-07-02 13:36:44,421:INFO:Importing libraries
2023-07-02 13:36:44,422:INFO:Copying training dataset
2023-07-02 13:36:44,426:INFO:Defining folds
2023-07-02 13:36:44,426:INFO:Declaring metric variables
2023-07-02 13:36:44,430:INFO:Importing untrained model
2023-07-02 13:36:44,431:INFO:Declaring custom model
2023-07-02 13:36:44,436:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:36:44,442:INFO:Starting cross validation
2023-07-02 13:36:44,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:36:52,781:INFO:Calculating mean and std
2023-07-02 13:36:52,782:INFO:Creating metrics dataframe
2023-07-02 13:36:52,787:INFO:Finalizing model
2023-07-02 13:36:54,003:INFO:Uploading results into container
2023-07-02 13:36:54,004:INFO:Uploading model into container now
2023-07-02 13:36:54,005:INFO:_master_model_container: 16
2023-07-02 13:36:54,005:INFO:_display_container: 4
2023-07-02 13:36:54,005:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='empirical', solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:36:54,005:INFO:create_model() successfully completed......................................
2023-07-02 13:36:54,124:INFO:SubProcess create_model() end ==================================
2023-07-02 13:36:54,125:INFO:choose_better activated
2023-07-02 13:36:54,129:INFO:SubProcess create_model() called ==================================
2023-07-02 13:36:54,129:INFO:Initializing create_model()
2023-07-02 13:36:54,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:36:54,129:INFO:Checking exceptions
2023-07-02 13:36:54,131:INFO:Importing libraries
2023-07-02 13:36:54,131:INFO:Copying training dataset
2023-07-02 13:36:54,134:INFO:Defining folds
2023-07-02 13:36:54,135:INFO:Declaring metric variables
2023-07-02 13:36:54,135:INFO:Importing untrained model
2023-07-02 13:36:54,135:INFO:Declaring custom model
2023-07-02 13:36:54,135:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:36:54,135:INFO:Starting cross validation
2023-07-02 13:36:54,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:37:02,887:INFO:Calculating mean and std
2023-07-02 13:37:02,887:INFO:Creating metrics dataframe
2023-07-02 13:37:02,891:INFO:Finalizing model
2023-07-02 13:37:04,318:INFO:Uploading results into container
2023-07-02 13:37:04,318:INFO:Uploading model into container now
2023-07-02 13:37:04,319:INFO:_master_model_container: 17
2023-07-02 13:37:04,319:INFO:_display_container: 5
2023-07-02 13:37:04,319:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:37:04,319:INFO:create_model() successfully completed......................................
2023-07-02 13:37:04,434:INFO:SubProcess create_model() end ==================================
2023-07-02 13:37:04,435:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.7719
2023-07-02 13:37:04,435:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='empirical', solver='lsqr',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.7719
2023-07-02 13:37:04,435:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2023-07-02 13:37:04,435:INFO:choose_better completed
2023-07-02 13:37:04,435:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-07-02 13:37:04,445:INFO:_master_model_container: 17
2023-07-02 13:37:04,446:INFO:_display_container: 4
2023-07-02 13:37:04,446:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:37:04,446:INFO:tune_model() successfully completed......................................
2023-07-02 13:37:43,599:INFO:Initializing plot_model()
2023-07-02 13:37:43,600:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, system=True)
2023-07-02 13:37:43,600:INFO:Checking exceptions
2023-07-02 13:37:43,604:INFO:Preloading libraries
2023-07-02 13:37:43,604:INFO:Copying training dataset
2023-07-02 13:37:43,604:INFO:Plot type: confusion_matrix
2023-07-02 13:37:43,676:INFO:Fitting Model
2023-07-02 13:37:43,677:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:37:43,677:INFO:Scoring test/hold-out set
2023-07-02 13:37:43,763:INFO:Visual Rendered Successfully
2023-07-02 13:37:43,879:INFO:plot_model() successfully completed......................................
2023-07-02 13:38:00,245:INFO:Initializing create_model()
2023-07-02 13:38:00,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:38:00,245:INFO:Checking exceptions
2023-07-02 13:38:00,273:INFO:Importing libraries
2023-07-02 13:38:00,274:INFO:Copying training dataset
2023-07-02 13:38:00,280:INFO:Defining folds
2023-07-02 13:38:00,280:INFO:Declaring metric variables
2023-07-02 13:38:00,284:INFO:Importing untrained model
2023-07-02 13:38:00,288:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:38:00,296:INFO:Starting cross validation
2023-07-02 13:38:00,297:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:38:08,945:INFO:Calculating mean and std
2023-07-02 13:38:08,947:INFO:Creating metrics dataframe
2023-07-02 13:38:08,953:INFO:Finalizing model
2023-07-02 13:38:10,343:INFO:Uploading results into container
2023-07-02 13:38:10,344:INFO:Uploading model into container now
2023-07-02 13:38:10,354:INFO:_master_model_container: 18
2023-07-02 13:38:10,354:INFO:_display_container: 5
2023-07-02 13:38:10,355:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5720, verbose=0, warm_start=False)
2023-07-02 13:38:10,355:INFO:create_model() successfully completed......................................
2023-07-02 13:38:46,384:INFO:Initializing plot_model()
2023-07-02 13:38:46,384:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5720, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, system=True)
2023-07-02 13:38:46,384:INFO:Checking exceptions
2023-07-02 13:38:46,405:INFO:Preloading libraries
2023-07-02 13:38:46,414:INFO:Copying training dataset
2023-07-02 13:38:46,414:INFO:Plot type: confusion_matrix
2023-07-02 13:38:46,482:INFO:Fitting Model
2023-07-02 13:38:46,483:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-07-02 13:38:46,483:INFO:Scoring test/hold-out set
2023-07-02 13:38:46,608:INFO:Visual Rendered Successfully
2023-07-02 13:38:46,731:INFO:plot_model() successfully completed......................................
2023-07-02 13:38:58,150:INFO:Initializing create_model()
2023-07-02 13:38:58,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:38:58,150:INFO:Checking exceptions
2023-07-02 13:38:58,178:INFO:Importing libraries
2023-07-02 13:38:58,179:INFO:Copying training dataset
2023-07-02 13:38:58,183:INFO:Defining folds
2023-07-02 13:38:58,183:INFO:Declaring metric variables
2023-07-02 13:38:58,186:INFO:Importing untrained model
2023-07-02 13:38:58,190:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:38:58,198:INFO:Starting cross validation
2023-07-02 13:38:58,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:39:13,494:INFO:Calculating mean and std
2023-07-02 13:39:13,496:INFO:Creating metrics dataframe
2023-07-02 13:39:13,502:INFO:Finalizing model
2023-07-02 13:39:14,675:INFO:Uploading results into container
2023-07-02 13:39:14,676:INFO:Uploading model into container now
2023-07-02 13:39:14,686:INFO:_master_model_container: 19
2023-07-02 13:39:14,686:INFO:_display_container: 6
2023-07-02 13:39:14,686:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:39:14,686:INFO:create_model() successfully completed......................................
2023-07-02 13:39:23,110:INFO:Initializing plot_model()
2023-07-02 13:39:23,110:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, system=True)
2023-07-02 13:39:23,111:INFO:Checking exceptions
2023-07-02 13:39:23,114:INFO:Preloading libraries
2023-07-02 13:39:23,115:INFO:Copying training dataset
2023-07-02 13:39:23,115:INFO:Plot type: confusion_matrix
2023-07-02 13:39:23,188:INFO:Fitting Model
2023-07-02 13:39:23,188:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:39:23,189:INFO:Scoring test/hold-out set
2023-07-02 13:39:23,274:INFO:Visual Rendered Successfully
2023-07-02 13:39:23,392:INFO:plot_model() successfully completed......................................
2023-07-02 13:39:52,411:INFO:Initializing plot_model()
2023-07-02 13:39:52,411:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, system=True)
2023-07-02 13:39:52,411:INFO:Checking exceptions
2023-07-02 13:39:52,415:INFO:Preloading libraries
2023-07-02 13:39:52,416:INFO:Copying training dataset
2023-07-02 13:39:52,416:INFO:Plot type: auc
2023-07-02 13:39:52,491:INFO:Fitting Model
2023-07-02 13:39:52,491:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:39:52,491:INFO:Scoring test/hold-out set
2023-07-02 13:39:52,641:INFO:Visual Rendered Successfully
2023-07-02 13:39:52,774:INFO:plot_model() successfully completed......................................
2023-07-02 13:39:56,437:INFO:Initializing plot_model()
2023-07-02 13:39:56,438:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D92125670>, system=True)
2023-07-02 13:39:56,438:INFO:Checking exceptions
2023-07-02 13:39:56,442:INFO:Preloading libraries
2023-07-02 13:39:56,442:INFO:Copying training dataset
2023-07-02 13:39:56,443:INFO:Plot type: auc
2023-07-02 13:39:56,512:INFO:Fitting Model
2023-07-02 13:39:56,512:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:39:56,512:INFO:Scoring test/hold-out set
2023-07-02 13:39:56,646:INFO:Visual Rendered Successfully
2023-07-02 13:39:56,766:INFO:plot_model() successfully completed......................................
2023-07-02 13:40:02,976:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_09413bd2d0624e7aa66a21d89c01cb07
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,976:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_e8a0eefe623a4626a54e0908626349a9_437ac4b8bf69485ca830ead90503bac1
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_be3276f09f91498982baa18345b7b510
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_29d9ffcfe83a40fa9fe13c259f7cc01f_ecb0e3d7c935477ea91c4829c2bd6ff9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_e2b2ce8298584e98b7aa758fcd5559a1
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_9fff80978d20463aa749b99e3e9d828c_2163d3d8813b47c4bea4b746e32eaaed
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_8dadb9da900a4c1bac1d4ded2281f5b5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_8aab2d9a02ae425f8726c94db692716c_23f9a7defeaa46d68f96e1e1d1b219e7
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_8b2b19a51aec43e3905ebccd2e99492c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_65dba5b81d7840d2ab5b4182675a9e69_c5b10916fdf049d0bc153d67369752e0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_323e3e132f4a4190bc7cf00825cd24db
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_9ef5d53076ae46ec89d977ae458851e4_a8dd2e55e1ff40a493b7e2ff3ad9127c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,977:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_43029be657644e729f7d3c2dc9bf9706
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_70225e2e34ab431f9c662868e5d63ec7_6045ffe749da446794e30438f0288510
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_d3b3fad32b5e422f853af2a9ac4b1763
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_f23bd4fa26114f06ab6c1da29ce2ae9a_fba4d03e3d094ea58e7e29f1855a7f22
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_fc80ea3390594a32b5dc25d9fd5aedc9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_7af1da1f1c2441fea8ea1a234ca603f1_ecefd8121dd14deda1a920b1c33b4b96
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_c5b627b727854cfb8dff4fcd88f414f0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_4a3d37c6f6904667a08a6e756849688c_e3abe0c14cdc47008f5b1b39ad97d49c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_637ccd215010492491be88a47c7227ba
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_d34b1cdae37c404eb974019bfc00a6b1_3a10387ca296429fa1b227bbdbb705bc
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_8c59eb86521f4e9ab19c11b35551fb05
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_c91ca7ae55df4deab215a7534b131ea0_e5de0e37ab1546d0bce40d7c229b7548
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_1ccfd520caae46e39034ec6b75add2f1
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_855034a495a047e1bada2a3b5f8fa2fc_f5a95efc9abe411f9335a188bdd45071
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_84ecd9df24b9471f95e34447f929528c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_763dd1a844b0482d8fbfa67a7b285a14_8be31f9e33a843278a1cb53ad2e21af4
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_f4c46d88f8b842758861efa2a98576dd
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_372365142f8e4342aa15a3940c555a90_64d3249f47964d01b82848a54ad137a5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_0189697131e341d6971892bdb9957087
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_0f5dc216151d42b8bbdd6b03610763ef_abbbec489db842b1ba77b877a7dc71ea
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_bd103dfa22804cd2b7459c9d38bdf47b
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_416a435c6191490ea3d64fb6d328532f_72cf6db607ec48aea086c980434d4640
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_f7c392eb0a344415ab71c5e7bd2081a0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_3d0094cb74ee40c29f52528b33d29e40_0d81ed1a73bc49bcaebb0c0f9471d22a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_98476b31746b435b9b62e7667f190cf5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_23c025c1dcfa47fda8de93084d4be6e3_1be0755739c74f47ae57d2940e639aba
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_c5a220cc666d4c41adbff46f91da22de
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_dd48431dd8254c7cb3d4b1d403a64e12_b4f543f4d9154418a623340886c2d4f4
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_a9021accaaa146bbbe6e98b4e372b259
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_5382597a408142eebc20bd13443acf2d_7c1bc33e092a47a08d6ae99505234e51
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_ea3de644f3e24eaf99ec0810c88e0901
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_54a0691371304c3bb4e837ff644e34fc_d2bc20a27ed94e279bbc5bf42b7be171
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_3061426b173d4f2a9316b3d0ffe7d239
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_b3cba87165a846ac865596ce1703b2b1_5cfdbddf6c5249abb72d5afef7cf3108
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_51c3005505664710a5d6739228540abd
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,980:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_52d53bbe2a344929a4c5c8f6bcba0476_18e66c3469e74a8e8aa399f1d497221b
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,983:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_0a4d7507ff494e639f05aa1209acc6bc
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,983:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_6332bc5364d543fe85e73ea62f039006_9e2c45256edb4193b7b5edff620bee29
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,983:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_15c58cfdf41a44728d3d2363df4763b9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,983:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_dc3b9a633ff9454fa32191420bf9d264_6c1ae2b55e1e4ab49a945737a460d535
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_4607643a51794dd1bba8f50b64a9d802
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_aaab80791cd04ac5a45ec02b558a631f_dfaeae700e1e47b6b10273dfe1c853e3
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_be5ea3890e78476aa61286d1afd90ac7
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_dbcb874f053a400caeb3b333b60280a3_713c3a9f746545f5bb300d14863b6115
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_42fadfd68b9a43298877648b642eff4d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_18bf722c248749d8a8e5644f341bfda2_0922e9559b9a4b2db111f74b816232b2
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_116325f7b84e404caed25968f19d579b
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_50d4fc743f30418c9104943cd93a68bc_1bd949b2c6ec4b408416053668a6dc3a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_8cceaad17caf4c1092f8507f4c8e0d94
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,984:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_3f49c51633634468887991100679425d_046c80b0b2734a579c9cbb4f95a5d15a
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_6d0572a379034c02b407f9320a3020de
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_a314b7cf7bb34c1da2196637cd27495d_e3409143e0cb4658899912cdb0506786
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_3ebb822e50bb42228e5b3172959f4ce6
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_db0b9a45d2fb46d6b11eb70b4ce75150_63a1d6a456dc49858f21d311aca1d6f3
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_2e34665f0acc4714aa982beebad97236
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_570979f5adc0460b9cfbecfec0897eaa_72f94aece0bc4bec95eafe24d3c23eff
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_dce8eadb1d8944dbaa2c112f25e032b8
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_001ecb0d48384b3aa14b32992f51cc18_cd6319c77d1b484a8e334e508399a029
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_6eba8657c0b94a41854cc517edf8aa0d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_e9abd07970144c03960dd96ebdafa013_ae24ae17b4344ace873a023d9043159f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_1deaa40fc6b4404888d2d41080ef501c
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_4e8db2118c38448083bdc88f52762918_10b58f56df5c4bafb3d9204a128fff3e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_c403667dbc814b2cb574503253d5ba67
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_b0484645876742d1ac0b7b55ccc8f086_91c5f06f9eaa4bdcaa47930a60e7527d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_585c468ef71a4564a158f5d7ec1bcfd5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_458393e9c7604b1aa30c681586bb88cd_0c511c7a868b4a3bae0386fef81f2a93
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_aaab8c652c994eb68a5db70d909ebb8f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_b7b2a0288cd548db99e52b6dba4afc5f_bbd9504fbe924d58adc5068aa8afdbf0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_74a4575596874b4682c530f49a5f7344
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_7210759fcf73432d9e7be82a7c51b36f_dc119e5fa3ff4ef993e3a3d7ef39163e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_37b7369fa5584a7db75e925d07abf93b
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:02,986:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_18232_28c93a142e32416c95ef9bdc53ef5fa3_22ef765447b84443a378140afb44c81f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:40:11,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:40:11,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:40:11,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:40:11,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:40:11,690:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-07-02 13:40:13,311:INFO:PyCaret ClassificationExperiment
2023-07-02 13:40:13,311:INFO:Logging name: clf-default-name
2023-07-02 13:40:13,311:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 13:40:13,311:INFO:version 3.0.0
2023-07-02 13:40:13,311:INFO:Initializing setup()
2023-07-02 13:40:13,311:INFO:self.USI: 0af6
2023-07-02 13:40:13,311:INFO:self._variable_keys: {'pipeline', '_ml_usecase', 'fold_shuffle_param', 'fix_imbalance', 'y_test', 'exp_name_log', 'seed', 'gpu_n_jobs_param', 'target_param', 'USI', 'X_test', 'y', 'is_multiclass', 'html_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'data', '_available_plots', 'log_plots_param', 'memory', 'gpu_param', 'idx', 'n_jobs_param', 'X', 'exp_id', 'y_train', 'X_train'}
2023-07-02 13:40:13,311:INFO:Checking environment
2023-07-02 13:40:13,311:INFO:python_version: 3.9.13
2023-07-02 13:40:13,311:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 13:40:13,312:INFO:machine: AMD64
2023-07-02 13:40:13,312:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 13:40:13,312:INFO:Memory: svmem(total=16456249344, available=4151390208, percent=74.8, used=12304859136, free=4151390208)
2023-07-02 13:40:13,312:INFO:Physical Core: 6
2023-07-02 13:40:13,312:INFO:Logical Core: 12
2023-07-02 13:40:13,312:INFO:Checking libraries
2023-07-02 13:40:13,312:INFO:System:
2023-07-02 13:40:13,312:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 13:40:13,312:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 13:40:13,312:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 13:40:13,312:INFO:PyCaret required dependencies:
2023-07-02 13:40:13,312:INFO:                 pip: 22.2.2
2023-07-02 13:40:13,312:INFO:          setuptools: 63.4.1
2023-07-02 13:40:13,312:INFO:             pycaret: 3.0.0
2023-07-02 13:40:13,312:INFO:             IPython: 7.31.1
2023-07-02 13:40:13,312:INFO:          ipywidgets: 7.6.5
2023-07-02 13:40:13,312:INFO:                tqdm: 4.64.1
2023-07-02 13:40:13,312:INFO:               numpy: 1.21.5
2023-07-02 13:40:13,312:INFO:              pandas: 1.4.4
2023-07-02 13:40:13,312:INFO:              jinja2: 3.1.2
2023-07-02 13:40:13,312:INFO:               scipy: 1.9.1
2023-07-02 13:40:13,312:INFO:              joblib: 1.2.0
2023-07-02 13:40:13,313:INFO:             sklearn: 1.0.2
2023-07-02 13:40:13,313:INFO:                pyod: 1.0.9
2023-07-02 13:40:13,313:INFO:            imblearn: 0.10.1
2023-07-02 13:40:13,313:INFO:   category_encoders: 2.6.0
2023-07-02 13:40:13,313:INFO:            lightgbm: 3.3.5
2023-07-02 13:40:13,313:INFO:               numba: 0.55.1
2023-07-02 13:40:13,313:INFO:            requests: 2.28.1
2023-07-02 13:40:13,313:INFO:          matplotlib: 3.5.2
2023-07-02 13:40:13,313:INFO:          scikitplot: 0.3.7
2023-07-02 13:40:13,313:INFO:         yellowbrick: 1.5
2023-07-02 13:40:13,313:INFO:              plotly: 5.9.0
2023-07-02 13:40:13,313:INFO:             kaleido: 0.2.1
2023-07-02 13:40:13,313:INFO:         statsmodels: 0.13.2
2023-07-02 13:40:13,313:INFO:              sktime: 0.16.1
2023-07-02 13:40:13,313:INFO:               tbats: 1.1.2
2023-07-02 13:40:13,313:INFO:            pmdarima: 2.0.3
2023-07-02 13:40:13,313:INFO:              psutil: 5.9.0
2023-07-02 13:40:13,313:INFO:PyCaret optional dependencies:
2023-07-02 13:40:14,822:INFO:                shap: 0.41.0
2023-07-02 13:40:14,822:INFO:           interpret: Not installed
2023-07-02 13:40:14,822:INFO:                umap: Not installed
2023-07-02 13:40:14,822:INFO:    pandas_profiling: Not installed
2023-07-02 13:40:14,822:INFO:  explainerdashboard: Not installed
2023-07-02 13:40:14,822:INFO:             autoviz: Not installed
2023-07-02 13:40:14,822:INFO:           fairlearn: Not installed
2023-07-02 13:40:14,822:INFO:             xgboost: Not installed
2023-07-02 13:40:14,822:INFO:            catboost: Not installed
2023-07-02 13:40:14,822:INFO:              kmodes: Not installed
2023-07-02 13:40:14,822:INFO:             mlxtend: Not installed
2023-07-02 13:40:14,822:INFO:       statsforecast: Not installed
2023-07-02 13:40:14,822:INFO:        tune_sklearn: 0.4.5
2023-07-02 13:40:14,822:INFO:                 ray: 2.3.1
2023-07-02 13:40:14,822:INFO:            hyperopt: Not installed
2023-07-02 13:40:14,822:INFO:              optuna: 3.1.0
2023-07-02 13:40:14,822:INFO:               skopt: Not installed
2023-07-02 13:40:14,822:INFO:              mlflow: 2.2.2
2023-07-02 13:40:14,822:INFO:              gradio: 3.23.0
2023-07-02 13:40:14,822:INFO:             fastapi: 0.95.0
2023-07-02 13:40:14,822:INFO:             uvicorn: 0.21.1
2023-07-02 13:40:14,822:INFO:              m2cgen: Not installed
2023-07-02 13:40:14,822:INFO:           evidently: Not installed
2023-07-02 13:40:14,823:INFO:               fugue: Not installed
2023-07-02 13:40:14,823:INFO:           streamlit: 1.20.0
2023-07-02 13:40:14,823:INFO:             prophet: Not installed
2023-07-02 13:40:14,823:INFO:None
2023-07-02 13:40:14,823:INFO:Set up data.
2023-07-02 13:40:14,827:INFO:Set up train/test split.
2023-07-02 13:40:14,831:INFO:Set up index.
2023-07-02 13:40:14,831:INFO:Set up folding strategy.
2023-07-02 13:40:14,831:INFO:Assigning column types.
2023-07-02 13:40:14,833:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 13:40:14,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:40:14,883:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:40:14,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:14,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:14,979:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:40:14,980:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:40:15,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,021:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 13:40:15,093:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:40:15,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,210:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:40:15,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,256:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 13:40:15,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,495:INFO:Preparing preprocessing pipeline...
2023-07-02 13:40:15,496:INFO:Set up simple imputation.
2023-07-02 13:40:15,496:INFO:Set up feature normalization.
2023-07-02 13:40:15,520:INFO:Finished creating preprocessing pipeline.
2023-07-02 13:40:15,525:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 13:40:15,525:INFO:Creating final display dataframe.
2023-07-02 13:40:15,596:INFO:Setup _display_container:                     Description             Value
0                    Session id              1815
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 8)
4        Transformed data shape          (768, 8)
5   Transformed train set shape          (614, 8)
6    Transformed test set shape          (154, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0af6
2023-07-02 13:40:15,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:40:15,841:INFO:setup() successfully completed in 3.28s...............
2023-07-02 13:40:15,851:INFO:Initializing compare_models()
2023-07-02 13:40:15,851:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 13:40:15,851:INFO:Checking exceptions
2023-07-02 13:40:15,855:INFO:Preparing display monitor
2023-07-02 13:40:15,889:INFO:Initializing Logistic Regression
2023-07-02 13:40:15,890:INFO:Total runtime is 1.6828378041585285e-05 minutes
2023-07-02 13:40:15,893:INFO:SubProcess create_model() called ==================================
2023-07-02 13:40:15,893:INFO:Initializing create_model()
2023-07-02 13:40:15,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:40:15,893:INFO:Checking exceptions
2023-07-02 13:40:15,894:INFO:Importing libraries
2023-07-02 13:40:15,894:INFO:Copying training dataset
2023-07-02 13:40:15,897:INFO:Defining folds
2023-07-02 13:40:15,897:INFO:Declaring metric variables
2023-07-02 13:40:15,900:INFO:Importing untrained model
2023-07-02 13:40:15,903:INFO:Logistic Regression Imported successfully
2023-07-02 13:40:15,910:INFO:Starting cross validation
2023-07-02 13:40:15,911:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:40:33,367:INFO:Calculating mean and std
2023-07-02 13:40:33,368:INFO:Creating metrics dataframe
2023-07-02 13:40:34,497:INFO:Uploading results into container
2023-07-02 13:40:34,498:INFO:Uploading model into container now
2023-07-02 13:40:34,499:INFO:_master_model_container: 1
2023-07-02 13:40:34,499:INFO:_display_container: 2
2023-07-02 13:40:34,499:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:40:34,500:INFO:create_model() successfully completed......................................
2023-07-02 13:40:34,618:INFO:SubProcess create_model() end ==================================
2023-07-02 13:40:34,619:INFO:Creating metrics dataframe
2023-07-02 13:40:34,627:INFO:Initializing K Neighbors Classifier
2023-07-02 13:40:34,627:INFO:Total runtime is 0.312296990553538 minutes
2023-07-02 13:40:34,630:INFO:SubProcess create_model() called ==================================
2023-07-02 13:40:34,631:INFO:Initializing create_model()
2023-07-02 13:40:34,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:40:34,631:INFO:Checking exceptions
2023-07-02 13:40:34,631:INFO:Importing libraries
2023-07-02 13:40:34,631:INFO:Copying training dataset
2023-07-02 13:40:34,635:INFO:Defining folds
2023-07-02 13:40:34,636:INFO:Declaring metric variables
2023-07-02 13:40:34,644:INFO:Importing untrained model
2023-07-02 13:40:34,652:INFO:K Neighbors Classifier Imported successfully
2023-07-02 13:40:34,662:INFO:Starting cross validation
2023-07-02 13:40:34,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:40:34,811:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:34,825:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:34,830:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:34,831:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:34,842:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:34,850:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:34,857:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:34,869:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:38,566:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:38,568:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:40:43,749:INFO:Calculating mean and std
2023-07-02 13:40:43,751:INFO:Creating metrics dataframe
2023-07-02 13:40:44,880:INFO:Uploading results into container
2023-07-02 13:40:44,881:INFO:Uploading model into container now
2023-07-02 13:40:44,882:INFO:_master_model_container: 2
2023-07-02 13:40:44,882:INFO:_display_container: 2
2023-07-02 13:40:44,882:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 13:40:44,882:INFO:create_model() successfully completed......................................
2023-07-02 13:40:44,999:INFO:SubProcess create_model() end ==================================
2023-07-02 13:40:44,999:INFO:Creating metrics dataframe
2023-07-02 13:40:45,008:INFO:Initializing Naive Bayes
2023-07-02 13:40:45,008:INFO:Total runtime is 0.4853216052055359 minutes
2023-07-02 13:40:45,012:INFO:SubProcess create_model() called ==================================
2023-07-02 13:40:45,013:INFO:Initializing create_model()
2023-07-02 13:40:45,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:40:45,013:INFO:Checking exceptions
2023-07-02 13:40:45,013:INFO:Importing libraries
2023-07-02 13:40:45,013:INFO:Copying training dataset
2023-07-02 13:40:45,017:INFO:Defining folds
2023-07-02 13:40:45,018:INFO:Declaring metric variables
2023-07-02 13:40:45,022:INFO:Importing untrained model
2023-07-02 13:40:45,028:INFO:Naive Bayes Imported successfully
2023-07-02 13:40:45,038:INFO:Starting cross validation
2023-07-02 13:40:45,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:40:53,418:INFO:Calculating mean and std
2023-07-02 13:40:53,420:INFO:Creating metrics dataframe
2023-07-02 13:40:54,548:INFO:Uploading results into container
2023-07-02 13:40:54,549:INFO:Uploading model into container now
2023-07-02 13:40:54,550:INFO:_master_model_container: 3
2023-07-02 13:40:54,550:INFO:_display_container: 2
2023-07-02 13:40:54,550:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 13:40:54,551:INFO:create_model() successfully completed......................................
2023-07-02 13:40:54,668:INFO:SubProcess create_model() end ==================================
2023-07-02 13:40:54,668:INFO:Creating metrics dataframe
2023-07-02 13:40:54,677:INFO:Initializing Decision Tree Classifier
2023-07-02 13:40:54,678:INFO:Total runtime is 0.6464792728424072 minutes
2023-07-02 13:40:54,681:INFO:SubProcess create_model() called ==================================
2023-07-02 13:40:54,682:INFO:Initializing create_model()
2023-07-02 13:40:54,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:40:54,682:INFO:Checking exceptions
2023-07-02 13:40:54,682:INFO:Importing libraries
2023-07-02 13:40:54,682:INFO:Copying training dataset
2023-07-02 13:40:54,687:INFO:Defining folds
2023-07-02 13:40:54,687:INFO:Declaring metric variables
2023-07-02 13:40:54,691:INFO:Importing untrained model
2023-07-02 13:40:54,697:INFO:Decision Tree Classifier Imported successfully
2023-07-02 13:40:54,708:INFO:Starting cross validation
2023-07-02 13:40:54,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:41:03,394:INFO:Calculating mean and std
2023-07-02 13:41:03,396:INFO:Creating metrics dataframe
2023-07-02 13:41:04,564:INFO:Uploading results into container
2023-07-02 13:41:04,565:INFO:Uploading model into container now
2023-07-02 13:41:04,566:INFO:_master_model_container: 4
2023-07-02 13:41:04,566:INFO:_display_container: 2
2023-07-02 13:41:04,566:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1815, splitter='best')
2023-07-02 13:41:04,566:INFO:create_model() successfully completed......................................
2023-07-02 13:41:04,683:INFO:SubProcess create_model() end ==================================
2023-07-02 13:41:04,683:INFO:Creating metrics dataframe
2023-07-02 13:41:04,693:INFO:Initializing SVM - Linear Kernel
2023-07-02 13:41:04,693:INFO:Total runtime is 0.8134002049763998 minutes
2023-07-02 13:41:04,696:INFO:SubProcess create_model() called ==================================
2023-07-02 13:41:04,697:INFO:Initializing create_model()
2023-07-02 13:41:04,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:41:04,697:INFO:Checking exceptions
2023-07-02 13:41:04,698:INFO:Importing libraries
2023-07-02 13:41:04,698:INFO:Copying training dataset
2023-07-02 13:41:04,702:INFO:Defining folds
2023-07-02 13:41:04,702:INFO:Declaring metric variables
2023-07-02 13:41:04,706:INFO:Importing untrained model
2023-07-02 13:41:04,711:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 13:41:04,722:INFO:Starting cross validation
2023-07-02 13:41:04,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:41:04,829:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,841:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,845:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,849:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,854:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,859:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,873:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,881:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,889:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:04,895:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:41:13,181:INFO:Calculating mean and std
2023-07-02 13:41:13,183:INFO:Creating metrics dataframe
2023-07-02 13:41:14,447:INFO:Uploading results into container
2023-07-02 13:41:14,448:INFO:Uploading model into container now
2023-07-02 13:41:14,449:INFO:_master_model_container: 5
2023-07-02 13:41:14,449:INFO:_display_container: 2
2023-07-02 13:41:14,450:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1815, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 13:41:14,450:INFO:create_model() successfully completed......................................
2023-07-02 13:41:14,576:INFO:SubProcess create_model() end ==================================
2023-07-02 13:41:14,576:INFO:Creating metrics dataframe
2023-07-02 13:41:14,587:INFO:Initializing Ridge Classifier
2023-07-02 13:41:14,587:INFO:Total runtime is 0.9783051331837972 minutes
2023-07-02 13:41:14,591:INFO:SubProcess create_model() called ==================================
2023-07-02 13:41:14,592:INFO:Initializing create_model()
2023-07-02 13:41:14,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:41:14,592:INFO:Checking exceptions
2023-07-02 13:41:14,593:INFO:Importing libraries
2023-07-02 13:41:14,593:INFO:Copying training dataset
2023-07-02 13:41:14,598:INFO:Defining folds
2023-07-02 13:41:14,599:INFO:Declaring metric variables
2023-07-02 13:41:14,604:INFO:Importing untrained model
2023-07-02 13:41:14,611:INFO:Ridge Classifier Imported successfully
2023-07-02 13:41:14,621:INFO:Starting cross validation
2023-07-02 13:41:14,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:41:14,760:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,761:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,764:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,772:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,780:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,793:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,796:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,804:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,814:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:14,817:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:41:23,481:INFO:Calculating mean and std
2023-07-02 13:41:23,483:INFO:Creating metrics dataframe
2023-07-02 13:41:24,942:INFO:Uploading results into container
2023-07-02 13:41:24,943:INFO:Uploading model into container now
2023-07-02 13:41:24,944:INFO:_master_model_container: 6
2023-07-02 13:41:24,944:INFO:_display_container: 2
2023-07-02 13:41:24,944:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1815, solver='auto', tol=0.001)
2023-07-02 13:41:24,944:INFO:create_model() successfully completed......................................
2023-07-02 13:41:25,061:INFO:SubProcess create_model() end ==================================
2023-07-02 13:41:25,061:INFO:Creating metrics dataframe
2023-07-02 13:41:25,072:INFO:Initializing Random Forest Classifier
2023-07-02 13:41:25,073:INFO:Total runtime is 1.1530580639839172 minutes
2023-07-02 13:41:25,076:INFO:SubProcess create_model() called ==================================
2023-07-02 13:41:25,077:INFO:Initializing create_model()
2023-07-02 13:41:25,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:41:25,077:INFO:Checking exceptions
2023-07-02 13:41:25,078:INFO:Importing libraries
2023-07-02 13:41:25,078:INFO:Copying training dataset
2023-07-02 13:41:25,082:INFO:Defining folds
2023-07-02 13:41:25,083:INFO:Declaring metric variables
2023-07-02 13:41:25,087:INFO:Importing untrained model
2023-07-02 13:41:25,091:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:41:25,101:INFO:Starting cross validation
2023-07-02 13:41:25,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:41:35,450:INFO:Calculating mean and std
2023-07-02 13:41:35,451:INFO:Creating metrics dataframe
2023-07-02 13:41:36,636:INFO:Uploading results into container
2023-07-02 13:41:36,637:INFO:Uploading model into container now
2023-07-02 13:41:36,638:INFO:_master_model_container: 7
2023-07-02 13:41:36,638:INFO:_display_container: 2
2023-07-02 13:41:36,638:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1815, verbose=0, warm_start=False)
2023-07-02 13:41:36,639:INFO:create_model() successfully completed......................................
2023-07-02 13:41:36,755:INFO:SubProcess create_model() end ==================================
2023-07-02 13:41:36,756:INFO:Creating metrics dataframe
2023-07-02 13:41:36,768:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 13:41:36,769:INFO:Total runtime is 1.348001782099406 minutes
2023-07-02 13:41:36,774:INFO:SubProcess create_model() called ==================================
2023-07-02 13:41:36,774:INFO:Initializing create_model()
2023-07-02 13:41:36,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:41:36,775:INFO:Checking exceptions
2023-07-02 13:41:36,775:INFO:Importing libraries
2023-07-02 13:41:36,775:INFO:Copying training dataset
2023-07-02 13:41:36,780:INFO:Defining folds
2023-07-02 13:41:36,781:INFO:Declaring metric variables
2023-07-02 13:41:36,787:INFO:Importing untrained model
2023-07-02 13:41:36,794:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 13:41:36,803:INFO:Starting cross validation
2023-07-02 13:41:36,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:41:45,320:INFO:Calculating mean and std
2023-07-02 13:41:45,321:INFO:Creating metrics dataframe
2023-07-02 13:41:46,613:INFO:Uploading results into container
2023-07-02 13:41:46,614:INFO:Uploading model into container now
2023-07-02 13:41:46,615:INFO:_master_model_container: 8
2023-07-02 13:41:46,615:INFO:_display_container: 2
2023-07-02 13:41:46,616:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 13:41:46,616:INFO:create_model() successfully completed......................................
2023-07-02 13:41:46,744:INFO:SubProcess create_model() end ==================================
2023-07-02 13:41:46,745:INFO:Creating metrics dataframe
2023-07-02 13:41:46,756:INFO:Initializing Ada Boost Classifier
2023-07-02 13:41:46,756:INFO:Total runtime is 1.5144525090853374 minutes
2023-07-02 13:41:46,760:INFO:SubProcess create_model() called ==================================
2023-07-02 13:41:46,761:INFO:Initializing create_model()
2023-07-02 13:41:46,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:41:46,761:INFO:Checking exceptions
2023-07-02 13:41:46,761:INFO:Importing libraries
2023-07-02 13:41:46,762:INFO:Copying training dataset
2023-07-02 13:41:46,767:INFO:Defining folds
2023-07-02 13:41:46,768:INFO:Declaring metric variables
2023-07-02 13:41:46,774:INFO:Importing untrained model
2023-07-02 13:41:46,782:INFO:Ada Boost Classifier Imported successfully
2023-07-02 13:41:46,792:INFO:Starting cross validation
2023-07-02 13:41:46,794:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:41:55,755:INFO:Calculating mean and std
2023-07-02 13:41:55,756:INFO:Creating metrics dataframe
2023-07-02 13:41:56,948:INFO:Uploading results into container
2023-07-02 13:41:56,949:INFO:Uploading model into container now
2023-07-02 13:41:56,949:INFO:_master_model_container: 9
2023-07-02 13:41:56,950:INFO:_display_container: 2
2023-07-02 13:41:56,950:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1815)
2023-07-02 13:41:56,950:INFO:create_model() successfully completed......................................
2023-07-02 13:41:57,067:INFO:SubProcess create_model() end ==================================
2023-07-02 13:41:57,067:INFO:Creating metrics dataframe
2023-07-02 13:41:57,080:INFO:Initializing Gradient Boosting Classifier
2023-07-02 13:41:57,081:INFO:Total runtime is 1.6865244348843893 minutes
2023-07-02 13:41:57,085:INFO:SubProcess create_model() called ==================================
2023-07-02 13:41:57,085:INFO:Initializing create_model()
2023-07-02 13:41:57,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:41:57,085:INFO:Checking exceptions
2023-07-02 13:41:57,085:INFO:Importing libraries
2023-07-02 13:41:57,086:INFO:Copying training dataset
2023-07-02 13:41:57,090:INFO:Defining folds
2023-07-02 13:41:57,091:INFO:Declaring metric variables
2023-07-02 13:41:57,096:INFO:Importing untrained model
2023-07-02 13:41:57,102:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 13:41:57,111:INFO:Starting cross validation
2023-07-02 13:41:57,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:42:07,359:INFO:Calculating mean and std
2023-07-02 13:42:07,360:INFO:Creating metrics dataframe
2023-07-02 13:42:08,682:INFO:Uploading results into container
2023-07-02 13:42:08,683:INFO:Uploading model into container now
2023-07-02 13:42:08,683:INFO:_master_model_container: 10
2023-07-02 13:42:08,683:INFO:_display_container: 2
2023-07-02 13:42:08,684:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1815, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 13:42:08,685:INFO:create_model() successfully completed......................................
2023-07-02 13:42:08,810:INFO:SubProcess create_model() end ==================================
2023-07-02 13:42:08,810:INFO:Creating metrics dataframe
2023-07-02 13:42:08,821:INFO:Initializing Linear Discriminant Analysis
2023-07-02 13:42:08,822:INFO:Total runtime is 1.8822189013163249 minutes
2023-07-02 13:42:08,826:INFO:SubProcess create_model() called ==================================
2023-07-02 13:42:08,826:INFO:Initializing create_model()
2023-07-02 13:42:08,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:42:08,827:INFO:Checking exceptions
2023-07-02 13:42:08,827:INFO:Importing libraries
2023-07-02 13:42:08,827:INFO:Copying training dataset
2023-07-02 13:42:08,833:INFO:Defining folds
2023-07-02 13:42:08,833:INFO:Declaring metric variables
2023-07-02 13:42:08,838:INFO:Importing untrained model
2023-07-02 13:42:08,845:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:42:08,856:INFO:Starting cross validation
2023-07-02 13:42:08,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:42:19,629:INFO:Calculating mean and std
2023-07-02 13:42:19,631:INFO:Creating metrics dataframe
2023-07-02 13:42:21,514:INFO:Uploading results into container
2023-07-02 13:42:21,515:INFO:Uploading model into container now
2023-07-02 13:42:21,515:INFO:_master_model_container: 11
2023-07-02 13:42:21,515:INFO:_display_container: 2
2023-07-02 13:42:21,516:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:42:21,516:INFO:create_model() successfully completed......................................
2023-07-02 13:42:21,652:INFO:SubProcess create_model() end ==================================
2023-07-02 13:42:21,652:INFO:Creating metrics dataframe
2023-07-02 13:42:21,666:INFO:Initializing Extra Trees Classifier
2023-07-02 13:42:21,666:INFO:Total runtime is 2.096273120244344 minutes
2023-07-02 13:42:21,674:INFO:SubProcess create_model() called ==================================
2023-07-02 13:42:21,675:INFO:Initializing create_model()
2023-07-02 13:42:21,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:42:21,675:INFO:Checking exceptions
2023-07-02 13:42:21,676:INFO:Importing libraries
2023-07-02 13:42:21,676:INFO:Copying training dataset
2023-07-02 13:42:21,684:INFO:Defining folds
2023-07-02 13:42:21,685:INFO:Declaring metric variables
2023-07-02 13:42:21,690:INFO:Importing untrained model
2023-07-02 13:42:21,700:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:42:21,710:INFO:Starting cross validation
2023-07-02 13:42:21,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:42:31,490:INFO:Calculating mean and std
2023-07-02 13:42:31,492:INFO:Creating metrics dataframe
2023-07-02 13:42:32,898:INFO:Uploading results into container
2023-07-02 13:42:32,899:INFO:Uploading model into container now
2023-07-02 13:42:32,900:INFO:_master_model_container: 12
2023-07-02 13:42:32,900:INFO:_display_container: 2
2023-07-02 13:42:32,900:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1815, verbose=0, warm_start=False)
2023-07-02 13:42:32,901:INFO:create_model() successfully completed......................................
2023-07-02 13:42:33,036:INFO:SubProcess create_model() end ==================================
2023-07-02 13:42:33,036:INFO:Creating metrics dataframe
2023-07-02 13:42:33,050:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 13:42:33,050:INFO:Total runtime is 2.286016968886057 minutes
2023-07-02 13:42:33,055:INFO:SubProcess create_model() called ==================================
2023-07-02 13:42:33,055:INFO:Initializing create_model()
2023-07-02 13:42:33,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:42:33,056:INFO:Checking exceptions
2023-07-02 13:42:33,056:INFO:Importing libraries
2023-07-02 13:42:33,056:INFO:Copying training dataset
2023-07-02 13:42:33,063:INFO:Defining folds
2023-07-02 13:42:33,064:INFO:Declaring metric variables
2023-07-02 13:42:33,070:INFO:Importing untrained model
2023-07-02 13:42:33,080:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 13:42:33,094:INFO:Starting cross validation
2023-07-02 13:42:33,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:42:44,679:INFO:Calculating mean and std
2023-07-02 13:42:44,680:INFO:Creating metrics dataframe
2023-07-02 13:42:45,868:INFO:Uploading results into container
2023-07-02 13:42:45,869:INFO:Uploading model into container now
2023-07-02 13:42:45,869:INFO:_master_model_container: 13
2023-07-02 13:42:45,870:INFO:_display_container: 2
2023-07-02 13:42:45,871:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1815, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 13:42:45,871:INFO:create_model() successfully completed......................................
2023-07-02 13:42:45,986:INFO:SubProcess create_model() end ==================================
2023-07-02 13:42:45,986:INFO:Creating metrics dataframe
2023-07-02 13:42:45,998:INFO:Initializing Dummy Classifier
2023-07-02 13:42:45,998:INFO:Total runtime is 2.5018191854159033 minutes
2023-07-02 13:42:46,001:INFO:SubProcess create_model() called ==================================
2023-07-02 13:42:46,002:INFO:Initializing create_model()
2023-07-02 13:42:46,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002476587A9D0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:42:46,002:INFO:Checking exceptions
2023-07-02 13:42:46,002:INFO:Importing libraries
2023-07-02 13:42:46,003:INFO:Copying training dataset
2023-07-02 13:42:46,008:INFO:Defining folds
2023-07-02 13:42:46,008:INFO:Declaring metric variables
2023-07-02 13:42:46,012:INFO:Importing untrained model
2023-07-02 13:42:46,016:INFO:Dummy Classifier Imported successfully
2023-07-02 13:42:46,027:INFO:Starting cross validation
2023-07-02 13:42:46,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:42:46,151:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,165:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,170:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,179:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,190:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,198:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,212:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,214:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,224:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:46,232:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:42:55,230:INFO:Calculating mean and std
2023-07-02 13:42:55,231:INFO:Creating metrics dataframe
2023-07-02 13:42:56,480:INFO:Uploading results into container
2023-07-02 13:42:56,481:INFO:Uploading model into container now
2023-07-02 13:42:56,481:INFO:_master_model_container: 14
2023-07-02 13:42:56,481:INFO:_display_container: 2
2023-07-02 13:42:56,481:INFO:DummyClassifier(constant=None, random_state=1815, strategy='prior')
2023-07-02 13:42:56,481:INFO:create_model() successfully completed......................................
2023-07-02 13:42:56,595:INFO:SubProcess create_model() end ==================================
2023-07-02 13:42:56,595:INFO:Creating metrics dataframe
2023-07-02 13:42:56,618:INFO:Initializing create_model()
2023-07-02 13:42:56,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:42:56,619:INFO:Checking exceptions
2023-07-02 13:42:56,621:INFO:Importing libraries
2023-07-02 13:42:56,621:INFO:Copying training dataset
2023-07-02 13:42:56,625:INFO:Defining folds
2023-07-02 13:42:56,626:INFO:Declaring metric variables
2023-07-02 13:42:56,626:INFO:Importing untrained model
2023-07-02 13:42:56,626:INFO:Declaring custom model
2023-07-02 13:42:56,626:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:42:56,627:INFO:Cross validation set to False
2023-07-02 13:42:56,627:INFO:Fitting Model
2023-07-02 13:42:57,522:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:42:57,522:INFO:create_model() successfully completed......................................
2023-07-02 13:42:57,665:INFO:_master_model_container: 14
2023-07-02 13:42:57,665:INFO:_display_container: 2
2023-07-02 13:42:57,666:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:42:57,666:INFO:compare_models() successfully completed......................................
2023-07-02 13:42:57,682:INFO:Initializing create_model()
2023-07-02 13:42:57,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:42:57,682:INFO:Checking exceptions
2023-07-02 13:42:57,708:INFO:Importing libraries
2023-07-02 13:42:57,708:INFO:Copying training dataset
2023-07-02 13:42:57,714:INFO:Defining folds
2023-07-02 13:42:57,714:INFO:Declaring metric variables
2023-07-02 13:42:57,718:INFO:Importing untrained model
2023-07-02 13:42:57,722:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:42:57,730:INFO:Starting cross validation
2023-07-02 13:42:57,731:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:43:06,830:INFO:Calculating mean and std
2023-07-02 13:43:06,832:INFO:Creating metrics dataframe
2023-07-02 13:43:06,838:INFO:Finalizing model
2023-07-02 13:43:08,303:INFO:Uploading results into container
2023-07-02 13:43:08,304:INFO:Uploading model into container now
2023-07-02 13:43:08,314:INFO:_master_model_container: 15
2023-07-02 13:43:08,314:INFO:_display_container: 3
2023-07-02 13:43:08,315:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:43:08,315:INFO:create_model() successfully completed......................................
2023-07-02 13:43:08,459:INFO:Initializing tune_model()
2023-07-02 13:43:08,459:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>)
2023-07-02 13:43:08,459:INFO:Checking exceptions
2023-07-02 13:43:08,489:INFO:Copying training dataset
2023-07-02 13:43:08,493:INFO:Checking base model
2023-07-02 13:43:08,493:INFO:Base model : Linear Discriminant Analysis
2023-07-02 13:43:08,497:INFO:Declaring metric variables
2023-07-02 13:43:08,501:INFO:Defining Hyperparameters
2023-07-02 13:43:08,624:INFO:Tuning with n_jobs=-1
2023-07-02 13:43:08,624:INFO:Initializing RandomizedSearchCV
2023-07-02 13:44:43,853:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 0.0001}
2023-07-02 13:44:43,854:INFO:Hyperparameter search completed
2023-07-02 13:44:43,855:INFO:SubProcess create_model() called ==================================
2023-07-02 13:44:43,855:INFO:Initializing create_model()
2023-07-02 13:44:43,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247682E5DC0>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 0.0001})
2023-07-02 13:44:43,855:INFO:Checking exceptions
2023-07-02 13:44:43,856:INFO:Importing libraries
2023-07-02 13:44:43,856:INFO:Copying training dataset
2023-07-02 13:44:43,859:INFO:Defining folds
2023-07-02 13:44:43,859:INFO:Declaring metric variables
2023-07-02 13:44:43,864:INFO:Importing untrained model
2023-07-02 13:44:43,864:INFO:Declaring custom model
2023-07-02 13:44:43,869:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:44:43,878:INFO:Starting cross validation
2023-07-02 13:44:43,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:44:53,033:INFO:Calculating mean and std
2023-07-02 13:44:53,035:INFO:Creating metrics dataframe
2023-07-02 13:44:53,042:INFO:Finalizing model
2023-07-02 13:44:54,450:INFO:Uploading results into container
2023-07-02 13:44:54,451:INFO:Uploading model into container now
2023-07-02 13:44:54,452:INFO:_master_model_container: 16
2023-07-02 13:44:54,452:INFO:_display_container: 4
2023-07-02 13:44:54,452:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0001, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:44:54,453:INFO:create_model() successfully completed......................................
2023-07-02 13:44:54,572:INFO:SubProcess create_model() end ==================================
2023-07-02 13:44:54,572:INFO:choose_better activated
2023-07-02 13:44:54,575:INFO:SubProcess create_model() called ==================================
2023-07-02 13:44:54,576:INFO:Initializing create_model()
2023-07-02 13:44:54,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:44:54,576:INFO:Checking exceptions
2023-07-02 13:44:54,578:INFO:Importing libraries
2023-07-02 13:44:54,578:INFO:Copying training dataset
2023-07-02 13:44:54,582:INFO:Defining folds
2023-07-02 13:44:54,582:INFO:Declaring metric variables
2023-07-02 13:44:54,582:INFO:Importing untrained model
2023-07-02 13:44:54,582:INFO:Declaring custom model
2023-07-02 13:44:54,583:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:44:54,583:INFO:Starting cross validation
2023-07-02 13:44:54,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:45:03,582:INFO:Calculating mean and std
2023-07-02 13:45:03,583:INFO:Creating metrics dataframe
2023-07-02 13:45:03,584:INFO:Finalizing model
2023-07-02 13:45:04,989:INFO:Uploading results into container
2023-07-02 13:45:04,990:INFO:Uploading model into container now
2023-07-02 13:45:04,990:INFO:_master_model_container: 17
2023-07-02 13:45:04,990:INFO:_display_container: 5
2023-07-02 13:45:04,990:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:45:04,990:INFO:create_model() successfully completed......................................
2023-07-02 13:45:05,103:INFO:SubProcess create_model() end ==================================
2023-07-02 13:45:05,104:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.7754
2023-07-02 13:45:05,104:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0001, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.7754
2023-07-02 13:45:05,104:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2023-07-02 13:45:05,104:INFO:choose_better completed
2023-07-02 13:45:05,105:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-07-02 13:45:05,114:INFO:_master_model_container: 17
2023-07-02 13:45:05,115:INFO:_display_container: 4
2023-07-02 13:45:05,115:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:45:05,116:INFO:tune_model() successfully completed......................................
2023-07-02 13:45:06,085:INFO:Initializing plot_model()
2023-07-02 13:45:06,086:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, system=True)
2023-07-02 13:45:06,086:INFO:Checking exceptions
2023-07-02 13:45:06,092:INFO:Preloading libraries
2023-07-02 13:45:06,092:INFO:Copying training dataset
2023-07-02 13:45:06,092:INFO:Plot type: manifold
2023-07-02 13:45:06,253:INFO:Fitting & Transforming Model
2023-07-02 13:45:06,255:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 13:45:06,287:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 13:45:08,349:INFO:Visual Rendered Successfully
2023-07-02 13:45:08,464:INFO:plot_model() successfully completed......................................
2023-07-02 13:45:08,494:INFO:Initializing plot_model()
2023-07-02 13:45:08,495:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, system=True)
2023-07-02 13:45:08,495:INFO:Checking exceptions
2023-07-02 13:45:08,499:INFO:Preloading libraries
2023-07-02 13:45:08,499:INFO:Copying training dataset
2023-07-02 13:45:08,499:INFO:Plot type: feature
2023-07-02 13:45:08,639:INFO:Visual Rendered Successfully
2023-07-02 13:45:08,758:INFO:plot_model() successfully completed......................................
2023-07-02 13:45:08,764:INFO:Initializing plot_model()
2023-07-02 13:45:08,764:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, system=True)
2023-07-02 13:45:08,765:INFO:Checking exceptions
2023-07-02 13:45:08,769:INFO:Preloading libraries
2023-07-02 13:45:08,769:INFO:Copying training dataset
2023-07-02 13:45:08,769:INFO:Plot type: confusion_matrix
2023-07-02 13:45:08,844:INFO:Fitting Model
2023-07-02 13:45:08,845:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:45:08,846:INFO:Scoring test/hold-out set
2023-07-02 13:45:08,943:INFO:Visual Rendered Successfully
2023-07-02 13:45:09,058:INFO:plot_model() successfully completed......................................
2023-07-02 13:45:09,064:INFO:Initializing plot_model()
2023-07-02 13:45:09,065:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, system=True)
2023-07-02 13:45:09,065:INFO:Checking exceptions
2023-07-02 13:45:09,069:INFO:Preloading libraries
2023-07-02 13:45:09,070:INFO:Copying training dataset
2023-07-02 13:45:09,070:INFO:Plot type: auc
2023-07-02 13:45:09,143:INFO:Fitting Model
2023-07-02 13:45:09,143:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:45:09,143:INFO:Scoring test/hold-out set
2023-07-02 13:45:09,287:INFO:Visual Rendered Successfully
2023-07-02 13:45:09,404:INFO:plot_model() successfully completed......................................
2023-07-02 13:45:09,412:INFO:Initializing plot_model()
2023-07-02 13:45:09,412:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, system=True)
2023-07-02 13:45:09,412:INFO:Checking exceptions
2023-07-02 13:45:09,417:INFO:Preloading libraries
2023-07-02 13:45:09,417:INFO:Copying training dataset
2023-07-02 13:45:09,418:INFO:Plot type: pr
2023-07-02 13:45:09,492:INFO:Fitting Model
2023-07-02 13:45:09,492:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:45:09,492:INFO:Scoring test/hold-out set
2023-07-02 13:45:09,617:INFO:Visual Rendered Successfully
2023-07-02 13:45:09,731:INFO:plot_model() successfully completed......................................
2023-07-02 13:45:09,743:INFO:Initializing predict_model()
2023-07-02 13:45:09,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000247682A55E0>)
2023-07-02 13:45:09,744:INFO:Checking exceptions
2023-07-02 13:45:09,744:INFO:Preloading libraries
2023-07-02 13:45:09,931:INFO:Initializing finalize_model()
2023-07-02 13:45:09,931:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 13:45:09,931:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:45:09,934:INFO:Initializing create_model()
2023-07-02 13:45:09,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002476587A370>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 13:45:09,935:INFO:Checking exceptions
2023-07-02 13:45:09,937:INFO:Importing libraries
2023-07-02 13:45:09,937:INFO:Copying training dataset
2023-07-02 13:45:09,937:INFO:Defining folds
2023-07-02 13:45:09,937:INFO:Declaring metric variables
2023-07-02 13:45:09,938:INFO:Importing untrained model
2023-07-02 13:45:09,938:INFO:Declaring custom model
2023-07-02 13:45:09,938:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:45:09,939:INFO:Cross validation set to False
2023-07-02 13:45:09,939:INFO:Fitting Model
2023-07-02 13:45:09,977:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2023-07-02 13:45:09,977:INFO:create_model() successfully completed......................................
2023-07-02 13:45:10,105:INFO:_master_model_container: 17
2023-07-02 13:45:10,106:INFO:_display_container: 5
2023-07-02 13:45:10,110:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2023-07-02 13:45:10,110:INFO:finalize_model() successfully completed......................................
2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_d5cd9d19ef924f74bb90a270134257e0
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_b24e855fcec34cfba51921c79c82a755_05cc7ba0f8cd41148e2f2b1a8141b2ef
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_02c135d7f3c94f04ba00da63716829b5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_7c313282c6044dcbba17b7cd9b900124_9bde3df55fc74c6db04b112be8cb3a22
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_a541ecc462054641bd9937d0e605a82e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_4a365f3c57ed45fe83fe49d298dce245_1e3759688cf647bba6e3e77c922baaf9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_a890f543ae8a4d0985a01bb25b4fc71f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_f16b96ec60444f44be0d122ab7e0d99c_de00b0b6778048759ef7beba7dea1690
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_c40a297507af4a10a2db2c79c34389c5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_3651e362b6984bd89ff32fe27500f633_c6f039226ddb4d7a8429447deca3fd1e
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_eff5e20ba6d243158fae9324fb121d64
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_e1c4f65d4e37490585975137c39f4993_c5f0b3e92a6e426281f64b1d1d7c8d08
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_51f36c14921e4802acd31478dbfb0685
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_b235e0851acd4629a11f77bdcd4f48c1_48d923f58a1a43a9993ada99897d078d
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_a1722f36ddb8433e87d454fd17103163
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_a060af5c25cd48d8a6ab35614e6e956d_3a6af4dc36d843af96cee7b12ec70a96
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_5ce13892f0bb41acaf3399a37d1c557f
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_455a7b3f2dd6498ba02ce3dcbaa74a0d_a4af4f9106c04c35a942fdd17ee702ce
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_14d4c663b5c740b0bc59ccdf2036e0ec
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_85ad1ca3e10b413fb1801009a4a85207_2fc89498c008431f9c0d57535a78b8f5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_7b9d0bfa7b7d4c41bfdbec7e02ca88e7
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_3423c3ebb16d433499fa7e24d1748f9e_d051649b99144c38b6c2cfea9563f849
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_dc1c8c5e43724d5183776ca7f5d6ae13
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_1d098efb3c5a4aa1a4da601593e2a82d_3d08966d29de4a4494102225e39129b1
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_66a4f203043049f5af98e79891045892
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_dcbbfb31c04b4ba9b4be07f61dac3626_2e84e1d74eeb46ba9df468f51db03410
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_5577f4229cbe48ec8e19ae1702cc5ec5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_881ec60205714d1e9734529ebdf7fc33_897f5244d04b4a3a99697d991ba085ae
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_c3229947b07b48f2b7bf6506ce9593fd
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,947:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_09dc5907c6a34e05933667e33ab839db_ffd9382effed49bfa5435ae729195b72
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,948:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_133cc07ee6e94627a425eca87c377ba9
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,948:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_a917b5978c2b43b8808acecbe012bea4_ec60f0f7ddc0448297908e10e5962dad
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,948:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_2b449f6bc1e54b1e849474b641947510
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,948:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_9e73a0156e064ebd8891d1b63df4a482_52c94b356d0e411d9d0d5e499c918824
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,948:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_654c94aa2c3f46908271914a1cb848b5
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:34,948:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\nanji\AppData\Local\Temp\joblib_memmapping_folder_26196_cd39c7e8f2c0442ca88ba19d39762628_7ce8c23379724017b1ac6dd5f84d7a69
  warnings.warn("Failed to delete temporary folder: {}"

2023-07-02 13:47:43,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:47:43,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:47:43,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:47:43,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-02 13:47:44,193:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-07-02 13:47:46,007:INFO:PyCaret ClassificationExperiment
2023-07-02 13:47:46,007:INFO:Logging name: clf-default-name
2023-07-02 13:47:46,007:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 13:47:46,007:INFO:version 3.0.0
2023-07-02 13:47:46,007:INFO:Initializing setup()
2023-07-02 13:47:46,008:INFO:self.USI: de7b
2023-07-02 13:47:46,008:INFO:self._variable_keys: {'memory', 'target_param', 'fold_shuffle_param', 'exp_id', 'gpu_param', '_available_plots', 'y_train', 'html_param', 'gpu_n_jobs_param', 'logging_param', 'X_test', 'data', 'X', 'seed', 'pipeline', 'y', 'is_multiclass', 'y_test', 'fix_imbalance', 'idx', 'X_train', 'log_plots_param', '_ml_usecase', 'USI', 'exp_name_log', 'fold_generator', 'n_jobs_param', 'fold_groups_param'}
2023-07-02 13:47:46,008:INFO:Checking environment
2023-07-02 13:47:46,008:INFO:python_version: 3.9.13
2023-07-02 13:47:46,008:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 13:47:46,008:INFO:machine: AMD64
2023-07-02 13:47:46,008:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 13:47:46,008:INFO:Memory: svmem(total=16456249344, available=3952238592, percent=76.0, used=12504010752, free=3952238592)
2023-07-02 13:47:46,008:INFO:Physical Core: 6
2023-07-02 13:47:46,008:INFO:Logical Core: 12
2023-07-02 13:47:46,008:INFO:Checking libraries
2023-07-02 13:47:46,008:INFO:System:
2023-07-02 13:47:46,008:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 13:47:46,008:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 13:47:46,008:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 13:47:46,008:INFO:PyCaret required dependencies:
2023-07-02 13:47:46,008:INFO:                 pip: 22.2.2
2023-07-02 13:47:46,008:INFO:          setuptools: 63.4.1
2023-07-02 13:47:46,008:INFO:             pycaret: 3.0.0
2023-07-02 13:47:46,008:INFO:             IPython: 7.31.1
2023-07-02 13:47:46,009:INFO:          ipywidgets: 7.6.5
2023-07-02 13:47:46,009:INFO:                tqdm: 4.64.1
2023-07-02 13:47:46,009:INFO:               numpy: 1.21.5
2023-07-02 13:47:46,009:INFO:              pandas: 1.4.4
2023-07-02 13:47:46,009:INFO:              jinja2: 3.1.2
2023-07-02 13:47:46,009:INFO:               scipy: 1.9.1
2023-07-02 13:47:46,009:INFO:              joblib: 1.2.0
2023-07-02 13:47:46,009:INFO:             sklearn: 1.0.2
2023-07-02 13:47:46,009:INFO:                pyod: 1.0.9
2023-07-02 13:47:46,009:INFO:            imblearn: 0.10.1
2023-07-02 13:47:46,009:INFO:   category_encoders: 2.6.0
2023-07-02 13:47:46,009:INFO:            lightgbm: 3.3.5
2023-07-02 13:47:46,009:INFO:               numba: 0.55.1
2023-07-02 13:47:46,009:INFO:            requests: 2.28.1
2023-07-02 13:47:46,009:INFO:          matplotlib: 3.5.2
2023-07-02 13:47:46,009:INFO:          scikitplot: 0.3.7
2023-07-02 13:47:46,009:INFO:         yellowbrick: 1.5
2023-07-02 13:47:46,009:INFO:              plotly: 5.9.0
2023-07-02 13:47:46,009:INFO:             kaleido: 0.2.1
2023-07-02 13:47:46,009:INFO:         statsmodels: 0.13.2
2023-07-02 13:47:46,009:INFO:              sktime: 0.16.1
2023-07-02 13:47:46,009:INFO:               tbats: 1.1.2
2023-07-02 13:47:46,009:INFO:            pmdarima: 2.0.3
2023-07-02 13:47:46,009:INFO:              psutil: 5.9.0
2023-07-02 13:47:46,009:INFO:PyCaret optional dependencies:
2023-07-02 13:47:47,131:INFO:                shap: 0.41.0
2023-07-02 13:47:47,131:INFO:           interpret: Not installed
2023-07-02 13:47:47,131:INFO:                umap: Not installed
2023-07-02 13:47:47,131:INFO:    pandas_profiling: Not installed
2023-07-02 13:47:47,131:INFO:  explainerdashboard: Not installed
2023-07-02 13:47:47,131:INFO:             autoviz: Not installed
2023-07-02 13:47:47,131:INFO:           fairlearn: Not installed
2023-07-02 13:47:47,131:INFO:             xgboost: Not installed
2023-07-02 13:47:47,131:INFO:            catboost: Not installed
2023-07-02 13:47:47,131:INFO:              kmodes: Not installed
2023-07-02 13:47:47,131:INFO:             mlxtend: Not installed
2023-07-02 13:47:47,131:INFO:       statsforecast: Not installed
2023-07-02 13:47:47,131:INFO:        tune_sklearn: 0.4.5
2023-07-02 13:47:47,131:INFO:                 ray: 2.3.1
2023-07-02 13:47:47,131:INFO:            hyperopt: Not installed
2023-07-02 13:47:47,131:INFO:              optuna: 3.1.0
2023-07-02 13:47:47,131:INFO:               skopt: Not installed
2023-07-02 13:47:47,131:INFO:              mlflow: 2.2.2
2023-07-02 13:47:47,131:INFO:              gradio: 3.23.0
2023-07-02 13:47:47,132:INFO:             fastapi: 0.95.0
2023-07-02 13:47:47,132:INFO:             uvicorn: 0.21.1
2023-07-02 13:47:47,132:INFO:              m2cgen: Not installed
2023-07-02 13:47:47,132:INFO:           evidently: Not installed
2023-07-02 13:47:47,132:INFO:               fugue: Not installed
2023-07-02 13:47:47,132:INFO:           streamlit: 1.20.0
2023-07-02 13:47:47,132:INFO:             prophet: Not installed
2023-07-02 13:47:47,132:INFO:None
2023-07-02 13:47:47,132:INFO:Set up data.
2023-07-02 13:47:47,136:INFO:Set up train/test split.
2023-07-02 13:47:47,140:INFO:Set up index.
2023-07-02 13:47:47,140:INFO:Set up folding strategy.
2023-07-02 13:47:47,140:INFO:Assigning column types.
2023-07-02 13:47:47,143:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 13:47:47,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:47:47,195:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:47:47,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:47:47,298:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:47:47,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 13:47:47,380:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:47:47,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,461:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:47:47,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,492:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 13:47:47,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,655:INFO:Preparing preprocessing pipeline...
2023-07-02 13:47:47,656:INFO:Set up simple imputation.
2023-07-02 13:47:47,656:INFO:Set up feature normalization.
2023-07-02 13:47:47,682:INFO:Finished creating preprocessing pipeline.
2023-07-02 13:47:47,687:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strate...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 13:47:47,687:INFO:Creating final display dataframe.
2023-07-02 13:47:47,762:INFO:Setup _display_container:                     Description             Value
0                    Session id              8234
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (614, 9)
6    Transformed test set shape          (154, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              de7b
2023-07-02 13:47:47,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:47:47,932:INFO:setup() successfully completed in 2.71s...............
2023-07-02 13:47:47,947:INFO:Initializing compare_models()
2023-07-02 13:47:47,947:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 13:47:47,947:INFO:Checking exceptions
2023-07-02 13:47:47,952:INFO:Preparing display monitor
2023-07-02 13:47:47,988:INFO:Initializing Logistic Regression
2023-07-02 13:47:47,988:INFO:Total runtime is 0.0 minutes
2023-07-02 13:47:47,992:INFO:SubProcess create_model() called ==================================
2023-07-02 13:47:47,993:INFO:Initializing create_model()
2023-07-02 13:47:47,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:47:47,993:INFO:Checking exceptions
2023-07-02 13:47:47,993:INFO:Importing libraries
2023-07-02 13:47:47,993:INFO:Copying training dataset
2023-07-02 13:47:47,997:INFO:Defining folds
2023-07-02 13:47:47,997:INFO:Declaring metric variables
2023-07-02 13:47:48,000:INFO:Importing untrained model
2023-07-02 13:47:48,004:INFO:Logistic Regression Imported successfully
2023-07-02 13:47:48,011:INFO:Starting cross validation
2023-07-02 13:47:48,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:48:07,820:INFO:Calculating mean and std
2023-07-02 13:48:07,822:INFO:Creating metrics dataframe
2023-07-02 13:48:09,128:INFO:Uploading results into container
2023-07-02 13:48:09,129:INFO:Uploading model into container now
2023-07-02 13:48:09,129:INFO:_master_model_container: 1
2023-07-02 13:48:09,129:INFO:_display_container: 2
2023-07-02 13:48:09,130:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:48:09,130:INFO:create_model() successfully completed......................................
2023-07-02 13:48:09,257:INFO:SubProcess create_model() end ==================================
2023-07-02 13:48:09,258:INFO:Creating metrics dataframe
2023-07-02 13:48:09,266:INFO:Initializing K Neighbors Classifier
2023-07-02 13:48:09,266:INFO:Total runtime is 0.3546293616294861 minutes
2023-07-02 13:48:09,270:INFO:SubProcess create_model() called ==================================
2023-07-02 13:48:09,270:INFO:Initializing create_model()
2023-07-02 13:48:09,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:48:09,271:INFO:Checking exceptions
2023-07-02 13:48:09,271:INFO:Importing libraries
2023-07-02 13:48:09,271:INFO:Copying training dataset
2023-07-02 13:48:09,276:INFO:Defining folds
2023-07-02 13:48:09,277:INFO:Declaring metric variables
2023-07-02 13:48:09,282:INFO:Importing untrained model
2023-07-02 13:48:09,289:INFO:K Neighbors Classifier Imported successfully
2023-07-02 13:48:09,298:INFO:Starting cross validation
2023-07-02 13:48:09,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:48:09,475:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:09,479:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:09,493:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:09,497:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:09,502:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:09,514:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:09,524:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:14,216:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:14,219:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:48:19,311:INFO:Calculating mean and std
2023-07-02 13:48:19,313:INFO:Creating metrics dataframe
2023-07-02 13:48:20,502:INFO:Uploading results into container
2023-07-02 13:48:20,503:INFO:Uploading model into container now
2023-07-02 13:48:20,503:INFO:_master_model_container: 2
2023-07-02 13:48:20,506:INFO:_display_container: 2
2023-07-02 13:48:20,506:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 13:48:20,507:INFO:create_model() successfully completed......................................
2023-07-02 13:48:20,626:INFO:SubProcess create_model() end ==================================
2023-07-02 13:48:20,626:INFO:Creating metrics dataframe
2023-07-02 13:48:20,634:INFO:Initializing Naive Bayes
2023-07-02 13:48:20,635:INFO:Total runtime is 0.5441178878148397 minutes
2023-07-02 13:48:20,638:INFO:SubProcess create_model() called ==================================
2023-07-02 13:48:20,638:INFO:Initializing create_model()
2023-07-02 13:48:20,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:48:20,638:INFO:Checking exceptions
2023-07-02 13:48:20,639:INFO:Importing libraries
2023-07-02 13:48:20,639:INFO:Copying training dataset
2023-07-02 13:48:20,642:INFO:Defining folds
2023-07-02 13:48:20,643:INFO:Declaring metric variables
2023-07-02 13:48:20,646:INFO:Importing untrained model
2023-07-02 13:48:20,652:INFO:Naive Bayes Imported successfully
2023-07-02 13:48:20,662:INFO:Starting cross validation
2023-07-02 13:48:20,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:48:30,259:INFO:Calculating mean and std
2023-07-02 13:48:30,261:INFO:Creating metrics dataframe
2023-07-02 13:48:31,447:INFO:Uploading results into container
2023-07-02 13:48:31,448:INFO:Uploading model into container now
2023-07-02 13:48:31,448:INFO:_master_model_container: 3
2023-07-02 13:48:31,449:INFO:_display_container: 2
2023-07-02 13:48:31,449:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 13:48:31,449:INFO:create_model() successfully completed......................................
2023-07-02 13:48:31,564:INFO:SubProcess create_model() end ==================================
2023-07-02 13:48:31,564:INFO:Creating metrics dataframe
2023-07-02 13:48:31,573:INFO:Initializing Decision Tree Classifier
2023-07-02 13:48:31,573:INFO:Total runtime is 0.7264121492703757 minutes
2023-07-02 13:48:31,577:INFO:SubProcess create_model() called ==================================
2023-07-02 13:48:31,578:INFO:Initializing create_model()
2023-07-02 13:48:31,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:48:31,578:INFO:Checking exceptions
2023-07-02 13:48:31,578:INFO:Importing libraries
2023-07-02 13:48:31,578:INFO:Copying training dataset
2023-07-02 13:48:31,583:INFO:Defining folds
2023-07-02 13:48:31,584:INFO:Declaring metric variables
2023-07-02 13:48:31,590:INFO:Importing untrained model
2023-07-02 13:48:31,595:INFO:Decision Tree Classifier Imported successfully
2023-07-02 13:48:31,605:INFO:Starting cross validation
2023-07-02 13:48:31,606:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:48:40,569:INFO:Calculating mean and std
2023-07-02 13:48:40,571:INFO:Creating metrics dataframe
2023-07-02 13:48:41,875:INFO:Uploading results into container
2023-07-02 13:48:41,876:INFO:Uploading model into container now
2023-07-02 13:48:41,877:INFO:_master_model_container: 4
2023-07-02 13:48:41,878:INFO:_display_container: 2
2023-07-02 13:48:41,878:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8234, splitter='best')
2023-07-02 13:48:41,878:INFO:create_model() successfully completed......................................
2023-07-02 13:48:42,004:INFO:SubProcess create_model() end ==================================
2023-07-02 13:48:42,005:INFO:Creating metrics dataframe
2023-07-02 13:48:42,020:INFO:Initializing SVM - Linear Kernel
2023-07-02 13:48:42,020:INFO:Total runtime is 0.9005290349324545 minutes
2023-07-02 13:48:42,024:INFO:SubProcess create_model() called ==================================
2023-07-02 13:48:42,025:INFO:Initializing create_model()
2023-07-02 13:48:42,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:48:42,025:INFO:Checking exceptions
2023-07-02 13:48:42,025:INFO:Importing libraries
2023-07-02 13:48:42,025:INFO:Copying training dataset
2023-07-02 13:48:42,031:INFO:Defining folds
2023-07-02 13:48:42,031:INFO:Declaring metric variables
2023-07-02 13:48:42,037:INFO:Importing untrained model
2023-07-02 13:48:42,042:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 13:48:42,053:INFO:Starting cross validation
2023-07-02 13:48:42,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:48:42,168:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,174:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,182:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,197:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,198:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,208:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,209:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,225:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,231:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:42,237:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:48:50,983:INFO:Calculating mean and std
2023-07-02 13:48:50,985:INFO:Creating metrics dataframe
2023-07-02 13:48:52,151:INFO:Uploading results into container
2023-07-02 13:48:52,151:INFO:Uploading model into container now
2023-07-02 13:48:52,152:INFO:_master_model_container: 5
2023-07-02 13:48:52,152:INFO:_display_container: 2
2023-07-02 13:48:52,153:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 13:48:52,153:INFO:create_model() successfully completed......................................
2023-07-02 13:48:52,267:INFO:SubProcess create_model() end ==================================
2023-07-02 13:48:52,267:INFO:Creating metrics dataframe
2023-07-02 13:48:52,278:INFO:Initializing Ridge Classifier
2023-07-02 13:48:52,278:INFO:Total runtime is 1.0715017835299174 minutes
2023-07-02 13:48:52,282:INFO:SubProcess create_model() called ==================================
2023-07-02 13:48:52,283:INFO:Initializing create_model()
2023-07-02 13:48:52,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:48:52,283:INFO:Checking exceptions
2023-07-02 13:48:52,283:INFO:Importing libraries
2023-07-02 13:48:52,283:INFO:Copying training dataset
2023-07-02 13:48:52,288:INFO:Defining folds
2023-07-02 13:48:52,288:INFO:Declaring metric variables
2023-07-02 13:48:52,292:INFO:Importing untrained model
2023-07-02 13:48:52,300:INFO:Ridge Classifier Imported successfully
2023-07-02 13:48:52,309:INFO:Starting cross validation
2023-07-02 13:48:52,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:48:52,411:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,420:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,432:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,438:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,441:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,451:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,463:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,464:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:48:52,470:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:49:01,369:INFO:Calculating mean and std
2023-07-02 13:49:01,370:INFO:Creating metrics dataframe
2023-07-02 13:49:02,567:INFO:Uploading results into container
2023-07-02 13:49:02,568:INFO:Uploading model into container now
2023-07-02 13:49:02,568:INFO:_master_model_container: 6
2023-07-02 13:49:02,569:INFO:_display_container: 2
2023-07-02 13:49:02,569:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8234, solver='auto', tol=0.001)
2023-07-02 13:49:02,569:INFO:create_model() successfully completed......................................
2023-07-02 13:49:02,687:INFO:SubProcess create_model() end ==================================
2023-07-02 13:49:02,687:INFO:Creating metrics dataframe
2023-07-02 13:49:02,697:INFO:Initializing Random Forest Classifier
2023-07-02 13:49:02,697:INFO:Total runtime is 1.245143226782481 minutes
2023-07-02 13:49:02,701:INFO:SubProcess create_model() called ==================================
2023-07-02 13:49:02,701:INFO:Initializing create_model()
2023-07-02 13:49:02,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:49:02,701:INFO:Checking exceptions
2023-07-02 13:49:02,701:INFO:Importing libraries
2023-07-02 13:49:02,701:INFO:Copying training dataset
2023-07-02 13:49:02,707:INFO:Defining folds
2023-07-02 13:49:02,708:INFO:Declaring metric variables
2023-07-02 13:49:02,713:INFO:Importing untrained model
2023-07-02 13:49:02,719:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:49:02,729:INFO:Starting cross validation
2023-07-02 13:49:02,731:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:49:12,677:INFO:Calculating mean and std
2023-07-02 13:49:12,679:INFO:Creating metrics dataframe
2023-07-02 13:49:14,020:INFO:Uploading results into container
2023-07-02 13:49:14,021:INFO:Uploading model into container now
2023-07-02 13:49:14,021:INFO:_master_model_container: 7
2023-07-02 13:49:14,022:INFO:_display_container: 2
2023-07-02 13:49:14,022:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8234, verbose=0, warm_start=False)
2023-07-02 13:49:14,022:INFO:create_model() successfully completed......................................
2023-07-02 13:49:14,137:INFO:SubProcess create_model() end ==================================
2023-07-02 13:49:14,137:INFO:Creating metrics dataframe
2023-07-02 13:49:14,148:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 13:49:14,148:INFO:Total runtime is 1.4359947800636292 minutes
2023-07-02 13:49:14,152:INFO:SubProcess create_model() called ==================================
2023-07-02 13:49:14,152:INFO:Initializing create_model()
2023-07-02 13:49:14,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:49:14,153:INFO:Checking exceptions
2023-07-02 13:49:14,153:INFO:Importing libraries
2023-07-02 13:49:14,153:INFO:Copying training dataset
2023-07-02 13:49:14,158:INFO:Defining folds
2023-07-02 13:49:14,158:INFO:Declaring metric variables
2023-07-02 13:49:14,162:INFO:Importing untrained model
2023-07-02 13:49:14,168:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 13:49:14,179:INFO:Starting cross validation
2023-07-02 13:49:14,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:49:23,512:INFO:Calculating mean and std
2023-07-02 13:49:23,514:INFO:Creating metrics dataframe
2023-07-02 13:49:24,671:INFO:Uploading results into container
2023-07-02 13:49:24,671:INFO:Uploading model into container now
2023-07-02 13:49:24,672:INFO:_master_model_container: 8
2023-07-02 13:49:24,672:INFO:_display_container: 2
2023-07-02 13:49:24,672:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 13:49:24,672:INFO:create_model() successfully completed......................................
2023-07-02 13:49:24,787:INFO:SubProcess create_model() end ==================================
2023-07-02 13:49:24,788:INFO:Creating metrics dataframe
2023-07-02 13:49:24,798:INFO:Initializing Ada Boost Classifier
2023-07-02 13:49:24,798:INFO:Total runtime is 1.613493299484253 minutes
2023-07-02 13:49:24,802:INFO:SubProcess create_model() called ==================================
2023-07-02 13:49:24,803:INFO:Initializing create_model()
2023-07-02 13:49:24,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:49:24,803:INFO:Checking exceptions
2023-07-02 13:49:24,804:INFO:Importing libraries
2023-07-02 13:49:24,804:INFO:Copying training dataset
2023-07-02 13:49:24,808:INFO:Defining folds
2023-07-02 13:49:24,808:INFO:Declaring metric variables
2023-07-02 13:49:24,812:INFO:Importing untrained model
2023-07-02 13:49:24,818:INFO:Ada Boost Classifier Imported successfully
2023-07-02 13:49:24,829:INFO:Starting cross validation
2023-07-02 13:49:24,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:49:34,374:INFO:Calculating mean and std
2023-07-02 13:49:34,376:INFO:Creating metrics dataframe
2023-07-02 13:49:35,575:INFO:Uploading results into container
2023-07-02 13:49:35,575:INFO:Uploading model into container now
2023-07-02 13:49:35,576:INFO:_master_model_container: 9
2023-07-02 13:49:35,576:INFO:_display_container: 2
2023-07-02 13:49:35,576:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8234)
2023-07-02 13:49:35,576:INFO:create_model() successfully completed......................................
2023-07-02 13:49:35,693:INFO:SubProcess create_model() end ==================================
2023-07-02 13:49:35,693:INFO:Creating metrics dataframe
2023-07-02 13:49:35,705:INFO:Initializing Gradient Boosting Classifier
2023-07-02 13:49:35,705:INFO:Total runtime is 1.7952883481979371 minutes
2023-07-02 13:49:35,708:INFO:SubProcess create_model() called ==================================
2023-07-02 13:49:35,709:INFO:Initializing create_model()
2023-07-02 13:49:35,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:49:35,709:INFO:Checking exceptions
2023-07-02 13:49:35,709:INFO:Importing libraries
2023-07-02 13:49:35,709:INFO:Copying training dataset
2023-07-02 13:49:35,714:INFO:Defining folds
2023-07-02 13:49:35,714:INFO:Declaring metric variables
2023-07-02 13:49:35,718:INFO:Importing untrained model
2023-07-02 13:49:35,723:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 13:49:35,733:INFO:Starting cross validation
2023-07-02 13:49:35,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:49:45,212:INFO:Calculating mean and std
2023-07-02 13:49:45,213:INFO:Creating metrics dataframe
2023-07-02 13:49:46,583:INFO:Uploading results into container
2023-07-02 13:49:46,584:INFO:Uploading model into container now
2023-07-02 13:49:46,584:INFO:_master_model_container: 10
2023-07-02 13:49:46,584:INFO:_display_container: 2
2023-07-02 13:49:46,585:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8234, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 13:49:46,585:INFO:create_model() successfully completed......................................
2023-07-02 13:49:46,716:INFO:SubProcess create_model() end ==================================
2023-07-02 13:49:46,716:INFO:Creating metrics dataframe
2023-07-02 13:49:46,727:INFO:Initializing Linear Discriminant Analysis
2023-07-02 13:49:46,727:INFO:Total runtime is 1.9789867599805198 minutes
2023-07-02 13:49:46,731:INFO:SubProcess create_model() called ==================================
2023-07-02 13:49:46,732:INFO:Initializing create_model()
2023-07-02 13:49:46,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:49:46,732:INFO:Checking exceptions
2023-07-02 13:49:46,732:INFO:Importing libraries
2023-07-02 13:49:46,732:INFO:Copying training dataset
2023-07-02 13:49:46,737:INFO:Defining folds
2023-07-02 13:49:46,738:INFO:Declaring metric variables
2023-07-02 13:49:46,743:INFO:Importing untrained model
2023-07-02 13:49:46,748:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:49:46,756:INFO:Starting cross validation
2023-07-02 13:49:46,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:49:56,531:INFO:Calculating mean and std
2023-07-02 13:49:56,534:INFO:Creating metrics dataframe
2023-07-02 13:49:57,733:INFO:Uploading results into container
2023-07-02 13:49:57,734:INFO:Uploading model into container now
2023-07-02 13:49:57,734:INFO:_master_model_container: 11
2023-07-02 13:49:57,735:INFO:_display_container: 2
2023-07-02 13:49:57,735:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:49:57,735:INFO:create_model() successfully completed......................................
2023-07-02 13:49:57,847:INFO:SubProcess create_model() end ==================================
2023-07-02 13:49:57,847:INFO:Creating metrics dataframe
2023-07-02 13:49:57,858:INFO:Initializing Extra Trees Classifier
2023-07-02 13:49:57,858:INFO:Total runtime is 2.1644984523455304 minutes
2023-07-02 13:49:57,861:INFO:SubProcess create_model() called ==================================
2023-07-02 13:49:57,862:INFO:Initializing create_model()
2023-07-02 13:49:57,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:49:57,862:INFO:Checking exceptions
2023-07-02 13:49:57,862:INFO:Importing libraries
2023-07-02 13:49:57,862:INFO:Copying training dataset
2023-07-02 13:49:57,866:INFO:Defining folds
2023-07-02 13:49:57,867:INFO:Declaring metric variables
2023-07-02 13:49:57,870:INFO:Importing untrained model
2023-07-02 13:49:57,874:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:49:57,883:INFO:Starting cross validation
2023-07-02 13:49:57,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:50:08,050:INFO:Calculating mean and std
2023-07-02 13:50:08,052:INFO:Creating metrics dataframe
2023-07-02 13:50:09,237:INFO:Uploading results into container
2023-07-02 13:50:09,237:INFO:Uploading model into container now
2023-07-02 13:50:09,238:INFO:_master_model_container: 12
2023-07-02 13:50:09,238:INFO:_display_container: 2
2023-07-02 13:50:09,238:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8234, verbose=0, warm_start=False)
2023-07-02 13:50:09,239:INFO:create_model() successfully completed......................................
2023-07-02 13:50:09,355:INFO:SubProcess create_model() end ==================================
2023-07-02 13:50:09,355:INFO:Creating metrics dataframe
2023-07-02 13:50:09,366:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 13:50:09,366:INFO:Total runtime is 2.3562983075777693 minutes
2023-07-02 13:50:09,369:INFO:SubProcess create_model() called ==================================
2023-07-02 13:50:09,370:INFO:Initializing create_model()
2023-07-02 13:50:09,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:50:09,370:INFO:Checking exceptions
2023-07-02 13:50:09,370:INFO:Importing libraries
2023-07-02 13:50:09,370:INFO:Copying training dataset
2023-07-02 13:50:09,375:INFO:Defining folds
2023-07-02 13:50:09,375:INFO:Declaring metric variables
2023-07-02 13:50:09,379:INFO:Importing untrained model
2023-07-02 13:50:09,383:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 13:50:09,391:INFO:Starting cross validation
2023-07-02 13:50:09,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:50:20,714:INFO:Calculating mean and std
2023-07-02 13:50:20,716:INFO:Creating metrics dataframe
2023-07-02 13:50:22,032:INFO:Uploading results into container
2023-07-02 13:50:22,033:INFO:Uploading model into container now
2023-07-02 13:50:22,033:INFO:_master_model_container: 13
2023-07-02 13:50:22,033:INFO:_display_container: 2
2023-07-02 13:50:22,034:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8234, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 13:50:22,034:INFO:create_model() successfully completed......................................
2023-07-02 13:50:22,153:INFO:SubProcess create_model() end ==================================
2023-07-02 13:50:22,153:INFO:Creating metrics dataframe
2023-07-02 13:50:22,165:INFO:Initializing Dummy Classifier
2023-07-02 13:50:22,166:INFO:Total runtime is 2.569634854793549 minutes
2023-07-02 13:50:22,169:INFO:SubProcess create_model() called ==================================
2023-07-02 13:50:22,169:INFO:Initializing create_model()
2023-07-02 13:50:22,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9C18B0>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:50:22,170:INFO:Checking exceptions
2023-07-02 13:50:22,170:INFO:Importing libraries
2023-07-02 13:50:22,170:INFO:Copying training dataset
2023-07-02 13:50:22,176:INFO:Defining folds
2023-07-02 13:50:22,177:INFO:Declaring metric variables
2023-07-02 13:50:22,188:INFO:Importing untrained model
2023-07-02 13:50:22,193:INFO:Dummy Classifier Imported successfully
2023-07-02 13:50:22,203:INFO:Starting cross validation
2023-07-02 13:50:22,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:50:22,349:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,357:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,372:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,373:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,389:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,399:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,418:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,422:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,422:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:22,440:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:50:32,702:INFO:Calculating mean and std
2023-07-02 13:50:32,704:INFO:Creating metrics dataframe
2023-07-02 13:50:34,484:INFO:Uploading results into container
2023-07-02 13:50:34,486:INFO:Uploading model into container now
2023-07-02 13:50:34,486:INFO:_master_model_container: 14
2023-07-02 13:50:34,487:INFO:_display_container: 2
2023-07-02 13:50:34,487:INFO:DummyClassifier(constant=None, random_state=8234, strategy='prior')
2023-07-02 13:50:34,487:INFO:create_model() successfully completed......................................
2023-07-02 13:50:34,642:INFO:SubProcess create_model() end ==================================
2023-07-02 13:50:34,642:INFO:Creating metrics dataframe
2023-07-02 13:50:34,676:INFO:Initializing create_model()
2023-07-02 13:50:34,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:50:34,677:INFO:Checking exceptions
2023-07-02 13:50:34,681:INFO:Importing libraries
2023-07-02 13:50:34,682:INFO:Copying training dataset
2023-07-02 13:50:34,688:INFO:Defining folds
2023-07-02 13:50:34,688:INFO:Declaring metric variables
2023-07-02 13:50:34,688:INFO:Importing untrained model
2023-07-02 13:50:34,688:INFO:Declaring custom model
2023-07-02 13:50:34,689:INFO:Logistic Regression Imported successfully
2023-07-02 13:50:34,691:INFO:Cross validation set to False
2023-07-02 13:50:34,691:INFO:Fitting Model
2023-07-02 13:50:35,870:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:50:35,870:INFO:create_model() successfully completed......................................
2023-07-02 13:50:36,062:INFO:_master_model_container: 14
2023-07-02 13:50:36,062:INFO:_display_container: 2
2023-07-02 13:50:36,063:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:50:36,063:INFO:compare_models() successfully completed......................................
2023-07-02 13:50:36,073:INFO:Initializing create_model()
2023-07-02 13:50:36,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:50:36,073:INFO:Checking exceptions
2023-07-02 13:50:36,109:INFO:Importing libraries
2023-07-02 13:50:36,109:INFO:Copying training dataset
2023-07-02 13:50:36,116:INFO:Defining folds
2023-07-02 13:50:36,116:INFO:Declaring metric variables
2023-07-02 13:50:36,122:INFO:Importing untrained model
2023-07-02 13:50:36,127:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:50:36,137:INFO:Starting cross validation
2023-07-02 13:50:36,138:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:50:46,011:INFO:Calculating mean and std
2023-07-02 13:50:46,013:INFO:Creating metrics dataframe
2023-07-02 13:50:46,020:INFO:Finalizing model
2023-07-02 13:50:47,601:INFO:Uploading results into container
2023-07-02 13:50:47,602:INFO:Uploading model into container now
2023-07-02 13:50:47,613:INFO:_master_model_container: 15
2023-07-02 13:50:47,614:INFO:_display_container: 3
2023-07-02 13:50:47,615:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:50:47,615:INFO:create_model() successfully completed......................................
2023-07-02 13:50:47,788:INFO:Initializing tune_model()
2023-07-02 13:50:47,788:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>)
2023-07-02 13:50:47,789:INFO:Checking exceptions
2023-07-02 13:50:47,819:INFO:Copying training dataset
2023-07-02 13:50:47,824:INFO:Checking base model
2023-07-02 13:50:47,824:INFO:Base model : Linear Discriminant Analysis
2023-07-02 13:50:47,829:INFO:Declaring metric variables
2023-07-02 13:50:47,833:INFO:Defining Hyperparameters
2023-07-02 13:50:47,968:INFO:Tuning with n_jobs=-1
2023-07-02 13:50:47,969:INFO:Initializing RandomizedSearchCV
2023-07-02 13:52:37,485:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 'empirical'}
2023-07-02 13:52:37,486:INFO:Hyperparameter search completed
2023-07-02 13:52:37,487:INFO:SubProcess create_model() called ==================================
2023-07-02 13:52:37,487:INFO:Initializing create_model()
2023-07-02 13:52:37,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA1D9732E0>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 'empirical'})
2023-07-02 13:52:37,488:INFO:Checking exceptions
2023-07-02 13:52:37,488:INFO:Importing libraries
2023-07-02 13:52:37,488:INFO:Copying training dataset
2023-07-02 13:52:37,497:INFO:Defining folds
2023-07-02 13:52:37,497:INFO:Declaring metric variables
2023-07-02 13:52:37,501:INFO:Importing untrained model
2023-07-02 13:52:37,501:INFO:Declaring custom model
2023-07-02 13:52:37,506:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:52:37,519:INFO:Starting cross validation
2023-07-02 13:52:37,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:52:47,292:INFO:Calculating mean and std
2023-07-02 13:52:47,294:INFO:Creating metrics dataframe
2023-07-02 13:52:47,299:INFO:Finalizing model
2023-07-02 13:52:48,581:INFO:Uploading results into container
2023-07-02 13:52:48,583:INFO:Uploading model into container now
2023-07-02 13:52:48,583:INFO:_master_model_container: 16
2023-07-02 13:52:48,583:INFO:_display_container: 4
2023-07-02 13:52:48,584:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='empirical', solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:52:48,584:INFO:create_model() successfully completed......................................
2023-07-02 13:52:48,701:INFO:SubProcess create_model() end ==================================
2023-07-02 13:52:48,701:INFO:choose_better activated
2023-07-02 13:52:48,704:INFO:SubProcess create_model() called ==================================
2023-07-02 13:52:48,705:INFO:Initializing create_model()
2023-07-02 13:52:48,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:52:48,705:INFO:Checking exceptions
2023-07-02 13:52:48,707:INFO:Importing libraries
2023-07-02 13:52:48,707:INFO:Copying training dataset
2023-07-02 13:52:48,711:INFO:Defining folds
2023-07-02 13:52:48,711:INFO:Declaring metric variables
2023-07-02 13:52:48,711:INFO:Importing untrained model
2023-07-02 13:52:48,711:INFO:Declaring custom model
2023-07-02 13:52:48,711:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:52:48,712:INFO:Starting cross validation
2023-07-02 13:52:48,712:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:52:57,872:INFO:Calculating mean and std
2023-07-02 13:52:57,873:INFO:Creating metrics dataframe
2023-07-02 13:52:57,875:INFO:Finalizing model
2023-07-02 13:52:59,411:INFO:Uploading results into container
2023-07-02 13:52:59,412:INFO:Uploading model into container now
2023-07-02 13:52:59,413:INFO:_master_model_container: 17
2023-07-02 13:52:59,413:INFO:_display_container: 5
2023-07-02 13:52:59,413:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:52:59,413:INFO:create_model() successfully completed......................................
2023-07-02 13:52:59,550:INFO:SubProcess create_model() end ==================================
2023-07-02 13:52:59,550:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.7704
2023-07-02 13:52:59,551:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='empirical', solver='lsqr',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.7721
2023-07-02 13:52:59,551:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='empirical', solver='lsqr',
                           store_covariance=False, tol=0.0001) is best model
2023-07-02 13:52:59,551:INFO:choose_better completed
2023-07-02 13:52:59,560:INFO:_master_model_container: 17
2023-07-02 13:52:59,561:INFO:_display_container: 4
2023-07-02 13:52:59,561:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='empirical', solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:52:59,562:INFO:tune_model() successfully completed......................................
2023-07-02 13:53:00,653:INFO:Initializing plot_model()
2023-07-02 13:53:00,653:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, system=True)
2023-07-02 13:53:00,654:INFO:Checking exceptions
2023-07-02 13:53:00,659:INFO:Preloading libraries
2023-07-02 13:53:00,660:INFO:Copying training dataset
2023-07-02 13:53:00,660:INFO:Plot type: manifold
2023-07-02 13:53:00,851:INFO:Fitting & Transforming Model
2023-07-02 13:53:00,853:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 13:53:00,887:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 13:53:03,419:INFO:Visual Rendered Successfully
2023-07-02 13:53:03,564:INFO:plot_model() successfully completed......................................
2023-07-02 13:53:03,586:INFO:Initializing plot_model()
2023-07-02 13:53:03,587:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, system=True)
2023-07-02 13:53:03,587:INFO:Checking exceptions
2023-07-02 13:53:03,591:INFO:Preloading libraries
2023-07-02 13:53:03,591:INFO:Copying training dataset
2023-07-02 13:53:03,592:INFO:Plot type: feature
2023-07-02 13:53:03,746:INFO:Visual Rendered Successfully
2023-07-02 13:53:03,862:INFO:plot_model() successfully completed......................................
2023-07-02 13:53:03,883:INFO:Initializing plot_model()
2023-07-02 13:53:03,883:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, system=True)
2023-07-02 13:53:03,883:INFO:Checking exceptions
2023-07-02 13:53:03,889:INFO:Preloading libraries
2023-07-02 13:53:03,889:INFO:Copying training dataset
2023-07-02 13:53:03,889:INFO:Plot type: confusion_matrix
2023-07-02 13:53:03,963:INFO:Fitting Model
2023-07-02 13:53:03,965:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:53:03,966:INFO:Scoring test/hold-out set
2023-07-02 13:53:04,065:INFO:Visual Rendered Successfully
2023-07-02 13:53:04,211:INFO:plot_model() successfully completed......................................
2023-07-02 13:53:04,228:INFO:Initializing plot_model()
2023-07-02 13:53:04,229:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, system=True)
2023-07-02 13:53:04,229:INFO:Checking exceptions
2023-07-02 13:53:04,233:INFO:Preloading libraries
2023-07-02 13:53:04,233:INFO:Copying training dataset
2023-07-02 13:53:04,233:INFO:Plot type: auc
2023-07-02 13:53:04,308:INFO:Fitting Model
2023-07-02 13:53:04,308:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:53:04,308:INFO:Scoring test/hold-out set
2023-07-02 13:53:04,454:INFO:Visual Rendered Successfully
2023-07-02 13:53:04,565:INFO:plot_model() successfully completed......................................
2023-07-02 13:53:04,584:INFO:Initializing plot_model()
2023-07-02 13:53:04,584:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, system=True)
2023-07-02 13:53:04,585:INFO:Checking exceptions
2023-07-02 13:53:04,589:INFO:Preloading libraries
2023-07-02 13:53:04,589:INFO:Copying training dataset
2023-07-02 13:53:04,589:INFO:Plot type: pr
2023-07-02 13:53:04,665:INFO:Fitting Model
2023-07-02 13:53:04,665:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-07-02 13:53:04,666:INFO:Scoring test/hold-out set
2023-07-02 13:53:04,795:INFO:Visual Rendered Successfully
2023-07-02 13:53:04,912:INFO:plot_model() successfully completed......................................
2023-07-02 13:53:04,925:INFO:Initializing predict_model()
2023-07-02 13:53:04,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DA204A65E0>)
2023-07-02 13:53:04,926:INFO:Checking exceptions
2023-07-02 13:53:04,926:INFO:Preloading libraries
2023-07-02 13:53:05,129:INFO:Initializing finalize_model()
2023-07-02 13:53:05,129:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 13:53:05,129:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:53:05,133:INFO:Initializing create_model()
2023-07-02 13:53:05,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 13:53:05,133:INFO:Checking exceptions
2023-07-02 13:53:05,135:INFO:Importing libraries
2023-07-02 13:53:05,135:INFO:Copying training dataset
2023-07-02 13:53:05,135:INFO:Defining folds
2023-07-02 13:53:05,136:INFO:Declaring metric variables
2023-07-02 13:53:05,136:INFO:Importing untrained model
2023-07-02 13:53:05,136:INFO:Declaring custom model
2023-07-02 13:53:05,136:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:53:05,137:INFO:Cross validation set to False
2023-07-02 13:53:05,137:INFO:Fitting Model
2023-07-02 13:53:05,167:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2023-07-02 13:53:05,168:INFO:create_model() successfully completed......................................
2023-07-02 13:53:05,288:INFO:_master_model_container: 17
2023-07-02 13:53:05,288:INFO:_display_container: 5
2023-07-02 13:53:05,294:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2023-07-02 13:53:05,294:INFO:finalize_model() successfully completed......................................
2023-07-02 13:55:52,724:INFO:Initializing create_model()
2023-07-02 13:55:52,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:55:52,724:INFO:Checking exceptions
2023-07-02 13:55:52,754:INFO:Importing libraries
2023-07-02 13:55:52,755:INFO:Copying training dataset
2023-07-02 13:55:52,761:INFO:Defining folds
2023-07-02 13:55:52,761:INFO:Declaring metric variables
2023-07-02 13:55:52,765:INFO:Importing untrained model
2023-07-02 13:55:52,771:INFO:Logistic Regression Imported successfully
2023-07-02 13:55:52,778:INFO:Starting cross validation
2023-07-02 13:55:52,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:56:03,394:INFO:Calculating mean and std
2023-07-02 13:56:03,397:INFO:Creating metrics dataframe
2023-07-02 13:56:03,405:INFO:Finalizing model
2023-07-02 13:56:05,078:INFO:Uploading results into container
2023-07-02 13:56:05,079:INFO:Uploading model into container now
2023-07-02 13:56:05,092:INFO:_master_model_container: 18
2023-07-02 13:56:05,093:INFO:_display_container: 6
2023-07-02 13:56:05,094:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:56:05,094:INFO:create_model() successfully completed......................................
2023-07-02 13:56:17,618:INFO:Initializing plot_model()
2023-07-02 13:56:17,618:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA1D9C17F0>, system=True)
2023-07-02 13:56:17,618:INFO:Checking exceptions
2023-07-02 13:56:17,622:INFO:Preloading libraries
2023-07-02 13:56:17,622:INFO:Copying training dataset
2023-07-02 13:56:17,622:INFO:Plot type: confusion_matrix
2023-07-02 13:56:17,697:INFO:Fitting Model
2023-07-02 13:56:17,697:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 13:56:17,697:INFO:Scoring test/hold-out set
2023-07-02 13:56:17,783:INFO:Visual Rendered Successfully
2023-07-02 13:56:17,905:INFO:plot_model() successfully completed......................................
2023-07-02 13:56:45,638:INFO:PyCaret ClassificationExperiment
2023-07-02 13:56:45,638:INFO:Logging name: clf-default-name
2023-07-02 13:56:45,638:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-02 13:56:45,639:INFO:version 3.0.0
2023-07-02 13:56:45,639:INFO:Initializing setup()
2023-07-02 13:56:45,639:INFO:self.USI: 7447
2023-07-02 13:56:45,639:INFO:self._variable_keys: {'memory', 'target_param', 'fold_shuffle_param', 'exp_id', 'gpu_param', '_available_plots', 'y_train', 'html_param', 'gpu_n_jobs_param', 'logging_param', 'X_test', 'data', 'X', 'seed', 'pipeline', 'y', 'is_multiclass', 'y_test', 'fix_imbalance', 'idx', 'X_train', 'log_plots_param', '_ml_usecase', 'USI', 'exp_name_log', 'fold_generator', 'n_jobs_param', 'fold_groups_param'}
2023-07-02 13:56:45,639:INFO:Checking environment
2023-07-02 13:56:45,639:INFO:python_version: 3.9.13
2023-07-02 13:56:45,639:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-07-02 13:56:45,639:INFO:machine: AMD64
2023-07-02 13:56:45,639:INFO:platform: Windows-10-10.0.22621-SP0
2023-07-02 13:56:45,639:INFO:Memory: svmem(total=16456249344, available=1239130112, percent=92.5, used=15217119232, free=1239130112)
2023-07-02 13:56:45,639:INFO:Physical Core: 6
2023-07-02 13:56:45,639:INFO:Logical Core: 12
2023-07-02 13:56:45,639:INFO:Checking libraries
2023-07-02 13:56:45,639:INFO:System:
2023-07-02 13:56:45,639:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-07-02 13:56:45,639:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-07-02 13:56:45,639:INFO:   machine: Windows-10-10.0.22621-SP0
2023-07-02 13:56:45,639:INFO:PyCaret required dependencies:
2023-07-02 13:56:45,639:INFO:                 pip: 22.2.2
2023-07-02 13:56:45,639:INFO:          setuptools: 63.4.1
2023-07-02 13:56:45,639:INFO:             pycaret: 3.0.0
2023-07-02 13:56:45,640:INFO:             IPython: 7.31.1
2023-07-02 13:56:45,640:INFO:          ipywidgets: 7.6.5
2023-07-02 13:56:45,640:INFO:                tqdm: 4.64.1
2023-07-02 13:56:45,640:INFO:               numpy: 1.21.5
2023-07-02 13:56:45,640:INFO:              pandas: 1.4.4
2023-07-02 13:56:45,640:INFO:              jinja2: 3.1.2
2023-07-02 13:56:45,640:INFO:               scipy: 1.9.1
2023-07-02 13:56:45,640:INFO:              joblib: 1.2.0
2023-07-02 13:56:45,640:INFO:             sklearn: 1.0.2
2023-07-02 13:56:45,640:INFO:                pyod: 1.0.9
2023-07-02 13:56:45,640:INFO:            imblearn: 0.10.1
2023-07-02 13:56:45,640:INFO:   category_encoders: 2.6.0
2023-07-02 13:56:45,640:INFO:            lightgbm: 3.3.5
2023-07-02 13:56:45,640:INFO:               numba: 0.55.1
2023-07-02 13:56:45,640:INFO:            requests: 2.28.1
2023-07-02 13:56:45,640:INFO:          matplotlib: 3.5.2
2023-07-02 13:56:45,640:INFO:          scikitplot: 0.3.7
2023-07-02 13:56:45,640:INFO:         yellowbrick: 1.5
2023-07-02 13:56:45,640:INFO:              plotly: 5.9.0
2023-07-02 13:56:45,640:INFO:             kaleido: 0.2.1
2023-07-02 13:56:45,640:INFO:         statsmodels: 0.13.2
2023-07-02 13:56:45,640:INFO:              sktime: 0.16.1
2023-07-02 13:56:45,640:INFO:               tbats: 1.1.2
2023-07-02 13:56:45,640:INFO:            pmdarima: 2.0.3
2023-07-02 13:56:45,640:INFO:              psutil: 5.9.0
2023-07-02 13:56:45,640:INFO:PyCaret optional dependencies:
2023-07-02 13:56:45,641:INFO:                shap: 0.41.0
2023-07-02 13:56:45,641:INFO:           interpret: Not installed
2023-07-02 13:56:45,641:INFO:                umap: Not installed
2023-07-02 13:56:45,641:INFO:    pandas_profiling: Not installed
2023-07-02 13:56:45,641:INFO:  explainerdashboard: Not installed
2023-07-02 13:56:45,641:INFO:             autoviz: Not installed
2023-07-02 13:56:45,641:INFO:           fairlearn: Not installed
2023-07-02 13:56:45,641:INFO:             xgboost: Not installed
2023-07-02 13:56:45,641:INFO:            catboost: Not installed
2023-07-02 13:56:45,641:INFO:              kmodes: Not installed
2023-07-02 13:56:45,641:INFO:             mlxtend: Not installed
2023-07-02 13:56:45,641:INFO:       statsforecast: Not installed
2023-07-02 13:56:45,641:INFO:        tune_sklearn: 0.4.5
2023-07-02 13:56:45,641:INFO:                 ray: 2.3.1
2023-07-02 13:56:45,641:INFO:            hyperopt: Not installed
2023-07-02 13:56:45,641:INFO:              optuna: 3.1.0
2023-07-02 13:56:45,641:INFO:               skopt: Not installed
2023-07-02 13:56:45,641:INFO:              mlflow: 2.2.2
2023-07-02 13:56:45,641:INFO:              gradio: 3.23.0
2023-07-02 13:56:45,641:INFO:             fastapi: 0.95.0
2023-07-02 13:56:45,641:INFO:             uvicorn: 0.21.1
2023-07-02 13:56:45,641:INFO:              m2cgen: Not installed
2023-07-02 13:56:45,641:INFO:           evidently: Not installed
2023-07-02 13:56:45,641:INFO:               fugue: Not installed
2023-07-02 13:56:45,641:INFO:           streamlit: 1.20.0
2023-07-02 13:56:45,641:INFO:             prophet: Not installed
2023-07-02 13:56:45,641:INFO:None
2023-07-02 13:56:45,642:INFO:Set up data.
2023-07-02 13:56:45,645:INFO:Set up train/test split.
2023-07-02 13:56:45,648:INFO:Set up index.
2023-07-02 13:56:45,648:INFO:Set up folding strategy.
2023-07-02 13:56:45,648:INFO:Assigning column types.
2023-07-02 13:56:45,651:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-02 13:56:45,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:56:45,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:56:45,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-02 13:56:45,778:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:56:45,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,808:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-02 13:56:45,856:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:56:45,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,933:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-02 13:56:45,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:45,964:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-02 13:56:46,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,121:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,122:INFO:Preparing preprocessing pipeline...
2023-07-02 13:56:46,123:INFO:Set up simple imputation.
2023-07-02 13:56:46,123:INFO:Set up feature normalization.
2023-07-02 13:56:46,143:INFO:Finished creating preprocessing pipeline.
2023-07-02 13:56:46,147:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2023-07-02 13:56:46,147:INFO:Creating final display dataframe.
2023-07-02 13:56:46,215:INFO:Setup _display_container:                     Description             Value
0                    Session id              4942
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 7)
4        Transformed data shape          (768, 7)
5   Transformed train set shape          (614, 7)
6    Transformed test set shape          (154, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            minmax
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7447
2023-07-02 13:56:46,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-02 13:56:46,381:INFO:setup() successfully completed in 1.51s...............
2023-07-02 13:56:48,429:INFO:Initializing compare_models()
2023-07-02 13:56:48,429:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-02 13:56:48,429:INFO:Checking exceptions
2023-07-02 13:56:48,432:INFO:Preparing display monitor
2023-07-02 13:56:48,473:INFO:Initializing Logistic Regression
2023-07-02 13:56:48,473:INFO:Total runtime is 0.0 minutes
2023-07-02 13:56:48,479:INFO:SubProcess create_model() called ==================================
2023-07-02 13:56:48,479:INFO:Initializing create_model()
2023-07-02 13:56:48,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:56:48,479:INFO:Checking exceptions
2023-07-02 13:56:48,479:INFO:Importing libraries
2023-07-02 13:56:48,479:INFO:Copying training dataset
2023-07-02 13:56:48,483:INFO:Defining folds
2023-07-02 13:56:48,483:INFO:Declaring metric variables
2023-07-02 13:56:48,487:INFO:Importing untrained model
2023-07-02 13:56:48,491:INFO:Logistic Regression Imported successfully
2023-07-02 13:56:48,498:INFO:Starting cross validation
2023-07-02 13:56:48,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:56:57,952:INFO:Calculating mean and std
2023-07-02 13:56:57,954:INFO:Creating metrics dataframe
2023-07-02 13:56:59,527:INFO:Uploading results into container
2023-07-02 13:56:59,528:INFO:Uploading model into container now
2023-07-02 13:56:59,529:INFO:_master_model_container: 1
2023-07-02 13:56:59,529:INFO:_display_container: 2
2023-07-02 13:56:59,529:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:56:59,530:INFO:create_model() successfully completed......................................
2023-07-02 13:56:59,694:INFO:SubProcess create_model() end ==================================
2023-07-02 13:56:59,694:INFO:Creating metrics dataframe
2023-07-02 13:56:59,704:INFO:Initializing K Neighbors Classifier
2023-07-02 13:56:59,705:INFO:Total runtime is 0.18720215956370037 minutes
2023-07-02 13:56:59,710:INFO:SubProcess create_model() called ==================================
2023-07-02 13:56:59,711:INFO:Initializing create_model()
2023-07-02 13:56:59,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:56:59,711:INFO:Checking exceptions
2023-07-02 13:56:59,711:INFO:Importing libraries
2023-07-02 13:56:59,712:INFO:Copying training dataset
2023-07-02 13:56:59,718:INFO:Defining folds
2023-07-02 13:56:59,718:INFO:Declaring metric variables
2023-07-02 13:56:59,724:INFO:Importing untrained model
2023-07-02 13:56:59,731:INFO:K Neighbors Classifier Imported successfully
2023-07-02 13:56:59,742:INFO:Starting cross validation
2023-07-02 13:56:59,744:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:56:59,877:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,898:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,898:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,900:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,913:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,932:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,940:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,949:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:56:59,961:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-07-02 13:57:11,617:INFO:Calculating mean and std
2023-07-02 13:57:11,619:INFO:Creating metrics dataframe
2023-07-02 13:57:13,805:INFO:Uploading results into container
2023-07-02 13:57:13,806:INFO:Uploading model into container now
2023-07-02 13:57:13,807:INFO:_master_model_container: 2
2023-07-02 13:57:13,807:INFO:_display_container: 2
2023-07-02 13:57:13,807:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-02 13:57:13,807:INFO:create_model() successfully completed......................................
2023-07-02 13:57:14,100:INFO:SubProcess create_model() end ==================================
2023-07-02 13:57:14,101:INFO:Creating metrics dataframe
2023-07-02 13:57:14,128:INFO:Initializing Naive Bayes
2023-07-02 13:57:14,129:INFO:Total runtime is 0.4276096343994141 minutes
2023-07-02 13:57:14,141:INFO:SubProcess create_model() called ==================================
2023-07-02 13:57:14,141:INFO:Initializing create_model()
2023-07-02 13:57:14,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:57:14,142:INFO:Checking exceptions
2023-07-02 13:57:14,142:INFO:Importing libraries
2023-07-02 13:57:14,143:INFO:Copying training dataset
2023-07-02 13:57:14,158:INFO:Defining folds
2023-07-02 13:57:14,158:INFO:Declaring metric variables
2023-07-02 13:57:14,165:INFO:Importing untrained model
2023-07-02 13:57:14,175:INFO:Naive Bayes Imported successfully
2023-07-02 13:57:14,191:INFO:Starting cross validation
2023-07-02 13:57:14,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:57:29,382:INFO:Calculating mean and std
2023-07-02 13:57:29,384:INFO:Creating metrics dataframe
2023-07-02 13:57:32,383:INFO:Uploading results into container
2023-07-02 13:57:32,385:INFO:Uploading model into container now
2023-07-02 13:57:32,385:INFO:_master_model_container: 3
2023-07-02 13:57:32,386:INFO:_display_container: 2
2023-07-02 13:57:32,386:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-02 13:57:32,386:INFO:create_model() successfully completed......................................
2023-07-02 13:57:32,573:INFO:SubProcess create_model() end ==================================
2023-07-02 13:57:32,573:INFO:Creating metrics dataframe
2023-07-02 13:57:32,588:INFO:Initializing Decision Tree Classifier
2023-07-02 13:57:32,588:INFO:Total runtime is 0.7352534055709838 minutes
2023-07-02 13:57:32,595:INFO:SubProcess create_model() called ==================================
2023-07-02 13:57:32,596:INFO:Initializing create_model()
2023-07-02 13:57:32,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:57:32,597:INFO:Checking exceptions
2023-07-02 13:57:32,597:INFO:Importing libraries
2023-07-02 13:57:32,597:INFO:Copying training dataset
2023-07-02 13:57:32,605:INFO:Defining folds
2023-07-02 13:57:32,605:INFO:Declaring metric variables
2023-07-02 13:57:32,613:INFO:Importing untrained model
2023-07-02 13:57:32,619:INFO:Decision Tree Classifier Imported successfully
2023-07-02 13:57:32,630:INFO:Starting cross validation
2023-07-02 13:57:32,631:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:57:44,763:INFO:Calculating mean and std
2023-07-02 13:57:44,766:INFO:Creating metrics dataframe
2023-07-02 13:57:47,848:INFO:Uploading results into container
2023-07-02 13:57:47,850:INFO:Uploading model into container now
2023-07-02 13:57:47,851:INFO:_master_model_container: 4
2023-07-02 13:57:47,851:INFO:_display_container: 2
2023-07-02 13:57:47,852:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4942, splitter='best')
2023-07-02 13:57:47,853:INFO:create_model() successfully completed......................................
2023-07-02 13:57:48,042:INFO:SubProcess create_model() end ==================================
2023-07-02 13:57:48,042:INFO:Creating metrics dataframe
2023-07-02 13:57:48,057:INFO:Initializing SVM - Linear Kernel
2023-07-02 13:57:48,057:INFO:Total runtime is 0.9930636922518412 minutes
2023-07-02 13:57:48,061:INFO:SubProcess create_model() called ==================================
2023-07-02 13:57:48,062:INFO:Initializing create_model()
2023-07-02 13:57:48,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:57:48,062:INFO:Checking exceptions
2023-07-02 13:57:48,062:INFO:Importing libraries
2023-07-02 13:57:48,063:INFO:Copying training dataset
2023-07-02 13:57:48,068:INFO:Defining folds
2023-07-02 13:57:48,069:INFO:Declaring metric variables
2023-07-02 13:57:48,073:INFO:Importing untrained model
2023-07-02 13:57:48,078:INFO:SVM - Linear Kernel Imported successfully
2023-07-02 13:57:48,088:INFO:Starting cross validation
2023-07-02 13:57:48,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:57:48,219:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,226:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,271:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,295:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,308:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,312:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,315:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,331:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,350:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:57:48,387:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-02 13:58:01,804:INFO:Calculating mean and std
2023-07-02 13:58:01,806:INFO:Creating metrics dataframe
2023-07-02 13:58:03,758:INFO:Uploading results into container
2023-07-02 13:58:03,759:INFO:Uploading model into container now
2023-07-02 13:58:03,760:INFO:_master_model_container: 5
2023-07-02 13:58:03,760:INFO:_display_container: 2
2023-07-02 13:58:03,761:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4942, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-02 13:58:03,761:INFO:create_model() successfully completed......................................
2023-07-02 13:58:03,921:INFO:SubProcess create_model() end ==================================
2023-07-02 13:58:03,921:INFO:Creating metrics dataframe
2023-07-02 13:58:03,938:INFO:Initializing Ridge Classifier
2023-07-02 13:58:03,938:INFO:Total runtime is 1.2577591737111409 minutes
2023-07-02 13:58:03,944:INFO:SubProcess create_model() called ==================================
2023-07-02 13:58:03,944:INFO:Initializing create_model()
2023-07-02 13:58:03,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:58:03,945:INFO:Checking exceptions
2023-07-02 13:58:03,945:INFO:Importing libraries
2023-07-02 13:58:03,945:INFO:Copying training dataset
2023-07-02 13:58:03,954:INFO:Defining folds
2023-07-02 13:58:03,955:INFO:Declaring metric variables
2023-07-02 13:58:03,962:INFO:Importing untrained model
2023-07-02 13:58:03,969:INFO:Ridge Classifier Imported successfully
2023-07-02 13:58:03,981:INFO:Starting cross validation
2023-07-02 13:58:03,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:58:04,112:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,127:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,141:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,146:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,153:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,171:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,175:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,189:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,204:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:04,205:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-02 13:58:15,295:INFO:Calculating mean and std
2023-07-02 13:58:15,296:INFO:Creating metrics dataframe
2023-07-02 13:58:17,072:INFO:Uploading results into container
2023-07-02 13:58:17,073:INFO:Uploading model into container now
2023-07-02 13:58:17,074:INFO:_master_model_container: 6
2023-07-02 13:58:17,074:INFO:_display_container: 2
2023-07-02 13:58:17,075:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4942, solver='auto', tol=0.001)
2023-07-02 13:58:17,076:INFO:create_model() successfully completed......................................
2023-07-02 13:58:17,223:INFO:SubProcess create_model() end ==================================
2023-07-02 13:58:17,223:INFO:Creating metrics dataframe
2023-07-02 13:58:17,236:INFO:Initializing Random Forest Classifier
2023-07-02 13:58:17,237:INFO:Total runtime is 1.4793978214263914 minutes
2023-07-02 13:58:17,243:INFO:SubProcess create_model() called ==================================
2023-07-02 13:58:17,243:INFO:Initializing create_model()
2023-07-02 13:58:17,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:58:17,244:INFO:Checking exceptions
2023-07-02 13:58:17,244:INFO:Importing libraries
2023-07-02 13:58:17,244:INFO:Copying training dataset
2023-07-02 13:58:17,251:INFO:Defining folds
2023-07-02 13:58:17,252:INFO:Declaring metric variables
2023-07-02 13:58:17,257:INFO:Importing untrained model
2023-07-02 13:58:17,262:INFO:Random Forest Classifier Imported successfully
2023-07-02 13:58:17,271:INFO:Starting cross validation
2023-07-02 13:58:17,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:58:29,261:INFO:Calculating mean and std
2023-07-02 13:58:29,262:INFO:Creating metrics dataframe
2023-07-02 13:58:31,290:INFO:Uploading results into container
2023-07-02 13:58:31,290:INFO:Uploading model into container now
2023-07-02 13:58:31,291:INFO:_master_model_container: 7
2023-07-02 13:58:31,291:INFO:_display_container: 2
2023-07-02 13:58:31,291:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4942, verbose=0, warm_start=False)
2023-07-02 13:58:31,292:INFO:create_model() successfully completed......................................
2023-07-02 13:58:31,416:INFO:SubProcess create_model() end ==================================
2023-07-02 13:58:31,416:INFO:Creating metrics dataframe
2023-07-02 13:58:31,427:INFO:Initializing Quadratic Discriminant Analysis
2023-07-02 13:58:31,427:INFO:Total runtime is 1.7159017920494077 minutes
2023-07-02 13:58:31,431:INFO:SubProcess create_model() called ==================================
2023-07-02 13:58:31,431:INFO:Initializing create_model()
2023-07-02 13:58:31,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:58:31,432:INFO:Checking exceptions
2023-07-02 13:58:31,432:INFO:Importing libraries
2023-07-02 13:58:31,432:INFO:Copying training dataset
2023-07-02 13:58:31,438:INFO:Defining folds
2023-07-02 13:58:31,438:INFO:Declaring metric variables
2023-07-02 13:58:31,444:INFO:Importing untrained model
2023-07-02 13:58:31,448:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-02 13:58:31,457:INFO:Starting cross validation
2023-07-02 13:58:31,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:58:42,623:INFO:Calculating mean and std
2023-07-02 13:58:42,625:INFO:Creating metrics dataframe
2023-07-02 13:58:44,036:INFO:Uploading results into container
2023-07-02 13:58:44,037:INFO:Uploading model into container now
2023-07-02 13:58:44,037:INFO:_master_model_container: 8
2023-07-02 13:58:44,038:INFO:_display_container: 2
2023-07-02 13:58:44,038:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-02 13:58:44,038:INFO:create_model() successfully completed......................................
2023-07-02 13:58:44,164:INFO:SubProcess create_model() end ==================================
2023-07-02 13:58:44,164:INFO:Creating metrics dataframe
2023-07-02 13:58:44,175:INFO:Initializing Ada Boost Classifier
2023-07-02 13:58:44,175:INFO:Total runtime is 1.9283672928810118 minutes
2023-07-02 13:58:44,179:INFO:SubProcess create_model() called ==================================
2023-07-02 13:58:44,180:INFO:Initializing create_model()
2023-07-02 13:58:44,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:58:44,180:INFO:Checking exceptions
2023-07-02 13:58:44,180:INFO:Importing libraries
2023-07-02 13:58:44,181:INFO:Copying training dataset
2023-07-02 13:58:44,186:INFO:Defining folds
2023-07-02 13:58:44,186:INFO:Declaring metric variables
2023-07-02 13:58:44,190:INFO:Importing untrained model
2023-07-02 13:58:44,194:INFO:Ada Boost Classifier Imported successfully
2023-07-02 13:58:44,203:INFO:Starting cross validation
2023-07-02 13:58:44,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:58:55,548:INFO:Calculating mean and std
2023-07-02 13:58:55,551:INFO:Creating metrics dataframe
2023-07-02 13:58:56,989:INFO:Uploading results into container
2023-07-02 13:58:56,990:INFO:Uploading model into container now
2023-07-02 13:58:56,991:INFO:_master_model_container: 9
2023-07-02 13:58:56,991:INFO:_display_container: 2
2023-07-02 13:58:56,992:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4942)
2023-07-02 13:58:56,992:INFO:create_model() successfully completed......................................
2023-07-02 13:58:57,119:INFO:SubProcess create_model() end ==================================
2023-07-02 13:58:57,119:INFO:Creating metrics dataframe
2023-07-02 13:58:57,132:INFO:Initializing Gradient Boosting Classifier
2023-07-02 13:58:57,132:INFO:Total runtime is 2.1443139076232907 minutes
2023-07-02 13:58:57,136:INFO:SubProcess create_model() called ==================================
2023-07-02 13:58:57,137:INFO:Initializing create_model()
2023-07-02 13:58:57,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:58:57,137:INFO:Checking exceptions
2023-07-02 13:58:57,137:INFO:Importing libraries
2023-07-02 13:58:57,138:INFO:Copying training dataset
2023-07-02 13:58:57,144:INFO:Defining folds
2023-07-02 13:58:57,144:INFO:Declaring metric variables
2023-07-02 13:58:57,149:INFO:Importing untrained model
2023-07-02 13:58:57,153:INFO:Gradient Boosting Classifier Imported successfully
2023-07-02 13:58:57,162:INFO:Starting cross validation
2023-07-02 13:58:57,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:59:10,642:INFO:Calculating mean and std
2023-07-02 13:59:10,645:INFO:Creating metrics dataframe
2023-07-02 13:59:13,427:INFO:Uploading results into container
2023-07-02 13:59:13,428:INFO:Uploading model into container now
2023-07-02 13:59:13,429:INFO:_master_model_container: 10
2023-07-02 13:59:13,430:INFO:_display_container: 2
2023-07-02 13:59:13,431:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4942, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-02 13:59:13,432:INFO:create_model() successfully completed......................................
2023-07-02 13:59:13,642:INFO:SubProcess create_model() end ==================================
2023-07-02 13:59:13,642:INFO:Creating metrics dataframe
2023-07-02 13:59:13,668:INFO:Initializing Linear Discriminant Analysis
2023-07-02 13:59:13,669:INFO:Total runtime is 2.419936096668243 minutes
2023-07-02 13:59:13,678:INFO:SubProcess create_model() called ==================================
2023-07-02 13:59:13,679:INFO:Initializing create_model()
2023-07-02 13:59:13,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:59:13,680:INFO:Checking exceptions
2023-07-02 13:59:13,680:INFO:Importing libraries
2023-07-02 13:59:13,681:INFO:Copying training dataset
2023-07-02 13:59:13,689:INFO:Defining folds
2023-07-02 13:59:13,690:INFO:Declaring metric variables
2023-07-02 13:59:13,695:INFO:Importing untrained model
2023-07-02 13:59:13,703:INFO:Linear Discriminant Analysis Imported successfully
2023-07-02 13:59:13,716:INFO:Starting cross validation
2023-07-02 13:59:13,717:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:59:24,085:INFO:Calculating mean and std
2023-07-02 13:59:24,087:INFO:Creating metrics dataframe
2023-07-02 13:59:25,384:INFO:Uploading results into container
2023-07-02 13:59:25,384:INFO:Uploading model into container now
2023-07-02 13:59:25,385:INFO:_master_model_container: 11
2023-07-02 13:59:25,385:INFO:_display_container: 2
2023-07-02 13:59:25,385:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-02 13:59:25,385:INFO:create_model() successfully completed......................................
2023-07-02 13:59:25,499:INFO:SubProcess create_model() end ==================================
2023-07-02 13:59:25,500:INFO:Creating metrics dataframe
2023-07-02 13:59:25,511:INFO:Initializing Extra Trees Classifier
2023-07-02 13:59:25,511:INFO:Total runtime is 2.617310003439585 minutes
2023-07-02 13:59:25,514:INFO:SubProcess create_model() called ==================================
2023-07-02 13:59:25,514:INFO:Initializing create_model()
2023-07-02 13:59:25,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:59:25,514:INFO:Checking exceptions
2023-07-02 13:59:25,514:INFO:Importing libraries
2023-07-02 13:59:25,515:INFO:Copying training dataset
2023-07-02 13:59:25,519:INFO:Defining folds
2023-07-02 13:59:25,519:INFO:Declaring metric variables
2023-07-02 13:59:25,522:INFO:Importing untrained model
2023-07-02 13:59:25,525:INFO:Extra Trees Classifier Imported successfully
2023-07-02 13:59:25,532:INFO:Starting cross validation
2023-07-02 13:59:25,532:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:59:35,401:INFO:Calculating mean and std
2023-07-02 13:59:35,403:INFO:Creating metrics dataframe
2023-07-02 13:59:36,680:INFO:Uploading results into container
2023-07-02 13:59:36,681:INFO:Uploading model into container now
2023-07-02 13:59:36,681:INFO:_master_model_container: 12
2023-07-02 13:59:36,682:INFO:_display_container: 2
2023-07-02 13:59:36,682:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4942, verbose=0, warm_start=False)
2023-07-02 13:59:36,682:INFO:create_model() successfully completed......................................
2023-07-02 13:59:36,800:INFO:SubProcess create_model() end ==================================
2023-07-02 13:59:36,800:INFO:Creating metrics dataframe
2023-07-02 13:59:36,812:INFO:Initializing Light Gradient Boosting Machine
2023-07-02 13:59:36,812:INFO:Total runtime is 2.8056521614392596 minutes
2023-07-02 13:59:36,816:INFO:SubProcess create_model() called ==================================
2023-07-02 13:59:36,816:INFO:Initializing create_model()
2023-07-02 13:59:36,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:59:36,817:INFO:Checking exceptions
2023-07-02 13:59:36,817:INFO:Importing libraries
2023-07-02 13:59:36,817:INFO:Copying training dataset
2023-07-02 13:59:36,822:INFO:Defining folds
2023-07-02 13:59:36,822:INFO:Declaring metric variables
2023-07-02 13:59:36,825:INFO:Importing untrained model
2023-07-02 13:59:36,830:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-02 13:59:36,837:INFO:Starting cross validation
2023-07-02 13:59:36,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:59:46,374:INFO:Calculating mean and std
2023-07-02 13:59:46,376:INFO:Creating metrics dataframe
2023-07-02 13:59:47,603:INFO:Uploading results into container
2023-07-02 13:59:47,604:INFO:Uploading model into container now
2023-07-02 13:59:47,605:INFO:_master_model_container: 13
2023-07-02 13:59:47,605:INFO:_display_container: 2
2023-07-02 13:59:47,605:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4942, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-02 13:59:47,605:INFO:create_model() successfully completed......................................
2023-07-02 13:59:47,721:INFO:SubProcess create_model() end ==================================
2023-07-02 13:59:47,721:INFO:Creating metrics dataframe
2023-07-02 13:59:47,734:INFO:Initializing Dummy Classifier
2023-07-02 13:59:47,734:INFO:Total runtime is 2.98768964211146 minutes
2023-07-02 13:59:47,738:INFO:SubProcess create_model() called ==================================
2023-07-02 13:59:47,738:INFO:Initializing create_model()
2023-07-02 13:59:47,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA2031D910>, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:59:47,738:INFO:Checking exceptions
2023-07-02 13:59:47,739:INFO:Importing libraries
2023-07-02 13:59:47,739:INFO:Copying training dataset
2023-07-02 13:59:47,743:INFO:Defining folds
2023-07-02 13:59:47,743:INFO:Declaring metric variables
2023-07-02 13:59:47,747:INFO:Importing untrained model
2023-07-02 13:59:47,751:INFO:Dummy Classifier Imported successfully
2023-07-02 13:59:47,758:INFO:Starting cross validation
2023-07-02 13:59:47,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 13:59:47,864:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,873:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,882:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,883:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,892:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,909:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,921:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,931:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,935:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:47,935:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-02 13:59:56,995:INFO:Calculating mean and std
2023-07-02 13:59:56,997:INFO:Creating metrics dataframe
2023-07-02 13:59:58,231:INFO:Uploading results into container
2023-07-02 13:59:58,232:INFO:Uploading model into container now
2023-07-02 13:59:58,233:INFO:_master_model_container: 14
2023-07-02 13:59:58,233:INFO:_display_container: 2
2023-07-02 13:59:58,234:INFO:DummyClassifier(constant=None, random_state=4942, strategy='prior')
2023-07-02 13:59:58,234:INFO:create_model() successfully completed......................................
2023-07-02 13:59:58,347:INFO:SubProcess create_model() end ==================================
2023-07-02 13:59:58,347:INFO:Creating metrics dataframe
2023-07-02 13:59:58,369:INFO:Initializing create_model()
2023-07-02 13:59:58,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 13:59:58,369:INFO:Checking exceptions
2023-07-02 13:59:58,371:INFO:Importing libraries
2023-07-02 13:59:58,371:INFO:Copying training dataset
2023-07-02 13:59:58,374:INFO:Defining folds
2023-07-02 13:59:58,375:INFO:Declaring metric variables
2023-07-02 13:59:58,375:INFO:Importing untrained model
2023-07-02 13:59:58,375:INFO:Declaring custom model
2023-07-02 13:59:58,375:INFO:Logistic Regression Imported successfully
2023-07-02 13:59:58,376:INFO:Cross validation set to False
2023-07-02 13:59:58,376:INFO:Fitting Model
2023-07-02 13:59:59,212:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:59:59,212:INFO:create_model() successfully completed......................................
2023-07-02 13:59:59,352:INFO:_master_model_container: 14
2023-07-02 13:59:59,352:INFO:_display_container: 2
2023-07-02 13:59:59,352:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 13:59:59,353:INFO:compare_models() successfully completed......................................
2023-07-02 14:12:58,463:INFO:Initializing create_model()
2023-07-02 14:12:58,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 14:12:58,463:INFO:Checking exceptions
2023-07-02 14:12:58,493:INFO:Importing libraries
2023-07-02 14:12:58,493:INFO:Copying training dataset
2023-07-02 14:12:58,499:INFO:Defining folds
2023-07-02 14:12:58,500:INFO:Declaring metric variables
2023-07-02 14:12:58,504:INFO:Importing untrained model
2023-07-02 14:12:58,508:INFO:Logistic Regression Imported successfully
2023-07-02 14:12:58,515:INFO:Starting cross validation
2023-07-02 14:12:58,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 14:13:20,513:INFO:Calculating mean and std
2023-07-02 14:13:20,515:INFO:Creating metrics dataframe
2023-07-02 14:13:20,520:INFO:Finalizing model
2023-07-02 14:13:21,735:INFO:Uploading results into container
2023-07-02 14:13:21,736:INFO:Uploading model into container now
2023-07-02 14:13:21,744:INFO:_master_model_container: 15
2023-07-02 14:13:21,745:INFO:_display_container: 3
2023-07-02 14:13:21,745:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 14:13:21,745:INFO:create_model() successfully completed......................................
2023-07-02 14:13:21,913:INFO:Initializing tune_model()
2023-07-02 14:13:21,913:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>)
2023-07-02 14:13:21,913:INFO:Checking exceptions
2023-07-02 14:13:21,940:INFO:Copying training dataset
2023-07-02 14:13:21,943:INFO:Checking base model
2023-07-02 14:13:21,943:INFO:Base model : Logistic Regression
2023-07-02 14:13:21,947:INFO:Declaring metric variables
2023-07-02 14:13:21,950:INFO:Defining Hyperparameters
2023-07-02 14:13:22,070:INFO:Tuning with n_jobs=-1
2023-07-02 14:13:22,070:INFO:Initializing RandomizedSearchCV
2023-07-02 14:15:00,153:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 0.906}
2023-07-02 14:15:00,154:INFO:Hyperparameter search completed
2023-07-02 14:15:00,155:INFO:SubProcess create_model() called ==================================
2023-07-02 14:15:00,155:INFO:Initializing create_model()
2023-07-02 14:15:00,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA17B31070>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 0.906})
2023-07-02 14:15:00,155:INFO:Checking exceptions
2023-07-02 14:15:00,156:INFO:Importing libraries
2023-07-02 14:15:00,156:INFO:Copying training dataset
2023-07-02 14:15:00,160:INFO:Defining folds
2023-07-02 14:15:00,160:INFO:Declaring metric variables
2023-07-02 14:15:00,165:INFO:Importing untrained model
2023-07-02 14:15:00,166:INFO:Declaring custom model
2023-07-02 14:15:00,171:INFO:Logistic Regression Imported successfully
2023-07-02 14:15:00,179:INFO:Starting cross validation
2023-07-02 14:15:00,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 14:15:09,328:INFO:Calculating mean and std
2023-07-02 14:15:09,330:INFO:Creating metrics dataframe
2023-07-02 14:15:09,335:INFO:Finalizing model
2023-07-02 14:15:10,575:INFO:Uploading results into container
2023-07-02 14:15:10,576:INFO:Uploading model into container now
2023-07-02 14:15:10,577:INFO:_master_model_container: 16
2023-07-02 14:15:10,577:INFO:_display_container: 4
2023-07-02 14:15:10,577:INFO:LogisticRegression(C=0.906, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 14:15:10,577:INFO:create_model() successfully completed......................................
2023-07-02 14:15:10,695:INFO:SubProcess create_model() end ==================================
2023-07-02 14:15:10,695:INFO:choose_better activated
2023-07-02 14:15:10,699:INFO:SubProcess create_model() called ==================================
2023-07-02 14:15:10,699:INFO:Initializing create_model()
2023-07-02 14:15:10,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-02 14:15:10,700:INFO:Checking exceptions
2023-07-02 14:15:10,701:INFO:Importing libraries
2023-07-02 14:15:10,702:INFO:Copying training dataset
2023-07-02 14:15:10,704:INFO:Defining folds
2023-07-02 14:15:10,705:INFO:Declaring metric variables
2023-07-02 14:15:10,705:INFO:Importing untrained model
2023-07-02 14:15:10,705:INFO:Declaring custom model
2023-07-02 14:15:10,705:INFO:Logistic Regression Imported successfully
2023-07-02 14:15:10,706:INFO:Starting cross validation
2023-07-02 14:15:10,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-02 14:15:20,799:INFO:Calculating mean and std
2023-07-02 14:15:20,800:INFO:Creating metrics dataframe
2023-07-02 14:15:20,802:INFO:Finalizing model
2023-07-02 14:15:22,565:INFO:Uploading results into container
2023-07-02 14:15:22,566:INFO:Uploading model into container now
2023-07-02 14:15:22,567:INFO:_master_model_container: 17
2023-07-02 14:15:22,567:INFO:_display_container: 5
2023-07-02 14:15:22,567:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 14:15:22,567:INFO:create_model() successfully completed......................................
2023-07-02 14:15:22,710:INFO:SubProcess create_model() end ==================================
2023-07-02 14:15:22,711:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7865
2023-07-02 14:15:22,711:INFO:LogisticRegression(C=0.906, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7865
2023-07-02 14:15:22,711:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-07-02 14:15:22,711:INFO:choose_better completed
2023-07-02 14:15:22,712:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-07-02 14:15:22,725:INFO:_master_model_container: 17
2023-07-02 14:15:22,725:INFO:_display_container: 4
2023-07-02 14:15:22,726:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 14:15:22,727:INFO:tune_model() successfully completed......................................
2023-07-02 14:15:24,112:INFO:Initializing plot_model()
2023-07-02 14:15:24,113:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, system=True)
2023-07-02 14:15:24,113:INFO:Checking exceptions
2023-07-02 14:15:24,119:INFO:Preloading libraries
2023-07-02 14:15:24,120:INFO:Copying training dataset
2023-07-02 14:15:24,120:INFO:Plot type: manifold
2023-07-02 14:15:24,227:INFO:Fitting & Transforming Model
2023-07-02 14:15:24,227:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:790: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-07-02 14:15:24,266:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:982: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(

2023-07-02 14:15:26,917:INFO:Visual Rendered Successfully
2023-07-02 14:15:27,052:INFO:plot_model() successfully completed......................................
2023-07-02 14:15:27,069:INFO:Initializing plot_model()
2023-07-02 14:15:27,069:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, system=True)
2023-07-02 14:15:27,070:INFO:Checking exceptions
2023-07-02 14:15:27,074:INFO:Preloading libraries
2023-07-02 14:15:27,075:INFO:Copying training dataset
2023-07-02 14:15:27,075:INFO:Plot type: feature
2023-07-02 14:15:27,221:INFO:Visual Rendered Successfully
2023-07-02 14:15:27,361:INFO:plot_model() successfully completed......................................
2023-07-02 14:15:27,383:INFO:Initializing plot_model()
2023-07-02 14:15:27,383:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, system=True)
2023-07-02 14:15:27,383:INFO:Checking exceptions
2023-07-02 14:15:27,388:INFO:Preloading libraries
2023-07-02 14:15:27,389:INFO:Copying training dataset
2023-07-02 14:15:27,389:INFO:Plot type: confusion_matrix
2023-07-02 14:15:27,479:INFO:Fitting Model
2023-07-02 14:15:27,480:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 14:15:27,480:INFO:Scoring test/hold-out set
2023-07-02 14:15:27,586:INFO:Visual Rendered Successfully
2023-07-02 14:15:27,713:INFO:plot_model() successfully completed......................................
2023-07-02 14:15:27,731:INFO:Initializing plot_model()
2023-07-02 14:15:27,732:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, system=True)
2023-07-02 14:15:27,732:INFO:Checking exceptions
2023-07-02 14:15:27,737:INFO:Preloading libraries
2023-07-02 14:15:27,738:INFO:Copying training dataset
2023-07-02 14:15:27,738:INFO:Plot type: auc
2023-07-02 14:15:27,835:INFO:Fitting Model
2023-07-02 14:15:27,835:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 14:15:27,836:INFO:Scoring test/hold-out set
2023-07-02 14:15:28,004:INFO:Visual Rendered Successfully
2023-07-02 14:15:28,140:INFO:plot_model() successfully completed......................................
2023-07-02 14:15:28,161:INFO:Initializing plot_model()
2023-07-02 14:15:28,162:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, system=True)
2023-07-02 14:15:28,162:INFO:Checking exceptions
2023-07-02 14:15:28,167:INFO:Preloading libraries
2023-07-02 14:15:28,167:INFO:Copying training dataset
2023-07-02 14:15:28,168:INFO:Plot type: pr
2023-07-02 14:15:28,246:INFO:Fitting Model
2023-07-02 14:15:28,246:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-07-02 14:15:28,247:INFO:Scoring test/hold-out set
2023-07-02 14:15:28,394:INFO:Visual Rendered Successfully
2023-07-02 14:15:28,523:INFO:plot_model() successfully completed......................................
2023-07-02 14:15:28,537:INFO:Initializing predict_model()
2023-07-02 14:15:28,538:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DA20118430>)
2023-07-02 14:15:28,538:INFO:Checking exceptions
2023-07-02 14:15:28,538:INFO:Preloading libraries
2023-07-02 14:15:28,745:INFO:Initializing finalize_model()
2023-07-02 14:15:28,745:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 14:15:28,746:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 14:15:28,749:INFO:Initializing create_model()
2023-07-02 14:15:28,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 14:15:28,749:INFO:Checking exceptions
2023-07-02 14:15:28,752:INFO:Importing libraries
2023-07-02 14:15:28,752:INFO:Copying training dataset
2023-07-02 14:15:28,752:INFO:Defining folds
2023-07-02 14:15:28,752:INFO:Declaring metric variables
2023-07-02 14:15:28,752:INFO:Importing untrained model
2023-07-02 14:15:28,752:INFO:Declaring custom model
2023-07-02 14:15:28,753:INFO:Logistic Regression Imported successfully
2023-07-02 14:15:28,753:INFO:Cross validation set to False
2023-07-02 14:15:28,754:INFO:Fitting Model
2023-07-02 14:15:28,788:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 14:15:28,788:INFO:create_model() successfully completed......................................
2023-07-02 14:15:28,912:INFO:_master_model_container: 17
2023-07-02 14:15:28,912:INFO:_display_container: 5
2023-07-02 14:15:28,917:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 14:15:28,917:INFO:finalize_model() successfully completed......................................
2023-07-02 14:18:39,723:INFO:Initializing finalize_model()
2023-07-02 14:18:39,723:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-07-02 14:18:39,723:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-02 14:18:39,726:INFO:Initializing create_model()
2023-07-02 14:18:39,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA12118040>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-07-02 14:18:39,727:INFO:Checking exceptions
2023-07-02 14:18:39,729:INFO:Importing libraries
2023-07-02 14:18:39,729:INFO:Copying training dataset
2023-07-02 14:18:39,729:INFO:Defining folds
2023-07-02 14:18:39,729:INFO:Declaring metric variables
2023-07-02 14:18:39,729:INFO:Importing untrained model
2023-07-02 14:18:39,729:INFO:Declaring custom model
2023-07-02 14:18:39,730:INFO:Logistic Regression Imported successfully
2023-07-02 14:18:39,731:INFO:Cross validation set to False
2023-07-02 14:18:39,731:INFO:Fitting Model
2023-07-02 14:18:39,764:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 14:18:39,764:INFO:create_model() successfully completed......................................
2023-07-02 14:18:39,884:INFO:_master_model_container: 17
2023-07-02 14:18:39,884:INFO:_display_container: 5
2023-07-02 14:18:39,889:INFO:Pipeline(memory=FastMemory(location=C:\Users\nanji\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('c...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-07-02 14:18:39,889:INFO:finalize_model() successfully completed......................................
2023-07-02 15:19:38,682:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 15:19:42,014:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 15:19:53,903:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 15:19:59,922:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 15:20:00,649:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 15:25:45,792:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 15:26:11,562:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 16:30:53,991:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 16:32:23,815:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 16:32:28,569:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 16:32:50,738:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 16:32:54,932:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 16:33:31,632:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-02 16:34:10,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.
  warnings.warn(msg, category=FutureWarning)

2023-07-06 08:50:47,541:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:04:56,825:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:04:57,194:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:04:59,362:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:05:00,889:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:05:26,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:05:53,557:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:06:22,184:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:06:22,658:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:06:28,831:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:07:10,820:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:07:52,546:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:08:00,828:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:09:30,588:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:09:34,855:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:12:41,334:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:12:52,626:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:13:45,580:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:15:06,603:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:15:23,128:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:16:13,772:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:17:08,558:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:17:13,202:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:17:14,310:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:17:23,379:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:17:47,340:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:17:54,102:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:19:07,569:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:36:57,617:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:36:57,660:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- Outcome
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:37:10,706:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:37:33,821:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- Outcome
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:38:23,295:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:40:41,345:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:42:33,227:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Insulin
- Outcome
- SkinThickness
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:42:48,635:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:42:48,672:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Outcome
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:43:00,881:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:43:00,919:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Outcome
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:43:12,448:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:43:12,509:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Outcome
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:45:07,328:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:45:17,812:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Outcome
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:45:25,320:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:45:31,653:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Outcome
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:45:58,346:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:47:19,414:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:47:19,447:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Outcome
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:47:25,999:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:47:33,356:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- Outcome
Feature names must be in the same order as they were in fit.

  warnings.warn(message, FutureWarning)

2023-07-06 09:48:20,393:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:48:45,922:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:49:26,543:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:49:33,035:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:50:23,905:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:50:43,173:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:50:46,517:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 09:58:11,863:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:00:06,493:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:00:38,586:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:00:39,268:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:00:45,002:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:00:51,380:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:01:19,144:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:01:50,766:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:01:53,729:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:02:06,547:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:02:25,892:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:04:01,050:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:04:50,916:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:04:56,880:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:05:31,195:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:06:32,671:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:06:52,675:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:06:57,950:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:07:09,811:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:07:27,457:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:07:42,148:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:09:25,905:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:09:57,279:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:10:11,880:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:10:35,500:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:10:49,012:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:12:12,923:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:13:11,149:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:13:25,845:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:13:52,706:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:16:37,146:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:16:54,084:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:17:03,074:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:17:10,862:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:17:17,052:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:29:22,182:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:29:22,203:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2023-07-06 10:30:27,770:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:30:27,796:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2023-07-06 10:30:54,397:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:30:54,414:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2023-07-06 10:31:08,235:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:31:08,265:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2023-07-06 10:31:39,533:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:32:07,255:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:32:15,272:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:32:15,291:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2023-07-06 10:35:40,679:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:37:03,675:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:37:13,310:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:37:15,935:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:37:39,566:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:41:09,703:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:41:14,292:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:41:53,454:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:41:58,368:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:42:10,899:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:42:15,651:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:42:18,430:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:42:22,983:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:42:44,106:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:44:48,193:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:46:03,514:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:46:07,208:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:46:10,623:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:46:12,046:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:47:15,196:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:50:36,145:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:02,693:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:10,420:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:12,725:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:15,787:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:19,065:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:22,641:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:24,814:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:29,090:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:31,331:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:32,222:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:35,486:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:36,952:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:38,781:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:43,048:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:47,802:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:51:52,130:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:52:02,548:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:52:04,318:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:52:13,871:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:52:17,914:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:52:22,008:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:17,574:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:23,067:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:24,299:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:28,675:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:31,137:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:32,870:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:35,965:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:49,812:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:51,603:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:53,469:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:54,367:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:53:55,695:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:54:00,762:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:54:02,613:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:54:03,214:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:54:06,381:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2023-07-06 10:54:06,985:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

